{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0","program":"/Users/limaohui/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","atoi","--edition=2018","/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=72f2f4503cbf6516","-C","extra-filename=-72f2f4503cbf6516","--out-dir","/Users/limaohui/rust/rust-web/ws/webservice/target/rls/debug/deps","-L","dependency=/Users/limaohui/rust/rust-web/ws/webservice/target/rls/debug/deps","--extern","num_traits=/Users/limaohui/rust/rust-web/ws/webservice/target/rls/debug/deps/libnum_traits-9cda37f3087427c3.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/limaohui/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/limaohui/rust/rust-web/ws/webservice/target/rls/debug/deps/libatoi-72f2f4503cbf6516.rmeta"},"prelude":{"crate_id":{"name":"atoi","disambiguator":[16151877309705090662,0]},"crate_root":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src","external_crates":[{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[5737620048972976797,0]}},{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2242199718071837415,0]}},{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2188212999151601010,0]}},{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1020664553731942337,0]}},{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5221923779696816614,0]}},{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10454403582981253701,0]}},{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7392107620293427149,0]}},{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9383090470819858406,0]}},{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[13561338507145107503,0]}},{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2153887466384468734,0]}},{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[11638676648589799525,0]}},{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[17336646944492823354,0]}},{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[16179365956064936006,0]}},{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[2085897901681677768,0]}},{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[4724748409658749452,0]}},{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[13513626471981952824,0]}},{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[14681960900203760207,0]}},{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","num":18,"id":{"name":"num_traits","disambiguator":[17265809401536029962,0]}}],"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":0,"byte_end":25250,"line_start":1,"line_end":686,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":0,"byte_end":25250,"line_start":1,"line_end":686,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":53},{"krate":0,"index":55},{"krate":0,"index":57},{"krate":0,"index":59},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":68},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":78},{"krate":0,"index":87},{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":108},{"krate":0,"index":113},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":102},{"krate":0,"index":106}],"decl_id":null,"docs":" A crate for parsing integers directly form ASCII (`[u8]`) without encoding them into utf8\n first. The name is inspired by the famous C function.","sig":null,"attributes":[{"value":"/ A crate for parsing integers directly form ASCII (`[u8]`) without encoding them into utf8","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":0,"byte_end":93,"line_start":1,"line_end":1,"column_start":1,"column_end":94}},{"value":"/ first. The name is inspired by the famous C function.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":94,"byte_end":151,"line_start":2,"line_end":2,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":152,"byte_end":155,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Using `str::from_utf8` and `str::parse`","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":156,"byte_end":199,"line_start":4,"line_end":4,"column_start":1,"column_end":44}},{"value":"/ is likely to be more idiomatic. Use this crate if you want to avoid decoding bytes into utf8","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":200,"byte_end":296,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"/ (e.g. for performance reasons).","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":297,"byte_end":332,"line_start":6,"line_end":6,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":333,"byte_end":336,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Note that if you want to know how much of the input has been used, you can use the","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":337,"byte_end":423,"line_start":8,"line_end":8,"column_start":1,"column_end":87}},{"value":"/ `FromRadix10` trait, for example:","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":424,"byte_end":461,"line_start":9,"line_end":9,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":462,"byte_end":465,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":466,"byte_end":477,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"/ use atoi::FromRadix10;","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":478,"byte_end":504,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":505,"byte_end":508,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ /// Return the parsed integer and remaining slice if successful.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":509,"byte_end":577,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"/ fn atoi_with_rest<I: FromRadix10>(text: &[u8]) -> ((&[u8], Option<I>)) {","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":578,"byte_end":654,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/     match I::from_radix_10(text) {","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":655,"byte_end":693,"line_start":16,"line_end":16,"column_start":1,"column_end":39}},{"value":"/         (_, 0) => (text, None),","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":694,"byte_end":729,"line_start":17,"line_end":17,"column_start":1,"column_end":36}},{"value":"/         (n, used) => (&text[used..], Some(n)),","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":730,"byte_end":780,"line_start":18,"line_end":18,"column_start":1,"column_end":51}},{"value":"/     }","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":781,"byte_end":790,"line_start":19,"line_end":19,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":791,"byte_end":796,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":797,"byte_end":804,"line_start":21,"line_end":21,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":47},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":2443,"byte_end":2447,"line_start":65,"line_end":65,"column_start":8,"column_end":12},"name":"atoi","qualname":"::atoi","value":"pub fn atoi<I>(&[u8]) -> Option<I> where I: FromRadix10SignedChecked","parent":null,"children":[],"decl_id":null,"docs":" Parses an integer from a slice.","sig":null,"attributes":[{"value":"/ Parses an integer from a slice.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":1006,"byte_end":1041,"line_start":32,"line_end":32,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":1042,"byte_end":1045,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Contrary to its 'C' counterpart atoi is generic and will require a type argument if the type","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":1046,"byte_end":1142,"line_start":34,"line_end":34,"column_start":1,"column_end":97}},{"value":"/ inference can not determine its result. It will also check for overflow / underflow and allow","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":1143,"byte_end":1240,"line_start":35,"line_end":35,"column_start":1,"column_end":98}},{"value":"/ for Signs.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":1241,"byte_end":1255,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":1256,"byte_end":1259,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Use [`FromRadix10`] or [`FromRadix10Checked`] directly if you do not want to allow signs. Use","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":1260,"byte_end":1357,"line_start":38,"line_end":38,"column_start":1,"column_end":98}},{"value":"/ [`FromRadix10`] or [`FromRadix10Signed`] if you want to opt out overflow / underflow checking.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":1358,"byte_end":1456,"line_start":39,"line_end":39,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":1457,"byte_end":1460,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":1461,"byte_end":1474,"line_start":41,"line_end":41,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":1475,"byte_end":1478,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":1479,"byte_end":1486,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use atoi::atoi;","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":1487,"byte_end":1506,"line_start":44,"line_end":44,"column_start":1,"column_end":20}},{"value":"/ // Parsing to digits from a slice","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":1507,"byte_end":1544,"line_start":45,"line_end":45,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(Some(42), atoi::<u32>(b\"42\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":1545,"byte_end":1590,"line_start":46,"line_end":46,"column_start":1,"column_end":46}},{"value":"/ // Additional bytes after the number are ignored. If you want to know how many bytes were used","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":1591,"byte_end":1689,"line_start":47,"line_end":47,"column_start":1,"column_end":99}},{"value":"/ // to parse the number use `FromRadix10::from_radix_10`.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":1690,"byte_end":1750,"line_start":48,"line_end":48,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(Some(42), atoi::<u32>(b\"42 is the answer to life, the universe and everything\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":1751,"byte_end":1847,"line_start":49,"line_end":49,"column_start":1,"column_end":97}},{"value":"/ // `None` is returned if the slice does not start with a digit","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":1848,"byte_end":1914,"line_start":50,"line_end":50,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(None, atoi::<u32>(b\"Sadly we do not know the question\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":1915,"byte_end":1987,"line_start":51,"line_end":51,"column_start":1,"column_end":73}},{"value":"/ // While signed integer types are supported...","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":1988,"byte_end":2038,"line_start":52,"line_end":52,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(Some(42), atoi::<i32>(b\"42\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":2039,"byte_end":2084,"line_start":53,"line_end":53,"column_start":1,"column_end":46}},{"value":"/ // Signs are allowed.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":2085,"byte_end":2110,"line_start":54,"line_end":54,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(Some(-42), atoi::<i32>(b\"-42\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":2111,"byte_end":2158,"line_start":55,"line_end":55,"column_start":1,"column_end":48}},{"value":"/ // Leading zeros are allowed","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":2159,"byte_end":2191,"line_start":56,"line_end":56,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(Some(42), atoi::<u32>(b\"0042\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":2192,"byte_end":2239,"line_start":57,"line_end":57,"column_start":1,"column_end":48}},{"value":"/ // Overflows will return `None`","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":2240,"byte_end":2275,"line_start":58,"line_end":58,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(None, atoi::<u8>(b\"256\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":2276,"byte_end":2317,"line_start":59,"line_end":59,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":2318,"byte_end":2325,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":2326,"byte_end":2329,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Return","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":2330,"byte_end":2342,"line_start":62,"line_end":62,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":2343,"byte_end":2346,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Returns a a number if the slice started with a number, otherwise `None` is returned.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":2347,"byte_end":2435,"line_start":64,"line_end":64,"column_start":1,"column_end":89}}]},{"kind":"Trait","id":{"krate":0,"index":49},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":2751,"byte_end":2762,"line_start":76,"line_end":76,"column_start":11,"column_end":22},"name":"FromRadix10","qualname":"::FromRadix10","value":"FromRadix10: Sized","parent":null,"children":[{"krate":0,"index":50}],"decl_id":null,"docs":" Types implementing this trait can be parsed from a positional numeral system with radix 10\n","sig":null,"attributes":[{"value":"/ Types implementing this trait can be parsed from a positional numeral system with radix 10","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":2646,"byte_end":2740,"line_start":75,"line_end":75,"column_start":1,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":3921,"byte_end":3934,"line_start":102,"line_end":102,"column_start":8,"column_end":21},"name":"from_radix_10","qualname":"::FromRadix10::from_radix_10","value":"pub fn from_radix_10(&[u8]) -> (Self, usize)","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":" Parses an integer from a slice.","sig":null,"attributes":[{"value":"/ Parses an integer from a slice.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":2776,"byte_end":2811,"line_start":77,"line_end":77,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":2816,"byte_end":2819,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":2824,"byte_end":2837,"line_start":79,"line_end":79,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":2842,"byte_end":2845,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":2850,"byte_end":2857,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ use atoi::FromRadix10;","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":2862,"byte_end":2888,"line_start":82,"line_end":82,"column_start":5,"column_end":31}},{"value":"/ // Parsing to digits from a slice","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":2893,"byte_end":2930,"line_start":83,"line_end":83,"column_start":5,"column_end":42}},{"value":"/ assert_eq!((42,2), u32::from_radix_10(b\"42\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":2935,"byte_end":2985,"line_start":84,"line_end":84,"column_start":5,"column_end":55}},{"value":"/ // Additional bytes after the number are ignored","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":2990,"byte_end":3042,"line_start":85,"line_end":85,"column_start":5,"column_end":57}},{"value":"/ assert_eq!((42,2), u32::from_radix_10(b\"42 is the answer to life, the universe and everything\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":3047,"byte_end":3148,"line_start":86,"line_end":86,"column_start":5,"column_end":106}},{"value":"/ // (0,0) is returned if the slice does not start with a digit","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":3153,"byte_end":3218,"line_start":87,"line_end":87,"column_start":5,"column_end":70}},{"value":"/ assert_eq!((0,0), u32::from_radix_10(b\"Sadly we do not know the question\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":3223,"byte_end":3303,"line_start":88,"line_end":88,"column_start":5,"column_end":85}},{"value":"/ // While signed integer types are supported...","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":3308,"byte_end":3358,"line_start":89,"line_end":89,"column_start":5,"column_end":55}},{"value":"/ assert_eq!((42,2), i32::from_radix_10(b\"42\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":3363,"byte_end":3413,"line_start":90,"line_end":90,"column_start":5,"column_end":55}},{"value":"/ // Signs are not allowed (even for signed integer types)","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":3418,"byte_end":3478,"line_start":91,"line_end":91,"column_start":5,"column_end":65}},{"value":"/ assert_eq!((0,0), i32::from_radix_10(b\"-42\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":3483,"byte_end":3533,"line_start":92,"line_end":92,"column_start":5,"column_end":55}},{"value":"/ // Leading zeros are allowed","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":3538,"byte_end":3570,"line_start":93,"line_end":93,"column_start":5,"column_end":37}},{"value":"/ assert_eq!((42,4), u32::from_radix_10(b\"0042\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":3575,"byte_end":3627,"line_start":94,"line_end":94,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":3632,"byte_end":3639,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":3644,"byte_end":3647,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":3652,"byte_end":3664,"line_start":97,"line_end":97,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":3669,"byte_end":3672,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ Returns a tuple with two numbers. The first is the integer parsed or zero, the second is the","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":3677,"byte_end":3773,"line_start":99,"line_end":99,"column_start":5,"column_end":101}},{"value":"/ index of the byte right after the parsed number. If the second element is zero the slice","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":3778,"byte_end":3870,"line_start":100,"line_end":100,"column_start":5,"column_end":97}},{"value":"/ did not start with an ASCII digit.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":3875,"byte_end":3913,"line_start":101,"line_end":101,"column_start":5,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":51},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":4152,"byte_end":4170,"line_start":107,"line_end":107,"column_start":11,"column_end":29},"name":"FromRadix10Checked","qualname":"::FromRadix10Checked","value":"FromRadix10Checked: FromRadix10","parent":null,"children":[{"krate":0,"index":52}],"decl_id":null,"docs":" Types implementing this trait can be parsed from a positional numeral system with radix 10.\n Acts much like `FromRadix10`, but performs additional checks for overflows.\n","sig":null,"attributes":[{"value":"/ Types implementing this trait can be parsed from a positional numeral system with radix 10.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":3966,"byte_end":4061,"line_start":105,"line_end":105,"column_start":1,"column_end":96}},{"value":"/ Acts much like `FromRadix10`, but performs additional checks for overflows.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":4062,"byte_end":4141,"line_start":106,"line_end":106,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":5648,"byte_end":5669,"line_start":136,"line_end":136,"column_start":8,"column_end":29},"name":"from_radix_10_checked","qualname":"::FromRadix10Checked::from_radix_10_checked","value":"pub fn from_radix_10_checked(&[u8]) -> (Option<Self>, usize)","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Parses an integer from a slice.","sig":null,"attributes":[{"value":"/ Parses an integer from a slice.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":4190,"byte_end":4225,"line_start":108,"line_end":108,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":4230,"byte_end":4233,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":4238,"byte_end":4251,"line_start":110,"line_end":110,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":4256,"byte_end":4259,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":4264,"byte_end":4271,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ use atoi::FromRadix10Checked;","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":4276,"byte_end":4309,"line_start":113,"line_end":113,"column_start":5,"column_end":38}},{"value":"/ // Parsing to digits from a slice","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":4314,"byte_end":4351,"line_start":114,"line_end":114,"column_start":5,"column_end":42}},{"value":"/ assert_eq!((Some(42),2), u32::from_radix_10_checked(b\"42\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":4356,"byte_end":4420,"line_start":115,"line_end":115,"column_start":5,"column_end":69}},{"value":"/ // Additional bytes after the number are ignored","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":4425,"byte_end":4477,"line_start":116,"line_end":116,"column_start":5,"column_end":57}},{"value":"/ assert_eq!((Some(42),2), u32::from_radix_10_checked(b\"42 is the answer to life, the universe and everything\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":4482,"byte_end":4597,"line_start":117,"line_end":117,"column_start":5,"column_end":120}},{"value":"/ // (0,0) is returned if the slice does not start with a digit","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":4602,"byte_end":4667,"line_start":118,"line_end":118,"column_start":5,"column_end":70}},{"value":"/ assert_eq!((Some(0),0), u32::from_radix_10_checked(b\"Sadly we do not know the question\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":4672,"byte_end":4766,"line_start":119,"line_end":119,"column_start":5,"column_end":99}},{"value":"/ // While signed integer types are supported...","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":4771,"byte_end":4821,"line_start":120,"line_end":120,"column_start":5,"column_end":55}},{"value":"/ assert_eq!((Some(42),2), i32::from_radix_10_checked(b\"42\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":4826,"byte_end":4890,"line_start":121,"line_end":121,"column_start":5,"column_end":69}},{"value":"/ // Signs are not allowed (even for signed integer types)","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":4895,"byte_end":4955,"line_start":122,"line_end":122,"column_start":5,"column_end":65}},{"value":"/ assert_eq!((Some(0),0), i32::from_radix_10_checked(b\"-42\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":4960,"byte_end":5024,"line_start":123,"line_end":123,"column_start":5,"column_end":69}},{"value":"/ // Leading zeros are allowed","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":5029,"byte_end":5061,"line_start":124,"line_end":124,"column_start":5,"column_end":37}},{"value":"/ assert_eq!((Some(42),4), u32::from_radix_10_checked(b\"0042\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":5066,"byte_end":5132,"line_start":125,"line_end":125,"column_start":5,"column_end":71}},{"value":"/ // Overflow is indicated by `None`","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":5137,"byte_end":5175,"line_start":126,"line_end":126,"column_start":5,"column_end":43}},{"value":"/ assert_eq!((None, 3), u8::from_radix_10_checked(b\"256\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":5180,"byte_end":5241,"line_start":127,"line_end":127,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":5246,"byte_end":5253,"line_start":128,"line_end":128,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":5258,"byte_end":5261,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":5266,"byte_end":5278,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":5283,"byte_end":5286,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ Returns a tuple with two numbers. The first is the integer parsed or zero if no digit has","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":5291,"byte_end":5384,"line_start":132,"line_end":132,"column_start":5,"column_end":98}},{"value":"/ been found. None, if there were too many, or too high dighits and the parsing overflowed.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":5389,"byte_end":5482,"line_start":133,"line_end":133,"column_start":5,"column_end":98}},{"value":"/ The second is the index of the byte right after the parsed number. If the second element is","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":5487,"byte_end":5582,"line_start":134,"line_end":134,"column_start":5,"column_end":100}},{"value":"/ zero the slice did not start with an ASCII digit.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":5587,"byte_end":5640,"line_start":135,"line_end":135,"column_start":5,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":53},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":5814,"byte_end":5825,"line_start":140,"line_end":140,"column_start":11,"column_end":22},"name":"FromRadix16","qualname":"::FromRadix16","value":"FromRadix16: Sized","parent":null,"children":[{"krate":0,"index":54}],"decl_id":null,"docs":" Types implementing this trait can be parsed from a positional numeral system with radix 16\n","sig":null,"attributes":[{"value":"/ Types implementing this trait can be parsed from a positional numeral system with radix 16","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":5709,"byte_end":5803,"line_start":139,"line_end":139,"column_start":1,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":7077,"byte_end":7090,"line_start":168,"line_end":168,"column_start":8,"column_end":21},"name":"from_radix_16","qualname":"::FromRadix16::from_radix_16","value":"pub fn from_radix_16(&[u8]) -> (Self, usize)","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" Parses an integer from a slice.","sig":null,"attributes":[{"value":"/ Parses an integer from a slice.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":5839,"byte_end":5874,"line_start":141,"line_end":141,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":5879,"byte_end":5882,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":5887,"byte_end":5900,"line_start":143,"line_end":143,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":5905,"byte_end":5908,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":5913,"byte_end":5920,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/ use atoi::FromRadix16;","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":5925,"byte_end":5951,"line_start":146,"line_end":146,"column_start":5,"column_end":31}},{"value":"/ // Parsing to digits from a slice","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":5956,"byte_end":5993,"line_start":147,"line_end":147,"column_start":5,"column_end":42}},{"value":"/ assert_eq!((42,2), u32::from_radix_16(b\"2a\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":5998,"byte_end":6048,"line_start":148,"line_end":148,"column_start":5,"column_end":55}},{"value":"/ // Additional bytes after the number are ignored","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":6053,"byte_end":6105,"line_start":149,"line_end":149,"column_start":5,"column_end":57}},{"value":"/ assert_eq!((42,2), u32::from_radix_16(b\"2a is the answer to life, the universe and everything\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":6110,"byte_end":6211,"line_start":150,"line_end":150,"column_start":5,"column_end":106}},{"value":"/ // (0,0) is returned if the slice does not start with a digit","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":6216,"byte_end":6281,"line_start":151,"line_end":151,"column_start":5,"column_end":70}},{"value":"/ assert_eq!((0,0), u32::from_radix_16(b\"Sadly we do not know the question\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":6286,"byte_end":6366,"line_start":152,"line_end":152,"column_start":5,"column_end":85}},{"value":"/ // While signed integer types are supported...","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":6371,"byte_end":6421,"line_start":153,"line_end":153,"column_start":5,"column_end":55}},{"value":"/ assert_eq!((42,2), i32::from_radix_16(b\"2a\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":6426,"byte_end":6476,"line_start":154,"line_end":154,"column_start":5,"column_end":55}},{"value":"/ // Signs are not allowed (even for signed integer types)","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":6481,"byte_end":6541,"line_start":155,"line_end":155,"column_start":5,"column_end":65}},{"value":"/ assert_eq!((0,0), i32::from_radix_16(b\"-2a\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":6546,"byte_end":6596,"line_start":156,"line_end":156,"column_start":5,"column_end":55}},{"value":"/ // Leading zeros are allowed","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":6601,"byte_end":6633,"line_start":157,"line_end":157,"column_start":5,"column_end":37}},{"value":"/ assert_eq!((42,4), u32::from_radix_16(b\"002a\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":6638,"byte_end":6690,"line_start":158,"line_end":158,"column_start":5,"column_end":57}},{"value":"/ // so are uppercase letters","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":6695,"byte_end":6726,"line_start":159,"line_end":159,"column_start":5,"column_end":36}},{"value":"/ assert_eq!((42,4), u32::from_radix_16(b\"002A\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":6731,"byte_end":6783,"line_start":160,"line_end":160,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":6788,"byte_end":6795,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":6800,"byte_end":6803,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":6808,"byte_end":6820,"line_start":163,"line_end":163,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":6825,"byte_end":6828,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ Returns a tuple with two numbers. The first is the integer parsed or zero, the second is the","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":6833,"byte_end":6929,"line_start":165,"line_end":165,"column_start":5,"column_end":101}},{"value":"/ index of the byte right after the parsed number. If the second element is zero the slice","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":6934,"byte_end":7026,"line_start":166,"line_end":166,"column_start":5,"column_end":97}},{"value":"/ did not start with an ASCII digit.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":7031,"byte_end":7069,"line_start":167,"line_end":167,"column_start":5,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":55},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":7308,"byte_end":7326,"line_start":173,"line_end":173,"column_start":11,"column_end":29},"name":"FromRadix16Checked","qualname":"::FromRadix16Checked","value":"FromRadix16Checked: FromRadix16","parent":null,"children":[{"krate":0,"index":56}],"decl_id":null,"docs":" Types implementing this trait can be parsed from a positional numeral system with radix 16.\n Acts much like `FromRadix16`, but performs additional checks for overflows.\n","sig":null,"attributes":[{"value":"/ Types implementing this trait can be parsed from a positional numeral system with radix 16.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":7122,"byte_end":7217,"line_start":171,"line_end":171,"column_start":1,"column_end":96}},{"value":"/ Acts much like `FromRadix16`, but performs additional checks for overflows.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":7218,"byte_end":7297,"line_start":172,"line_end":172,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":8809,"byte_end":8830,"line_start":203,"line_end":203,"column_start":8,"column_end":29},"name":"from_radix_16_checked","qualname":"::FromRadix16Checked::from_radix_16_checked","value":"pub fn from_radix_16_checked(&[u8]) -> (Option<Self>, usize)","parent":{"krate":0,"index":55},"children":[],"decl_id":null,"docs":" Parses an integer from a slice.","sig":null,"attributes":[{"value":"/ Parses an integer from a slice.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":7346,"byte_end":7381,"line_start":174,"line_end":174,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":7386,"byte_end":7389,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":7394,"byte_end":7407,"line_start":176,"line_end":176,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":7412,"byte_end":7415,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":7420,"byte_end":7427,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"/ use atoi::FromRadix16Checked;","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":7432,"byte_end":7465,"line_start":179,"line_end":179,"column_start":5,"column_end":38}},{"value":"/ // Parsing to digits from a slice","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":7470,"byte_end":7507,"line_start":180,"line_end":180,"column_start":5,"column_end":42}},{"value":"/ assert_eq!((Some(42),2), u32::from_radix_16_checked(b\"2a\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":7512,"byte_end":7576,"line_start":181,"line_end":181,"column_start":5,"column_end":69}},{"value":"/ // Additional bytes after the number are ignored","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":7581,"byte_end":7633,"line_start":182,"line_end":182,"column_start":5,"column_end":57}},{"value":"/ assert_eq!((Some(42),2), u32::from_radix_16_checked(b\"2a is the answer to life, the \\","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":7638,"byte_end":7727,"line_start":183,"line_end":183,"column_start":5,"column_end":94}},{"value":"/ universe and everything\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":7732,"byte_end":7763,"line_start":184,"line_end":184,"column_start":5,"column_end":36}},{"value":"/ // (0,0) is returned if the slice does not start with a digit","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":7768,"byte_end":7833,"line_start":185,"line_end":185,"column_start":5,"column_end":70}},{"value":"/ assert_eq!((Some(0),0), u32::from_radix_16_checked(b\"Sadly we do not know the question\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":7838,"byte_end":7932,"line_start":186,"line_end":186,"column_start":5,"column_end":99}},{"value":"/ // While signed integer types are supported...","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":7937,"byte_end":7987,"line_start":187,"line_end":187,"column_start":5,"column_end":55}},{"value":"/ assert_eq!((Some(42),2), i32::from_radix_16_checked(b\"2a\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":7992,"byte_end":8056,"line_start":188,"line_end":188,"column_start":5,"column_end":69}},{"value":"/ // Signs are not allowed (even for signed integer types)","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":8061,"byte_end":8121,"line_start":189,"line_end":189,"column_start":5,"column_end":65}},{"value":"/ assert_eq!((Some(0),0), i32::from_radix_16_checked(b\"-2a\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":8126,"byte_end":8190,"line_start":190,"line_end":190,"column_start":5,"column_end":69}},{"value":"/ // Leading zeros are allowed","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":8195,"byte_end":8227,"line_start":191,"line_end":191,"column_start":5,"column_end":37}},{"value":"/ assert_eq!((Some(42),4), u32::from_radix_16_checked(b\"002a\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":8232,"byte_end":8298,"line_start":192,"line_end":192,"column_start":5,"column_end":71}},{"value":"/ // So are uppercase letters","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":8303,"byte_end":8334,"line_start":193,"line_end":193,"column_start":5,"column_end":36}},{"value":"/ assert_eq!((Some(42),2), u32::from_radix_16_checked(b\"2A\"))","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":8339,"byte_end":8402,"line_start":194,"line_end":194,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":8407,"byte_end":8414,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":8419,"byte_end":8422,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":8427,"byte_end":8439,"line_start":197,"line_end":197,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":8444,"byte_end":8447,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ Returns a tuple with two numbers. The first is the integer parsed or zero if no digit has","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":8452,"byte_end":8545,"line_start":199,"line_end":199,"column_start":5,"column_end":98}},{"value":"/ been found. None, if there were too many, or too high dighits and the parsing overflowed.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":8550,"byte_end":8643,"line_start":200,"line_end":200,"column_start":5,"column_end":98}},{"value":"/ The second is the index of the byte right after the parsed number. If the second element is","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":8648,"byte_end":8743,"line_start":201,"line_end":201,"column_start":5,"column_end":100}},{"value":"/ zero the slice did not start with an ASCII digit.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":8748,"byte_end":8801,"line_start":202,"line_end":202,"column_start":5,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":57},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":9126,"byte_end":9143,"line_start":209,"line_end":209,"column_start":11,"column_end":28},"name":"FromRadix10Signed","qualname":"::FromRadix10Signed","value":"FromRadix10Signed: Sized","parent":null,"children":[{"krate":0,"index":58}],"decl_id":null,"docs":" Types implementing this trait can be parsed from a positional numeral system with radix 10. This\n trait allows for an additional sign character (`+` or `-`) in front of the actual number in\n order, to allow for parsing negative values.\n","sig":null,"attributes":[{"value":"/ Types implementing this trait can be parsed from a positional numeral system with radix 10. This","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":8870,"byte_end":8970,"line_start":206,"line_end":206,"column_start":1,"column_end":101}},{"value":"/ trait allows for an additional sign character (`+` or `-`) in front of the actual number in","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":8971,"byte_end":9066,"line_start":207,"line_end":207,"column_start":1,"column_end":96}},{"value":"/ order, to allow for parsing negative values.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":9067,"byte_end":9115,"line_start":208,"line_end":208,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":10387,"byte_end":10407,"line_start":237,"line_end":237,"column_start":8,"column_end":28},"name":"from_radix_10_signed","qualname":"::FromRadix10Signed::from_radix_10_signed","value":"pub fn from_radix_10_signed(&[u8]) -> (Self, usize)","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Parses an integer from a slice.","sig":null,"attributes":[{"value":"/ Parses an integer from a slice.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":9157,"byte_end":9192,"line_start":210,"line_end":210,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":9197,"byte_end":9200,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":9205,"byte_end":9218,"line_start":212,"line_end":212,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":9223,"byte_end":9226,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":9231,"byte_end":9238,"line_start":214,"line_end":214,"column_start":5,"column_end":12}},{"value":"/ use atoi::FromRadix10Signed;","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":9243,"byte_end":9275,"line_start":215,"line_end":215,"column_start":5,"column_end":37}},{"value":"/ // Parsing to digits from a slice","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":9280,"byte_end":9317,"line_start":216,"line_end":216,"column_start":5,"column_end":42}},{"value":"/ assert_eq!((42,2), i32::from_radix_10_signed(b\"42\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":9322,"byte_end":9379,"line_start":217,"line_end":217,"column_start":5,"column_end":62}},{"value":"/ // Additional bytes after the number are ignored","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":9384,"byte_end":9436,"line_start":218,"line_end":218,"column_start":5,"column_end":57}},{"value":"/ assert_eq!((42,2), i32::from_radix_10_signed(b\"42 is the answer to life, the universe and everything\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":9441,"byte_end":9549,"line_start":219,"line_end":219,"column_start":5,"column_end":113}},{"value":"/ // (0,0) is returned if the slice does not start with a digit","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":9554,"byte_end":9619,"line_start":220,"line_end":220,"column_start":5,"column_end":70}},{"value":"/ assert_eq!((0,0), i32::from_radix_10_signed(b\"Sadly we do not know the question\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":9624,"byte_end":9711,"line_start":221,"line_end":221,"column_start":5,"column_end":92}},{"value":"/ // Signs are allowed","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":9716,"byte_end":9740,"line_start":222,"line_end":222,"column_start":5,"column_end":29}},{"value":"/ assert_eq!((-42,3), i32::from_radix_10_signed(b\"-42\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":9745,"byte_end":9804,"line_start":223,"line_end":223,"column_start":5,"column_end":64}},{"value":"/ // Signs are allowed","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":9809,"byte_end":9833,"line_start":224,"line_end":224,"column_start":5,"column_end":29}},{"value":"/ assert_eq!((42,3), i32::from_radix_10_signed(b\"+42\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":9838,"byte_end":9896,"line_start":225,"line_end":225,"column_start":5,"column_end":63}},{"value":"/ // Even on unsigned types.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":9901,"byte_end":9931,"line_start":226,"line_end":226,"column_start":5,"column_end":35}},{"value":"/ assert_eq!((0,2), u32::from_radix_10_signed(b\"-0\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":9936,"byte_end":9992,"line_start":227,"line_end":227,"column_start":5,"column_end":61}},{"value":"/ // Leading zeros are allowed","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":9997,"byte_end":10029,"line_start":228,"line_end":228,"column_start":5,"column_end":37}},{"value":"/ assert_eq!((42,4), i32::from_radix_10_signed(b\"0042\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":10034,"byte_end":10093,"line_start":229,"line_end":229,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":10098,"byte_end":10105,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":10110,"byte_end":10113,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":10118,"byte_end":10130,"line_start":232,"line_end":232,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":10135,"byte_end":10138,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ Returns a tuple with two numbers. The first is the integer parsed or zero, the second is the","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":10143,"byte_end":10239,"line_start":234,"line_end":234,"column_start":5,"column_end":101}},{"value":"/ index of the byte right after the parsed number. If the second element is zero the slice","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":10244,"byte_end":10336,"line_start":235,"line_end":235,"column_start":5,"column_end":97}},{"value":"/ did not start with an ASCII digit.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":10341,"byte_end":10379,"line_start":236,"line_end":236,"column_start":5,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":59},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":10631,"byte_end":10655,"line_start":242,"line_end":242,"column_start":11,"column_end":35},"name":"FromRadix10SignedChecked","qualname":"::FromRadix10SignedChecked","value":"FromRadix10SignedChecked: FromRadix10Signed","parent":null,"children":[{"krate":0,"index":60}],"decl_id":null,"docs":" Types implementing this trait can be parsed from a positional numeral system with radix 10.\n Acts much like `FromRadix10Signed`, but performs additional checks for overflows.\n","sig":null,"attributes":[{"value":"/ Types implementing this trait can be parsed from a positional numeral system with radix 10.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":10439,"byte_end":10534,"line_start":240,"line_end":240,"column_start":1,"column_end":96}},{"value":"/ Acts much like `FromRadix10Signed`, but performs additional checks for overflows.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":10535,"byte_end":10620,"line_start":241,"line_end":241,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":12674,"byte_end":12702,"line_start":279,"line_end":279,"column_start":8,"column_end":36},"name":"from_radix_10_signed_checked","qualname":"::FromRadix10SignedChecked::from_radix_10_signed_checked","value":"pub fn from_radix_10_signed_checked(&[u8]) -> (Option<Self>, usize)","parent":{"krate":0,"index":59},"children":[],"decl_id":null,"docs":" Parses an integer from a slice.","sig":null,"attributes":[{"value":"/ Parses an integer from a slice.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":10681,"byte_end":10716,"line_start":243,"line_end":243,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":10721,"byte_end":10724,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":10729,"byte_end":10742,"line_start":245,"line_end":245,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":10747,"byte_end":10750,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":10755,"byte_end":10762,"line_start":247,"line_end":247,"column_start":5,"column_end":12}},{"value":"/ use atoi::FromRadix10SignedChecked;","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":10767,"byte_end":10806,"line_start":248,"line_end":248,"column_start":5,"column_end":44}},{"value":"/ // Parsing to digits from a slice","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":10811,"byte_end":10848,"line_start":249,"line_end":249,"column_start":5,"column_end":42}},{"value":"/ assert_eq!((Some(42),2), u32::from_radix_10_signed_checked(b\"42\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":10853,"byte_end":10924,"line_start":250,"line_end":250,"column_start":5,"column_end":76}},{"value":"/ // Additional bytes after the number are ignored","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":10929,"byte_end":10981,"line_start":251,"line_end":251,"column_start":5,"column_end":57}},{"value":"/ assert_eq!((Some(42),2), u32::from_radix_10_signed_checked(b\"42 is the answer to life, the universe and everything\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":10986,"byte_end":11108,"line_start":252,"line_end":252,"column_start":5,"column_end":127}},{"value":"/ // (0,0) is returned if the slice does not start with a digit","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":11113,"byte_end":11178,"line_start":253,"line_end":253,"column_start":5,"column_end":70}},{"value":"/ assert_eq!((Some(0),0), u32::from_radix_10_signed_checked(b\"Sadly we do not know the question\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":11183,"byte_end":11284,"line_start":254,"line_end":254,"column_start":5,"column_end":106}},{"value":"/ // While signed integer types are supported...","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":11289,"byte_end":11339,"line_start":255,"line_end":255,"column_start":5,"column_end":55}},{"value":"/ assert_eq!((Some(42),2), i32::from_radix_10_signed_checked(b\"42\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":11344,"byte_end":11415,"line_start":256,"line_end":256,"column_start":5,"column_end":76}},{"value":"/ // Signs are allowed","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":11420,"byte_end":11444,"line_start":257,"line_end":257,"column_start":5,"column_end":29}},{"value":"/ assert_eq!((Some(-42),3), i32::from_radix_10_signed_checked(b\"-42\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":11449,"byte_end":11522,"line_start":258,"line_end":258,"column_start":5,"column_end":78}},{"value":"/ // -0 is ok, even for an unsigned type","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":11527,"byte_end":11569,"line_start":259,"line_end":259,"column_start":5,"column_end":47}},{"value":"/ assert_eq!((Some(0),2), u32::from_radix_10_signed_checked(b\"-0\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":11574,"byte_end":11644,"line_start":260,"line_end":260,"column_start":5,"column_end":75}},{"value":"/ // -1 is an Underflow","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":11649,"byte_end":11674,"line_start":261,"line_end":261,"column_start":5,"column_end":30}},{"value":"/ assert_eq!((None,2), u32::from_radix_10_signed_checked(b\"-1\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":11679,"byte_end":11746,"line_start":262,"line_end":262,"column_start":5,"column_end":72}},{"value":"/ // Negative values for unsigned types are handled as `None`.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":11751,"byte_end":11815,"line_start":263,"line_end":263,"column_start":5,"column_end":69}},{"value":"/ assert_eq!((None,3), u32::from_radix_10_signed_checked(b\"-42\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":11820,"byte_end":11888,"line_start":264,"line_end":264,"column_start":5,"column_end":73}},{"value":"/ // Leading zeros are allowed","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":11893,"byte_end":11925,"line_start":265,"line_end":265,"column_start":5,"column_end":37}},{"value":"/ assert_eq!((Some(42),4), u32::from_radix_10_signed_checked(b\"0042\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":11930,"byte_end":12003,"line_start":266,"line_end":266,"column_start":5,"column_end":78}},{"value":"/ // Overflow is indicated by `None`","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":12008,"byte_end":12046,"line_start":267,"line_end":267,"column_start":5,"column_end":43}},{"value":"/ assert_eq!((None, 3), u8::from_radix_10_signed_checked(b\"256\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":12051,"byte_end":12119,"line_start":268,"line_end":268,"column_start":5,"column_end":73}},{"value":"/ assert_eq!((None, 4), i8::from_radix_10_signed_checked(b\"+128\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":12124,"byte_end":12193,"line_start":269,"line_end":269,"column_start":5,"column_end":74}},{"value":"/ assert_eq!((None, 4), i8::from_radix_10_signed_checked(b\"-129\"));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":12198,"byte_end":12267,"line_start":270,"line_end":270,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":12272,"byte_end":12279,"line_start":271,"line_end":271,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":12284,"byte_end":12287,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":12292,"byte_end":12304,"line_start":273,"line_end":273,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":12309,"byte_end":12312,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ Returns a tuple with two numbers. The first is the integer parsed or zero if no digit has","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":12317,"byte_end":12410,"line_start":275,"line_end":275,"column_start":5,"column_end":98}},{"value":"/ been found. None, if there were too many, or too high dighits and the parsing overflowed.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":12415,"byte_end":12508,"line_start":276,"line_end":276,"column_start":5,"column_end":98}},{"value":"/ The second is the index of the byte right after the parsed number. If the second element is","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":12513,"byte_end":12608,"line_start":277,"line_end":277,"column_start":5,"column_end":100}},{"value":"/ zero the slice did not start with an ASCII digit.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":12613,"byte_end":12666,"line_start":278,"line_end":278,"column_start":5,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":61},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":12869,"byte_end":12881,"line_start":284,"line_end":284,"column_start":11,"column_end":23},"name":"MaxNumDigits","qualname":"::MaxNumDigits","value":"MaxNumDigits","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":63}],"decl_id":null,"docs":" A bounded integer, whose representation can overflow and therefore can only store a maximum\n number of digits\n","sig":null,"attributes":[{"value":"/ A bounded integer, whose representation can overflow and therefore can only store a maximum","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":12742,"byte_end":12837,"line_start":282,"line_end":282,"column_start":1,"column_end":96}},{"value":"/ number of digits","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":12838,"byte_end":12858,"line_start":283,"line_end":283,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":13048,"byte_end":13062,"line_start":287,"line_end":287,"column_start":8,"column_end":22},"name":"max_num_digits","qualname":"::MaxNumDigits::max_num_digits","value":"pub fn max_num_digits(Self) -> usize","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":" Given a representation with a radix character I, what is the maximum number of digits we can\n parse without the integer overflowing for sure?\n","sig":null,"attributes":[{"value":"/ Given a representation with a radix character I, what is the maximum number of digits we can","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":12888,"byte_end":12984,"line_start":285,"line_end":285,"column_start":5,"column_end":101}},{"value":"/ parse without the integer overflowing for sure?","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":12989,"byte_end":13040,"line_start":286,"line_end":286,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":13211,"byte_end":13234,"line_start":291,"line_end":291,"column_start":8,"column_end":31},"name":"max_num_digits_negative","qualname":"::MaxNumDigits::max_num_digits_negative","value":"pub fn max_num_digits_negative(Self) -> usize","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":" Returns the maximum number of digits a negative representation of `I` can have depending on\n `radix`.\n","sig":null,"attributes":[{"value":"/ Returns the maximum number of digits a negative representation of `I` can have depending on","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":13091,"byte_end":13186,"line_start":289,"line_end":289,"column_start":5,"column_end":100}},{"value":"/ `radix`.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":13191,"byte_end":13203,"line_start":290,"line_end":290,"column_start":5,"column_end":17}}]},{"kind":"Function","id":{"krate":0,"index":68},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":14224,"byte_end":14238,"line_start":332,"line_end":332,"column_start":8,"column_end":22},"name":"ascii_to_digit","qualname":"::ascii_to_digit","value":"pub fn ascii_to_digit<I>(u8) -> Option<I> where I: Zero + One","parent":null,"children":[],"decl_id":null,"docs":" Converts an ascii character to digit","sig":null,"attributes":[{"value":"/ Converts an ascii character to digit","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":14010,"byte_end":14050,"line_start":323,"line_end":323,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":14051,"byte_end":14054,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":14055,"byte_end":14068,"line_start":325,"line_end":325,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":14069,"byte_end":14072,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":14073,"byte_end":14080,"line_start":327,"line_end":327,"column_start":1,"column_end":8}},{"value":"/ use atoi::ascii_to_digit;","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":14081,"byte_end":14110,"line_start":328,"line_end":328,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(Some(5), ascii_to_digit(b'5'));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":14111,"byte_end":14157,"line_start":329,"line_end":329,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(None, ascii_to_digit::<u32>(b'x'));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":14158,"byte_end":14208,"line_start":330,"line_end":330,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":14209,"byte_end":14216,"line_start":331,"line_end":331,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":109},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":22692,"byte_end":22696,"line_start":596,"line_end":596,"column_start":5,"column_end":9},"name":"Plus","qualname":"::Sign::Plus","value":"Sign::Plus","parent":{"krate":0,"index":108},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":111},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":22702,"byte_end":22707,"line_start":597,"line_end":597,"column_start":5,"column_end":10},"name":"Minus","qualname":"::Sign::Minus","value":"Sign::Minus","parent":{"krate":0,"index":108},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":108},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":22681,"byte_end":22685,"line_start":595,"line_end":595,"column_start":10,"column_end":14},"name":"Sign","qualname":"::Sign","value":"pub enum Sign { Plus, Minus, }","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":111}],"decl_id":null,"docs":" Representation of a numerical sign\n","sig":null,"attributes":[{"value":"/ Representation of a numerical sign","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":22588,"byte_end":22626,"line_start":593,"line_end":593,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":23043,"byte_end":23051,"line_start":611,"line_end":611,"column_start":12,"column_end":20},"name":"try_from","qualname":"<Sign>::try_from","value":"pub fn try_from(u8) -> Option<Sign>","parent":null,"children":[],"decl_id":null,"docs":" Trys to convert an ascii character into a `Sign`","sig":null,"attributes":[{"value":"/ Trys to convert an ascii character into a `Sign`","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":22728,"byte_end":22780,"line_start":601,"line_end":601,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":22785,"byte_end":22788,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":22793,"byte_end":22806,"line_start":603,"line_end":603,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":22811,"byte_end":22814,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":22819,"byte_end":22826,"line_start":605,"line_end":605,"column_start":5,"column_end":12}},{"value":"/ use atoi::Sign;","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":22831,"byte_end":22850,"line_start":606,"line_end":606,"column_start":5,"column_end":24}},{"value":"/ assert_eq!(Some(Sign::Plus), Sign::try_from(b'+'));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":22855,"byte_end":22910,"line_start":607,"line_end":607,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(Some(Sign::Minus), Sign::try_from(b'-'));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":22915,"byte_end":22971,"line_start":608,"line_end":608,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(None, Sign::try_from(b'1'));","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":22976,"byte_end":23019,"line_start":609,"line_end":609,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":23024,"byte_end":23031,"line_start":610,"line_end":610,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":23265,"byte_end":23271,"line_start":620,"line_end":620,"column_start":12,"column_end":18},"name":"signum","qualname":"<Sign>::signum","value":"pub fn signum<I>(Self) -> I where I: Signed","parent":null,"children":[],"decl_id":null,"docs":" Returns either `+1` or `-1`\n","sig":null,"attributes":[{"value":"/ Returns either `+1` or `-1`","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":23222,"byte_end":23253,"line_start":619,"line_end":619,"column_start":5,"column_end":36}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":13286,"byte_end":13287,"line_start":294,"line_end":294,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":66},{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":14671,"byte_end":14672,"line_start":351,"line_end":351,"column_start":25,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":15166,"byte_end":15167,"line_start":371,"line_end":371,"column_start":31,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":16648,"byte_end":16649,"line_start":420,"line_end":420,"column_start":38,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":19728,"byte_end":19729,"line_start":503,"line_end":503,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":21268,"byte_end":21269,"line_start":551,"line_end":551,"column_start":25,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":21767,"byte_end":21768,"line_start":571,"line_end":571,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":22717,"byte_end":22721,"line_start":600,"line_end":600,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":2764,"byte_end":2769,"line_start":76,"line_end":76,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":3021},"to":{"krate":0,"index":49}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":4172,"byte_end":4183,"line_start":107,"line_end":107,"column_start":31,"column_end":42},"kind":"SuperTrait","from":{"krate":0,"index":49},"to":{"krate":0,"index":51}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":5827,"byte_end":5832,"line_start":140,"line_end":140,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":3021},"to":{"krate":0,"index":53}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":7328,"byte_end":7339,"line_start":173,"line_end":173,"column_start":31,"column_end":42},"kind":"SuperTrait","from":{"krate":0,"index":53},"to":{"krate":0,"index":55}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":9145,"byte_end":9150,"line_start":209,"line_end":209,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":3021},"to":{"krate":0,"index":57}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":10657,"byte_end":10674,"line_start":242,"line_end":242,"column_start":37,"column_end":54},"kind":"SuperTrait","from":{"krate":0,"index":57},"to":{"krate":0,"index":59}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":13286,"byte_end":13287,"line_start":294,"line_end":294,"column_start":26,"column_end":27},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":65},"to":{"krate":0,"index":61}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":14671,"byte_end":14672,"line_start":351,"line_end":351,"column_start":25,"column_end":26},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":71},"to":{"krate":0,"index":49}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":15166,"byte_end":15167,"line_start":371,"line_end":371,"column_start":31,"column_end":32},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":74},"to":{"krate":0,"index":57}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":16648,"byte_end":16649,"line_start":420,"line_end":420,"column_start":38,"column_end":39},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":79},"to":{"krate":0,"index":59}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":19728,"byte_end":19729,"line_start":503,"line_end":503,"column_start":32,"column_end":33},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":88},"to":{"krate":0,"index":51}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":21268,"byte_end":21269,"line_start":551,"line_end":551,"column_start":25,"column_end":26},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":95},"to":{"krate":0,"index":53}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":21767,"byte_end":21768,"line_start":571,"line_end":571,"column_start":32,"column_end":33},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":98},"to":{"krate":0,"index":55}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.4.0/src/lib.rs","byte_start":22717,"byte_end":22721,"line_start":600,"line_end":600,"column_start":6,"column_end":10},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":108},"to":{"krate":4294967295,"index":4294967295}}]}
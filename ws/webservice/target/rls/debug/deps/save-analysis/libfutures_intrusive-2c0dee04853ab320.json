{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0","program":"/Users/limaohui/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","futures_intrusive","--edition=2018","/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"default\"","--cfg","feature=\"parking_lot\"","--cfg","feature=\"std\"","-C","metadata=2c0dee04853ab320","-C","extra-filename=-2c0dee04853ab320","--out-dir","/Users/limaohui/rust/rust-web/ws/webservice/target/rls/debug/deps","-L","dependency=/Users/limaohui/rust/rust-web/ws/webservice/target/rls/debug/deps","--extern","futures_core=/Users/limaohui/rust/rust-web/ws/webservice/target/rls/debug/deps/libfutures_core-106e15baab8a2ca1.rmeta","--extern","lock_api=/Users/limaohui/rust/rust-web/ws/webservice/target/rls/debug/deps/liblock_api-523c941cdfd109e7.rmeta","--extern","parking_lot=/Users/limaohui/rust/rust-web/ws/webservice/target/rls/debug/deps/libparking_lot-d8cd25e39e7fc65d.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/limaohui/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/limaohui/rust/rust-web/ws/webservice/target/rls/debug/deps/libfutures_intrusive-2c0dee04853ab320.rmeta"},"prelude":{"crate_id":{"name":"futures_intrusive","disambiguator":[8229391950096878509,0]},"crate_root":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src","external_crates":[{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[5737620048972976797,0]}},{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/noop_lock.rs","num":2,"id":{"name":"core","disambiguator":[2242199718071837415,0]}},{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2188212999151601010,0]}},{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1020664553731942337,0]}},{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5221923779696816614,0]}},{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10454403582981253701,0]}},{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7392107620293427149,0]}},{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9383090470819858406,0]}},{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[13561338507145107503,0]}},{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2153887466384468734,0]}},{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[11638676648589799525,0]}},{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[17336646944492823354,0]}},{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[16179365956064936006,0]}},{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[2085897901681677768,0]}},{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[4724748409658749452,0]}},{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[13513626471981952824,0]}},{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[14681960900203760207,0]}},{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/noop_lock.rs","num":18,"id":{"name":"lock_api","disambiguator":[10912384889634971195,0]}},{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/noop_lock.rs","num":19,"id":{"name":"scopeguard","disambiguator":[1332155161354514573,0]}},{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","num":20,"id":{"name":"futures_core","disambiguator":[11412068890079604383,0]}},{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","num":21,"id":{"name":"parking_lot","disambiguator":[17778479661807304928,0]}},{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","num":22,"id":{"name":"instant","disambiguator":[7936197631840498655,0]}},{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","num":23,"id":{"name":"cfg_if","disambiguator":[10518978035588998298,0]}},{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","num":24,"id":{"name":"parking_lot_core","disambiguator":[18264052457940857998,0]}},{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","num":25,"id":{"name":"smallvec","disambiguator":[1871165282145789956,0]}},{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","num":26,"id":{"name":"libc","disambiguator":[5396492793968448250,0]}}],"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":0,"byte_end":9651,"line_start":1,"line_end":235,"column_start":1,"column_end":11}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":2218},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":9483,"byte_end":9491,"line_start":223,"line_end":223,"column_start":20,"column_end":28},"alias_span":null,"name":"NoopLock","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":26},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/mod.rs","byte_start":10288,"byte_end":10297,"line_start":4,"line_end":4,"column_start":21,"column_end":30},"alias_span":null,"name":"RealArray","value":"","parent":{"krate":0,"index":24}},{"kind":"Use","ref_id":{"krate":0,"index":53},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/mod.rs","byte_start":10339,"byte_end":10347,"line_start":7,"line_end":7,"column_start":23,"column_end":31},"alias_span":null,"name":"ArrayBuf","value":"","parent":{"krate":0,"index":24}},{"kind":"Use","ref_id":{"krate":0,"index":43},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/mod.rs","byte_start":10349,"byte_end":10356,"line_start":7,"line_end":7,"column_start":33,"column_end":40},"alias_span":null,"name":"RingBuf","value":"","parent":{"krate":0,"index":24}},{"kind":"Use","ref_id":{"krate":0,"index":89},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/mod.rs","byte_start":10407,"byte_end":10419,"line_start":10,"line_end":10,"column_start":22,"column_end":34},"alias_span":null,"name":"FixedHeapBuf","value":"","parent":{"krate":0,"index":24}},{"kind":"Use","ref_id":{"krate":0,"index":106},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/mod.rs","byte_start":10468,"byte_end":10482,"line_start":12,"line_end":12,"column_start":22,"column_end":36},"alias_span":null,"name":"GrowingHeapBuf","value":"","parent":{"krate":0,"index":24}},{"kind":"Use","ref_id":{"krate":0,"index":2555},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mod.rs","byte_start":62350,"byte_end":62366,"line_start":7,"line_end":7,"column_start":23,"column_end":39},"alias_span":null,"name":"ChannelSendError","value":"","parent":{"krate":0,"index":234}},{"kind":"Use","ref_id":{"krate":0,"index":2556},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mod.rs","byte_start":62350,"byte_end":62366,"line_start":7,"line_end":7,"column_start":23,"column_end":39},"alias_span":null,"name":"ChannelSendError","value":"","parent":{"krate":0,"index":234}},{"kind":"Use","ref_id":{"krate":0,"index":2568},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mod.rs","byte_start":62368,"byte_end":62383,"line_start":7,"line_end":7,"column_start":41,"column_end":56},"alias_span":null,"name":"TryReceiveError","value":"","parent":{"krate":0,"index":234}},{"kind":"Use","ref_id":{"krate":0,"index":2581},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mod.rs","byte_start":62385,"byte_end":62397,"line_start":7,"line_end":7,"column_start":58,"column_end":70},"alias_span":null,"name":"TrySendError","value":"","parent":{"krate":0,"index":234}},{"kind":"Use","ref_id":{"krate":0,"index":308},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mod.rs","byte_start":62595,"byte_end":62615,"line_start":15,"line_end":15,"column_start":5,"column_end":25},"alias_span":null,"name":"ChannelReceiveFuture","value":"","parent":{"krate":0,"index":234}},{"kind":"Use","ref_id":{"krate":0,"index":340},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mod.rs","byte_start":62617,"byte_end":62634,"line_start":15,"line_end":15,"column_start":27,"column_end":44},"alias_span":null,"name":"ChannelSendFuture","value":"","parent":{"krate":0,"index":234}},{"kind":"Use","ref_id":{"krate":0,"index":2598},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mod.rs","byte_start":62636,"byte_end":62647,"line_start":15,"line_end":15,"column_start":46,"column_end":57},"alias_span":null,"name":"CloseStatus","value":"","parent":{"krate":0,"index":234}},{"kind":"Use","ref_id":{"krate":0,"index":532},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mod.rs","byte_start":62691,"byte_end":62712,"line_start":20,"line_end":20,"column_start":25,"column_end":46},"alias_span":null,"name":"GenericOneshotChannel","value":"","parent":{"krate":0,"index":234}},{"kind":"Use","ref_id":{"krate":0,"index":558},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mod.rs","byte_start":62714,"byte_end":62733,"line_start":20,"line_end":20,"column_start":48,"column_end":67},"alias_span":null,"name":"LocalOneshotChannel","value":"","parent":{"krate":0,"index":234}},{"kind":"Use","ref_id":{"krate":0,"index":562},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mod.rs","byte_start":62784,"byte_end":62798,"line_start":23,"line_end":23,"column_start":24,"column_end":38},"alias_span":null,"name":"OneshotChannel","value":"","parent":{"krate":0,"index":234}},{"kind":"Use","ref_id":{"krate":0,"index":701},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mod.rs","byte_start":62864,"byte_end":62894,"line_start":28,"line_end":28,"column_start":5,"column_end":35},"alias_span":null,"name":"GenericOneshotBroadcastChannel","value":"","parent":{"krate":0,"index":234}},{"kind":"Use","ref_id":{"krate":0,"index":727},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mod.rs","byte_start":62896,"byte_end":62924,"line_start":28,"line_end":28,"column_start":37,"column_end":65},"alias_span":null,"name":"LocalOneshotBroadcastChannel","value":"","parent":{"krate":0,"index":234}},{"kind":"Use","ref_id":{"krate":0,"index":731},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mod.rs","byte_start":62987,"byte_end":63010,"line_start":32,"line_end":32,"column_start":34,"column_end":57},"alias_span":null,"name":"OneshotBroadcastChannel","value":"","parent":{"krate":0,"index":234}},{"kind":"Use","ref_id":{"krate":0,"index":918},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mod.rs","byte_start":63065,"byte_end":63093,"line_start":36,"line_end":36,"column_start":5,"column_end":33},"alias_span":null,"name":"GenericStateBroadcastChannel","value":"","parent":{"krate":0,"index":234}},{"kind":"Use","ref_id":{"krate":0,"index":945},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mod.rs","byte_start":63095,"byte_end":63121,"line_start":36,"line_end":36,"column_start":35,"column_end":61},"alias_span":null,"name":"LocalStateBroadcastChannel","value":"","parent":{"krate":0,"index":234}},{"kind":"Use","ref_id":{"krate":0,"index":2646},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mod.rs","byte_start":63123,"byte_end":63130,"line_start":36,"line_end":36,"column_start":63,"column_end":70},"alias_span":null,"name":"StateId","value":"","parent":{"krate":0,"index":234}},{"kind":"Use","ref_id":{"krate":0,"index":870},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mod.rs","byte_start":63136,"byte_end":63154,"line_start":37,"line_end":37,"column_start":5,"column_end":23},"alias_span":null,"name":"StateReceiveFuture","value":"","parent":{"krate":0,"index":234}},{"kind":"Use","ref_id":{"krate":0,"index":949},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mod.rs","byte_start":63215,"byte_end":63236,"line_start":41,"line_end":41,"column_start":32,"column_end":53},"alias_span":null,"name":"StateBroadcastChannel","value":"","parent":{"krate":0,"index":234}},{"kind":"Use","ref_id":{"krate":0,"index":2683},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mod.rs","byte_start":63276,"byte_end":63289,"line_start":46,"line_end":46,"column_start":5,"column_end":18},"alias_span":null,"name":"ChannelStream","value":"","parent":{"krate":0,"index":234}},{"kind":"Use","ref_id":{"krate":0,"index":1188},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mod.rs","byte_start":63291,"byte_end":63305,"line_start":46,"line_end":46,"column_start":20,"column_end":34},"alias_span":null,"name":"GenericChannel","value":"","parent":{"krate":0,"index":234}},{"kind":"Use","ref_id":{"krate":0,"index":1243},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mod.rs","byte_start":63307,"byte_end":63319,"line_start":46,"line_end":46,"column_start":36,"column_end":48},"alias_span":null,"name":"LocalChannel","value":"","parent":{"krate":0,"index":234}},{"kind":"Use","ref_id":{"krate":0,"index":1246},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mod.rs","byte_start":63321,"byte_end":63343,"line_start":46,"line_end":46,"column_start":50,"column_end":72},"alias_span":null,"name":"LocalUnbufferedChannel","value":"","parent":{"krate":0,"index":234}},{"kind":"Use","ref_id":{"krate":0,"index":1251},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mod.rs","byte_start":63394,"byte_end":63401,"line_start":50,"line_end":50,"column_start":22,"column_end":29},"alias_span":null,"name":"Channel","value":"","parent":{"krate":0,"index":234}},{"kind":"Use","ref_id":{"krate":0,"index":1254},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mod.rs","byte_start":63403,"byte_end":63420,"line_start":50,"line_end":50,"column_start":31,"column_end":48},"alias_span":null,"name":"UnbufferedChannel","value":"","parent":{"krate":0,"index":234}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mod.rs","byte_start":63738,"byte_end":63739,"line_start":60,"line_end":60,"column_start":55,"column_end":56},"alias_span":null,"name":"*","value":"ChannelReceiveFuture, ChannelSendFuture","parent":{"krate":0,"index":1411}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mod.rs","byte_start":63785,"byte_end":63786,"line_start":61,"line_end":61,"column_start":45,"column_end":46},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1411}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mod.rs","byte_start":63835,"byte_end":63836,"line_start":62,"line_end":62,"column_start":48,"column_end":49},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1411}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mod.rs","byte_start":63895,"byte_end":63896,"line_start":63,"line_end":63,"column_start":58,"column_end":59},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1411}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mod.rs","byte_start":63953,"byte_end":63954,"line_start":64,"line_end":64,"column_start":56,"column_end":57},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1411}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mod.rs","byte_start":64015,"byte_end":64016,"line_start":69,"line_end":69,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"shared","parent":{"krate":0,"index":234}},{"kind":"Use","ref_id":{"krate":0,"index":1478},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mod.rs","byte_start":190032,"byte_end":190055,"line_start":9,"line_end":9,"column_start":5,"column_end":28},"alias_span":null,"name":"GenericManualResetEvent","value":"","parent":{"krate":0,"index":1418}},{"kind":"Use","ref_id":{"krate":0,"index":1497},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mod.rs","byte_start":190057,"byte_end":190082,"line_start":9,"line_end":9,"column_start":30,"column_end":55},"alias_span":null,"name":"GenericWaitForEventFuture","value":"","parent":{"krate":0,"index":1418}},{"kind":"Use","ref_id":{"krate":0,"index":1522},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mod.rs","byte_start":190084,"byte_end":190105,"line_start":9,"line_end":9,"column_start":57,"column_end":78},"alias_span":null,"name":"LocalManualResetEvent","value":"","parent":{"krate":0,"index":1418}},{"kind":"Use","ref_id":{"krate":0,"index":1523},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mod.rs","byte_start":190111,"byte_end":190134,"line_start":10,"line_end":10,"column_start":5,"column_end":28},"alias_span":null,"name":"LocalWaitForEventFuture","value":"","parent":{"krate":0,"index":1418}},{"kind":"Use","ref_id":{"krate":0,"index":1527},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mod.rs","byte_start":190199,"byte_end":190215,"line_start":14,"line_end":14,"column_start":36,"column_end":52},"alias_span":null,"name":"ManualResetEvent","value":"","parent":{"krate":0,"index":1418}},{"kind":"Use","ref_id":{"krate":0,"index":1528},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mod.rs","byte_start":190217,"byte_end":190235,"line_start":14,"line_end":14,"column_start":54,"column_end":72},"alias_span":null,"name":"WaitForEventFuture","value":"","parent":{"krate":0,"index":1418}},{"kind":"Use","ref_id":{"krate":0,"index":1679},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mod.rs","byte_start":190278,"byte_end":190290,"line_start":19,"line_end":19,"column_start":5,"column_end":17},"alias_span":null,"name":"GenericMutex","value":"","parent":{"krate":0,"index":1418}},{"kind":"Use","ref_id":{"krate":0,"index":1623},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mod.rs","byte_start":190292,"byte_end":190309,"line_start":19,"line_end":19,"column_start":19,"column_end":36},"alias_span":null,"name":"GenericMutexGuard","value":"","parent":{"krate":0,"index":1418}},{"kind":"Use","ref_id":{"krate":0,"index":1648},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mod.rs","byte_start":190311,"byte_end":190333,"line_start":19,"line_end":19,"column_start":38,"column_end":60},"alias_span":null,"name":"GenericMutexLockFuture","value":"","parent":{"krate":0,"index":1418}},{"kind":"Use","ref_id":{"krate":0,"index":1701},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mod.rs","byte_start":190335,"byte_end":190345,"line_start":19,"line_end":19,"column_start":62,"column_end":72},"alias_span":null,"name":"LocalMutex","value":"","parent":{"krate":0,"index":1418}},{"kind":"Use","ref_id":{"krate":0,"index":1703},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mod.rs","byte_start":190351,"byte_end":190366,"line_start":20,"line_end":20,"column_start":5,"column_end":20},"alias_span":null,"name":"LocalMutexGuard","value":"","parent":{"krate":0,"index":1418}},{"kind":"Use","ref_id":{"krate":0,"index":1706},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mod.rs","byte_start":190368,"byte_end":190388,"line_start":20,"line_end":20,"column_start":22,"column_end":42},"alias_span":null,"name":"LocalMutexLockFuture","value":"","parent":{"krate":0,"index":1418}},{"kind":"Use","ref_id":{"krate":0,"index":1711},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mod.rs","byte_start":190440,"byte_end":190445,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":1418}},{"kind":"Use","ref_id":{"krate":0,"index":1713},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mod.rs","byte_start":190447,"byte_end":190457,"line_start":24,"line_end":24,"column_start":30,"column_end":40},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":1418}},{"kind":"Use","ref_id":{"krate":0,"index":1716},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mod.rs","byte_start":190459,"byte_end":190474,"line_start":24,"line_end":24,"column_start":42,"column_end":57},"alias_span":null,"name":"MutexLockFuture","value":"","parent":{"krate":0,"index":1418}},{"kind":"Use","ref_id":{"krate":0,"index":1851},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mod.rs","byte_start":190525,"byte_end":190541,"line_start":29,"line_end":29,"column_start":5,"column_end":21},"alias_span":null,"name":"GenericSemaphore","value":"","parent":{"krate":0,"index":1418}},{"kind":"Use","ref_id":{"krate":0,"index":1825},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mod.rs","byte_start":190543,"byte_end":190572,"line_start":29,"line_end":29,"column_start":23,"column_end":52},"alias_span":null,"name":"GenericSemaphoreAcquireFuture","value":"","parent":{"krate":0,"index":1418}},{"kind":"Use","ref_id":{"krate":0,"index":1811},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mod.rs","byte_start":190574,"byte_end":190598,"line_start":29,"line_end":29,"column_start":54,"column_end":78},"alias_span":null,"name":"GenericSemaphoreReleaser","value":"","parent":{"krate":0,"index":1418}},{"kind":"Use","ref_id":{"krate":0,"index":1868},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mod.rs","byte_start":190604,"byte_end":190618,"line_start":30,"line_end":30,"column_start":5,"column_end":19},"alias_span":null,"name":"LocalSemaphore","value":"","parent":{"krate":0,"index":1418}},{"kind":"Use","ref_id":{"krate":0,"index":1871},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mod.rs","byte_start":190620,"byte_end":190647,"line_start":30,"line_end":30,"column_start":21,"column_end":48},"alias_span":null,"name":"LocalSemaphoreAcquireFuture","value":"","parent":{"krate":0,"index":1418}},{"kind":"Use","ref_id":{"krate":0,"index":1869},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mod.rs","byte_start":190649,"byte_end":190671,"line_start":30,"line_end":30,"column_start":50,"column_end":72},"alias_span":null,"name":"LocalSemaphoreReleaser","value":"","parent":{"krate":0,"index":1418}},{"kind":"Use","ref_id":{"krate":0,"index":1919},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mod.rs","byte_start":190734,"byte_end":190756,"line_start":35,"line_end":35,"column_start":5,"column_end":27},"alias_span":null,"name":"GenericSharedSemaphore","value":"","parent":{"krate":0,"index":1418}},{"kind":"Use","ref_id":{"krate":0,"index":1899},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mod.rs","byte_start":190758,"byte_end":190793,"line_start":35,"line_end":35,"column_start":29,"column_end":64},"alias_span":null,"name":"GenericSharedSemaphoreAcquireFuture","value":"","parent":{"krate":0,"index":1418}},{"kind":"Use","ref_id":{"krate":0,"index":1886},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mod.rs","byte_start":190799,"byte_end":190829,"line_start":36,"line_end":36,"column_start":5,"column_end":35},"alias_span":null,"name":"GenericSharedSemaphoreReleaser","value":"","parent":{"krate":0,"index":1418}},{"kind":"Use","ref_id":{"krate":0,"index":1875},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mod.rs","byte_start":190890,"byte_end":190899,"line_start":41,"line_end":41,"column_start":5,"column_end":14},"alias_span":null,"name":"Semaphore","value":"","parent":{"krate":0,"index":1418}},{"kind":"Use","ref_id":{"krate":0,"index":1878},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mod.rs","byte_start":190901,"byte_end":190923,"line_start":41,"line_end":41,"column_start":16,"column_end":38},"alias_span":null,"name":"SemaphoreAcquireFuture","value":"","parent":{"krate":0,"index":1418}},{"kind":"Use","ref_id":{"krate":0,"index":1876},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mod.rs","byte_start":190925,"byte_end":190942,"line_start":41,"line_end":41,"column_start":40,"column_end":57},"alias_span":null,"name":"SemaphoreReleaser","value":"","parent":{"krate":0,"index":1418}},{"kind":"Use","ref_id":{"krate":0,"index":1941},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mod.rs","byte_start":190944,"byte_end":190959,"line_start":41,"line_end":41,"column_start":59,"column_end":74},"alias_span":null,"name":"SharedSemaphore","value":"","parent":{"krate":0,"index":1418}},{"kind":"Use","ref_id":{"krate":0,"index":1943},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mod.rs","byte_start":190965,"byte_end":190993,"line_start":42,"line_end":42,"column_start":5,"column_end":33},"alias_span":null,"name":"SharedSemaphoreAcquireFuture","value":"","parent":{"krate":0,"index":1418}},{"kind":"Use","ref_id":{"krate":0,"index":1942},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mod.rs","byte_start":190995,"byte_end":191018,"line_start":42,"line_end":42,"column_start":35,"column_end":58},"alias_span":null,"name":"SharedSemaphoreReleaser","value":"","parent":{"krate":0,"index":1418}},{"kind":"Use","ref_id":{"krate":0,"index":2003},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/mod.rs","byte_start":253497,"byte_end":253502,"line_start":9,"line_end":9,"column_start":23,"column_end":28},"alias_span":null,"name":"Clock","value":"","parent":{"krate":0,"index":1994}},{"kind":"Use","ref_id":{"krate":0,"index":2005},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/mod.rs","byte_start":253504,"byte_end":253513,"line_start":9,"line_end":9,"column_start":30,"column_end":39},"alias_span":null,"name":"MockClock","value":"","parent":{"krate":0,"index":1994}},{"kind":"Use","ref_id":{"krate":0,"index":2019},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/mod.rs","byte_start":253562,"byte_end":253570,"line_start":12,"line_end":12,"column_start":22,"column_end":30},"alias_span":null,"name":"StdClock","value":"","parent":{"krate":0,"index":1994}},{"kind":"Use","ref_id":{"krate":0,"index":2120},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/mod.rs","byte_start":253612,"byte_end":253631,"line_start":17,"line_end":17,"column_start":5,"column_end":24},"alias_span":null,"name":"GenericTimerService","value":"","parent":{"krate":0,"index":1994}},{"kind":"Use","ref_id":{"krate":0,"index":2114},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/mod.rs","byte_start":253633,"byte_end":253643,"line_start":17,"line_end":17,"column_start":26,"column_end":36},"alias_span":null,"name":"LocalTimer","value":"","parent":{"krate":0,"index":1994}},{"kind":"Use","ref_id":{"krate":0,"index":2148},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/mod.rs","byte_start":253645,"byte_end":253661,"line_start":17,"line_end":17,"column_start":38,"column_end":54},"alias_span":null,"name":"LocalTimerFuture","value":"","parent":{"krate":0,"index":1994}},{"kind":"Use","ref_id":{"krate":0,"index":2181},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/mod.rs","byte_start":253663,"byte_end":253680,"line_start":17,"line_end":17,"column_start":56,"column_end":73},"alias_span":null,"name":"LocalTimerService","value":"","parent":{"krate":0,"index":1994}},{"kind":"Use","ref_id":{"krate":0,"index":2117},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/mod.rs","byte_start":253686,"byte_end":253691,"line_start":18,"line_end":18,"column_start":5,"column_end":10},"alias_span":null,"name":"Timer","value":"","parent":{"krate":0,"index":1994}},{"kind":"Use","ref_id":{"krate":0,"index":2165},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/mod.rs","byte_start":253693,"byte_end":253704,"line_start":18,"line_end":18,"column_start":12,"column_end":23},"alias_span":null,"name":"TimerFuture","value":"","parent":{"krate":0,"index":1994}},{"kind":"Use","ref_id":{"krate":0,"index":2184},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/mod.rs","byte_start":253755,"byte_end":253767,"line_start":22,"line_end":22,"column_start":22,"column_end":34},"alias_span":null,"name":"TimerService","value":"","parent":{"krate":0,"index":1994}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":0,"byte_end":9651,"line_start":1,"line_end":235,"column_start":1,"column_end":11},"name":"","qualname":"::","value":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":137},{"krate":0,"index":178},{"krate":0,"index":234},{"krate":0,"index":1418},{"krate":0,"index":1994},{"krate":0,"index":2208}],"decl_id":null,"docs":" Synchronization primitives and utilities based on intrusive collections.","sig":null,"attributes":[{"value":"/ Synchronization primitives and utilities based on intrusive collections.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":0,"byte_end":76,"line_start":1,"line_end":1,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":77,"byte_end":80,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate provides a variety of `Futures`-based and `async/await` compatible","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":81,"byte_end":162,"line_start":3,"line_end":3,"column_start":1,"column_end":82}},{"value":"/ types that are based on the idea of intrusive collections:","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":163,"byte_end":225,"line_start":4,"line_end":4,"column_start":1,"column_end":63}},{"value":"/ - Channels in a variety of flavors:","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":226,"byte_end":265,"line_start":5,"line_end":5,"column_start":1,"column_end":40}},{"value":"/   - Oneshot","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":266,"byte_end":281,"line_start":6,"line_end":6,"column_start":1,"column_end":16}},{"value":"/   - Multi-Producer Multi-Consumer (MPMC)","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":282,"byte_end":326,"line_start":7,"line_end":7,"column_start":1,"column_end":45}},{"value":"/   - State Broadcast","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":327,"byte_end":350,"line_start":8,"line_end":8,"column_start":1,"column_end":24}},{"value":"/ - Synchronization Primitives:","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":351,"byte_end":384,"line_start":9,"line_end":9,"column_start":1,"column_end":34}},{"value":"/   - Manual Reset Event","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":385,"byte_end":411,"line_start":10,"line_end":10,"column_start":1,"column_end":27}},{"value":"/   - Mutex","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":412,"byte_end":425,"line_start":11,"line_end":11,"column_start":1,"column_end":14}},{"value":"/   - Semaphore","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":426,"byte_end":443,"line_start":12,"line_end":12,"column_start":1,"column_end":18}},{"value":"/ - A timer","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":444,"byte_end":457,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":458,"byte_end":461,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ## Intrusive collections?","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":462,"byte_end":491,"line_start":15,"line_end":15,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":492,"byte_end":495,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ In an intrusive collection, the elements that want to get stored inside the","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":496,"byte_end":575,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ collection provide the means to store themselves inside the collection.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":576,"byte_end":651,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/ E.g. in an intrusive linked list, each element that gets stored inside the","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":652,"byte_end":730,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ list contains a pointer field that points to the next list element. E.g.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":731,"byte_end":807,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":808,"byte_end":811,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":812,"byte_end":819,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ // The element which is intended to be stored inside an intrusive container","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":820,"byte_end":899,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ struct ListElement {","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":900,"byte_end":924,"line_start":24,"line_end":24,"column_start":1,"column_end":25}},{"value":"/    data: u32,","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":925,"byte_end":942,"line_start":25,"line_end":25,"column_start":1,"column_end":18}},{"value":"/    next: *mut ListElement,","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":943,"byte_end":973,"line_start":26,"line_end":26,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":974,"byte_end":979,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":980,"byte_end":983,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ // The intrusive container","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":984,"byte_end":1014,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/ struct List {","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":1015,"byte_end":1032,"line_start":30,"line_end":30,"column_start":1,"column_end":18}},{"value":"/     head: *mut ListElement,","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":1033,"byte_end":1064,"line_start":31,"line_end":31,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":1065,"byte_end":1070,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":1071,"byte_end":1078,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":1079,"byte_end":1082,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ The advantage here is that the intrusive collection (here: the list) requires","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":1083,"byte_end":1164,"line_start":35,"line_end":35,"column_start":1,"column_end":82}},{"value":"/ only a fixed amount of memory. In this case it only needs a pointer to the","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":1165,"byte_end":1243,"line_start":36,"line_end":36,"column_start":1,"column_end":79}},{"value":"/ first element.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":1244,"byte_end":1262,"line_start":37,"line_end":37,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":1263,"byte_end":1266,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The list container itself has a fixed size of a single pointer independent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":1267,"byte_end":1345,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/ of the number of stored elements.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":1346,"byte_end":1383,"line_start":40,"line_end":40,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":1384,"byte_end":1387,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Intrusive lists are often used in low-level code like in operating system","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":1388,"byte_end":1465,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ kernels.  E.g. they can be used for storing elements that represent threads","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":1466,"byte_end":1545,"line_start":43,"line_end":43,"column_start":1,"column_end":80}},{"value":"/ that are blocked and waiting on queue.  In that case the stored elements can","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":1546,"byte_end":1626,"line_start":44,"line_end":44,"column_start":1,"column_end":81}},{"value":"/ be on the call stack of the caller of each blocked thread, since the","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":1627,"byte_end":1699,"line_start":45,"line_end":45,"column_start":1,"column_end":73}},{"value":"/ call stack won't change as long as the thread is blocked.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":1700,"byte_end":1761,"line_start":46,"line_end":46,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":1762,"byte_end":1765,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ### Application in Futures","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":1766,"byte_end":1796,"line_start":48,"line_end":48,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":1797,"byte_end":1800,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ This library brings this idea into the world of Rusts `Future`s. Due to the","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":1801,"byte_end":1880,"line_start":50,"line_end":50,"column_start":1,"column_end":80}},{"value":"/ addition of `Pin`ning, the address of a certain `Future` is not allowed to","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":1881,"byte_end":1959,"line_start":51,"line_end":51,"column_start":1,"column_end":79}},{"value":"/ change between the first call to `poll()` and when the `Future` is dropped.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":1960,"byte_end":2039,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ This means the data inside the `Future` itself can be inserted into an","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":2040,"byte_end":2114,"line_start":53,"line_end":53,"column_start":1,"column_end":75}},{"value":"/ intrusive container. If the the call to `Future::poll()` is not immedately","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":2115,"byte_end":2193,"line_start":54,"line_end":54,"column_start":1,"column_end":79}},{"value":"/ ready, some parts of the `Future` itself are registered in the type which","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":2194,"byte_end":2271,"line_start":55,"line_end":55,"column_start":1,"column_end":78}},{"value":"/ yielded the `Future`. Each `Future` can store a `Waker`. When the original","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":2272,"byte_end":2350,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"/ type becomes ready, it can iterate through the list of registered `Future`s,","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":2351,"byte_end":2431,"line_start":57,"line_end":57,"column_start":1,"column_end":81}},{"value":"/ wakeup associated tasks, and potentially remove them from its queue.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":2432,"byte_end":2504,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":2505,"byte_end":2508,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The result is that the future-yielding type is not required to copy an","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":2509,"byte_end":2583,"line_start":60,"line_end":60,"column_start":1,"column_end":75}},{"value":"/ arbitrary number of `Waker` objects into itself, and thereby does not require","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":2584,"byte_end":2665,"line_start":61,"line_end":61,"column_start":1,"column_end":82}},{"value":"/ dynamic memory for this task.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":2666,"byte_end":2699,"line_start":62,"line_end":62,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":2700,"byte_end":2703,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ When a `Future` gets destructed/dropped, it must make sure to remove itself","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":2704,"byte_end":2783,"line_start":64,"line_end":64,"column_start":1,"column_end":80}},{"value":"/ from any collections that refer to it to avoid invalid memory accesses.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":2784,"byte_end":2859,"line_start":65,"line_end":65,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":2860,"byte_end":2863,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ This library implements common synchronization primitives for the usage in","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":2864,"byte_end":2942,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ asychronous code based on this concept.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":2943,"byte_end":2986,"line_start":68,"line_end":68,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":2987,"byte_end":2990,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ The implementation requires the usage of a fair chunk of `unsafe`","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":2991,"byte_end":3060,"line_start":70,"line_end":70,"column_start":1,"column_end":70}},{"value":"/ annotations. However the provided user-level API is intended to be fully safe.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":3061,"byte_end":3143,"line_start":71,"line_end":71,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":3144,"byte_end":3147,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ## Features of this library","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":3148,"byte_end":3179,"line_start":73,"line_end":73,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":3180,"byte_end":3183,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ The following types are currently implemented:","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":3184,"byte_end":3234,"line_start":75,"line_end":75,"column_start":1,"column_end":51}},{"value":"/ - Channels (oneshot and multi-producer-multi-consumer)","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":3235,"byte_end":3293,"line_start":76,"line_end":76,"column_start":1,"column_end":59}},{"value":"/ - Synchronization primitives (async mutexes and events)","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":3294,"byte_end":3353,"line_start":77,"line_end":77,"column_start":1,"column_end":60}},{"value":"/ - Timers","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":3354,"byte_end":3366,"line_start":78,"line_end":78,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":3367,"byte_end":3370,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ ## Design goals for the library","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":3371,"byte_end":3406,"line_start":80,"line_end":80,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":3407,"byte_end":3410,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ - Provide implementations of common synchronization primitives in a platform","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":3411,"byte_end":3491,"line_start":82,"line_end":82,"column_start":1,"column_end":81}},{"value":"/   independent fashion.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":3492,"byte_end":3518,"line_start":83,"line_end":83,"column_start":1,"column_end":27}},{"value":"/ - Support `no-std` environments. As many types as possible are also provided","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":3519,"byte_end":3599,"line_start":84,"line_end":84,"column_start":1,"column_end":81}},{"value":"/   for `no-std` environments. The library should boost the ability to use","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":3600,"byte_end":3676,"line_start":85,"line_end":85,"column_start":1,"column_end":77}},{"value":"/   async Rust code in environments like:","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":3677,"byte_end":3720,"line_start":86,"line_end":86,"column_start":1,"column_end":44}},{"value":"/   - Microcontrollers (RTOS and bare-metal)","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":3721,"byte_end":3767,"line_start":87,"line_end":87,"column_start":1,"column_end":47}},{"value":"/   - Kernels","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":3768,"byte_end":3783,"line_start":88,"line_end":88,"column_start":1,"column_end":16}},{"value":"/   - Drivers","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":3784,"byte_end":3799,"line_start":89,"line_end":89,"column_start":1,"column_end":16}},{"value":"/ - Avoid dynamic memory allocations at runtime.  After objects from this","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":3800,"byte_end":3875,"line_start":90,"line_end":90,"column_start":1,"column_end":76}},{"value":"/   library have been created, they should not require allocation of any","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":3876,"byte_end":3950,"line_start":91,"line_end":91,"column_start":1,"column_end":75}},{"value":"/   further memory at runtime.  E.g. they should not need to allocate memory","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":3951,"byte_end":4029,"line_start":92,"line_end":92,"column_start":1,"column_end":79}},{"value":"/   for each call to an asynchronous function or each time a new task accesses","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":4030,"byte_end":4110,"line_start":93,"line_end":93,"column_start":1,"column_end":81}},{"value":"/   the same object in parallel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":4111,"byte_end":4145,"line_start":94,"line_end":94,"column_start":1,"column_end":35}},{"value":"/ - Offer familiar APIs.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":4146,"byte_end":4172,"line_start":95,"line_end":95,"column_start":1,"column_end":27}},{"value":"/   The library tries to mimic the APIs of existing Rust libraries like the","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":4173,"byte_end":4250,"line_start":96,"line_end":96,"column_start":1,"column_end":78}},{"value":"/   standard library and `futures-rs` as closely as possible.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":4251,"byte_end":4314,"line_start":97,"line_end":97,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":4315,"byte_end":4318,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ## Non goals","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":4319,"byte_end":4335,"line_start":99,"line_end":99,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":4336,"byte_end":4339,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ - Provide IO primitives (like sockets), or platform specific implementations.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":4340,"byte_end":4421,"line_start":101,"line_end":101,"column_start":1,"column_end":82}},{"value":"/ - Reach the highest possible performance in terms of throughput and latency.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":4422,"byte_end":4502,"line_start":102,"line_end":102,"column_start":1,"column_end":81}},{"value":"/   While code in this library is optimized for performance, portability","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":4503,"byte_end":4577,"line_start":103,"line_end":103,"column_start":1,"column_end":75}},{"value":"/   and deterministic memory usage are more important goals.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":4578,"byte_end":4640,"line_start":104,"line_end":104,"column_start":1,"column_end":63}},{"value":"/ - Provide future wrappers for platform-specific APIs.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":4641,"byte_end":4698,"line_start":105,"line_end":105,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":4699,"byte_end":4702,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ## Local, Non-local and shared flavors","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":4703,"byte_end":4745,"line_start":107,"line_end":107,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":4746,"byte_end":4749,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ The library provides types in a variety of flavors:","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":4750,"byte_end":4805,"line_start":109,"line_end":109,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":4806,"byte_end":4809,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ - A local flavor (e.g. [`channel::LocalChannel`])","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":4810,"byte_end":4863,"line_start":111,"line_end":111,"column_start":1,"column_end":54}},{"value":"/ - A non-local flavor (e.g. [`channel::Channel`])","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":4864,"byte_end":4916,"line_start":112,"line_end":112,"column_start":1,"column_end":53}},{"value":"/ - A shared flavor (e.g. [`channel::shared::Sender`])","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":4917,"byte_end":4973,"line_start":113,"line_end":113,"column_start":1,"column_end":57}},{"value":"/ - A generic flavor (e.g. [`channel::GenericChannel`] and","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":4974,"byte_end":5034,"line_start":114,"line_end":114,"column_start":1,"column_end":61}},{"value":"/   [`channel::shared::GenericSender`])","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":5035,"byte_end":5076,"line_start":115,"line_end":115,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":5077,"byte_end":5080,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ The difference between these types lie in their thread-safety. The non-local","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":5081,"byte_end":5161,"line_start":117,"line_end":117,"column_start":1,"column_end":81}},{"value":"/ flavors of types can be accessed from multiple threads (and thereby also","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":5162,"byte_end":5238,"line_start":118,"line_end":118,"column_start":1,"column_end":77}},{"value":"/ futures tasks) concurrently. This means they implement the `Sync` trait in","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":5239,"byte_end":5317,"line_start":119,"line_end":119,"column_start":1,"column_end":79}},{"value":"/ addition to the `Send` trait.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":5318,"byte_end":5351,"line_start":120,"line_end":120,"column_start":1,"column_end":34}},{"value":"/ The local flavors only implement the `Send` trait.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":5352,"byte_end":5406,"line_start":121,"line_end":121,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":5407,"byte_end":5410,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ ### Local flavor","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":5411,"byte_end":5431,"line_start":123,"line_end":123,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":5432,"byte_end":5435,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ The local flavors will require no internal synchronization (e.g. internal","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":5436,"byte_end":5513,"line_start":125,"line_end":125,"column_start":1,"column_end":78}},{"value":"/ Mutexes) and can therefore be provided for all platforms (including `no-std`).","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":5514,"byte_end":5596,"line_start":126,"line_end":126,"column_start":1,"column_end":83}},{"value":"/ Due the lack of required synchronization, they are also very fast.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":5597,"byte_end":5667,"line_start":127,"line_end":127,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":5668,"byte_end":5671,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ It might seem counter-intuitive to provide synchronization primitives that","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":5672,"byte_end":5750,"line_start":129,"line_end":129,"column_start":1,"column_end":79}},{"value":"/ only work within a single task. However there are a variety of applications","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":5751,"byte_end":5830,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"/ where these can be used to coordinate sub-tasks (futures that are polled on","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":5831,"byte_end":5910,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"/ a single task concurrently).","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":5911,"byte_end":5943,"line_start":132,"line_end":132,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":5944,"byte_end":5947,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ The following example demonstrates this use-case:","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":5948,"byte_end":6001,"line_start":134,"line_end":134,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":6002,"byte_end":6005,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":6006,"byte_end":6013,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/ # use futures::join;","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":6014,"byte_end":6038,"line_start":137,"line_end":137,"column_start":1,"column_end":25}},{"value":"/ # use futures_intrusive::sync::LocalManualResetEvent;","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":6039,"byte_end":6096,"line_start":138,"line_end":138,"column_start":1,"column_end":58}},{"value":"/ async fn async_fn() {","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":6097,"byte_end":6122,"line_start":139,"line_end":139,"column_start":1,"column_end":26}},{"value":"/     let event = LocalManualResetEvent::new(false);","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":6123,"byte_end":6177,"line_start":140,"line_end":140,"column_start":1,"column_end":55}},{"value":"/     let task_a = async {","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":6178,"byte_end":6206,"line_start":141,"line_end":141,"column_start":1,"column_end":29}},{"value":"/         // Wait for the event","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":6207,"byte_end":6240,"line_start":142,"line_end":142,"column_start":1,"column_end":34}},{"value":"/         event.wait().await;","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":6241,"byte_end":6272,"line_start":143,"line_end":143,"column_start":1,"column_end":32}},{"value":"/         // Do something with the knowledge that task_b reached a certain state","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":6273,"byte_end":6355,"line_start":144,"line_end":144,"column_start":1,"column_end":83}},{"value":"/     };","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":6356,"byte_end":6366,"line_start":145,"line_end":145,"column_start":1,"column_end":11}},{"value":"/     let task_b = async {","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":6367,"byte_end":6395,"line_start":146,"line_end":146,"column_start":1,"column_end":29}},{"value":"/         // Some complex asynchronous workflow here","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":6396,"byte_end":6450,"line_start":147,"line_end":147,"column_start":1,"column_end":55}},{"value":"/         // ...","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":6451,"byte_end":6469,"line_start":148,"line_end":148,"column_start":1,"column_end":19}},{"value":"/         // Signal task_a","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":6470,"byte_end":6498,"line_start":149,"line_end":149,"column_start":1,"column_end":29}},{"value":"/         event.set();","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":6499,"byte_end":6523,"line_start":150,"line_end":150,"column_start":1,"column_end":25}},{"value":"/     };","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":6524,"byte_end":6534,"line_start":151,"line_end":151,"column_start":1,"column_end":11}},{"value":"/     join!(task_a, task_b);","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":6535,"byte_end":6565,"line_start":152,"line_end":152,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":6566,"byte_end":6571,"line_start":153,"line_end":153,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":6572,"byte_end":6579,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":6580,"byte_end":6583,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ ### Non-local flavor","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":6584,"byte_end":6608,"line_start":156,"line_end":156,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":6609,"byte_end":6612,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ The non-local flavors can be used between arbitrary tasks and threads.  They","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":6613,"byte_end":6693,"line_start":158,"line_end":158,"column_start":1,"column_end":81}},{"value":"/ use internal synchronization for this in form of an embedded `Mutex` of","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":6694,"byte_end":6769,"line_start":159,"line_end":159,"column_start":1,"column_end":76}},{"value":"/ [`parking_lot::Mutex`] type.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":6770,"byte_end":6802,"line_start":160,"line_end":160,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":6803,"byte_end":6806,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ The non-local flavors are only available in `alloc` environments.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":6807,"byte_end":6876,"line_start":162,"line_end":162,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":6877,"byte_end":6880,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ ### Shared flavor","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":6881,"byte_end":6902,"line_start":164,"line_end":164,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":6903,"byte_end":6906,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ For some types a shared flavor is provided. Non-local flavors of types are","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":6907,"byte_end":6985,"line_start":166,"line_end":166,"column_start":1,"column_end":79}},{"value":"/ `Sync`, but they still can only be shared by reference between various tasks.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":6986,"byte_end":7067,"line_start":167,"line_end":167,"column_start":1,"column_end":82}},{"value":"/ Shared flavors are also `Sync`, but the types additionally implement the","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":7069,"byte_end":7145,"line_start":169,"line_end":169,"column_start":1,"column_end":77}},{"value":"/ `Clone` trait, which allows duplicating the object, and passing ownership of","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":7146,"byte_end":7226,"line_start":170,"line_end":170,"column_start":1,"column_end":81}},{"value":"/ it to a different task. These types allow avoiding references (and thereby","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":7227,"byte_end":7305,"line_start":171,"line_end":171,"column_start":1,"column_end":79}},{"value":"/ lifetimes) in some scenarios, which makes them more convenient to use.  The","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":7306,"byte_end":7385,"line_start":172,"line_end":172,"column_start":1,"column_end":80}},{"value":"/ types also return `Future`s which do not have an associated lifetime.  This","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":7386,"byte_end":7465,"line_start":173,"line_end":173,"column_start":1,"column_end":80}},{"value":"/ allows using those types as implementations of traits without the need for","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":7466,"byte_end":7544,"line_start":174,"line_end":174,"column_start":1,"column_end":79}},{"value":"/ generic associated types (GATs).","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":7545,"byte_end":7581,"line_start":175,"line_end":175,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":7582,"byte_end":7585,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ Due to the requirement of atomic reference counting, these types are","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":7586,"byte_end":7658,"line_start":177,"line_end":177,"column_start":1,"column_end":73}},{"value":"/ currently only available for `alloc` environments.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":7659,"byte_end":7713,"line_start":178,"line_end":178,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":7714,"byte_end":7717,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ ### Generic flavor","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":7718,"byte_end":7740,"line_start":180,"line_end":180,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":7741,"byte_end":7744,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ The generic flavors of provided types are parameterized around a","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":7745,"byte_end":7813,"line_start":182,"line_end":182,"column_start":1,"column_end":69}},{"value":"/ [`lock_api::RawMutex`] type. These form the base for the non-local and shared","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":7814,"byte_end":7895,"line_start":183,"line_end":183,"column_start":1,"column_end":82}},{"value":"/ flavors which simply parameterize the generic flavor in either a","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":7896,"byte_end":7964,"line_start":184,"line_end":184,"column_start":1,"column_end":69}},{"value":"/ non-thread-safe or thread-safe fashion.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":7965,"byte_end":8008,"line_start":185,"line_end":185,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":8009,"byte_end":8012,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ Users can directly use the generic flavors to adapt the provided thread-safe","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":8013,"byte_end":8093,"line_start":187,"line_end":187,"column_start":1,"column_end":81}},{"value":"/ types for use in `no-std` environments.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":8094,"byte_end":8137,"line_start":188,"line_end":188,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":8138,"byte_end":8141,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ E.g. by providing a custom [`lock_api::RawMutex`]","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":8142,"byte_end":8195,"line_start":190,"line_end":190,"column_start":1,"column_end":54}},{"value":"/ implementation, the following platforms can be supported:","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":8196,"byte_end":8257,"line_start":191,"line_end":191,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":8258,"byte_end":8261,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ - For RTOS platforms, RTOS-specific mutexes can be wrapped.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":8262,"byte_end":8325,"line_start":193,"line_end":193,"column_start":1,"column_end":64}},{"value":"/ - For kernel development, spinlock based mutexes can be created.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":8326,"byte_end":8394,"line_start":194,"line_end":194,"column_start":1,"column_end":69}},{"value":"/ - For embedded development, mutexes which just disable interrupts can be","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":8395,"byte_end":8471,"line_start":195,"line_end":195,"column_start":1,"column_end":77}},{"value":"/   utilized.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":8472,"byte_end":8487,"line_start":196,"line_end":196,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":8488,"byte_end":8491,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":8492,"byte_end":8495,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ ## Relation to types in other libraries","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":8496,"byte_end":8539,"line_start":199,"line_end":199,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":8540,"byte_end":8543,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ Other libraries (e.g. `futures-rs` and `tokio`) provide many primitives that","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":8544,"byte_end":8624,"line_start":201,"line_end":201,"column_start":1,"column_end":81}},{"value":"/ are comparable feature-wise to the types in this library.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":8625,"byte_end":8686,"line_start":202,"line_end":202,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":8687,"byte_end":8690,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ The most important differences are:","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":8691,"byte_end":8730,"line_start":204,"line_end":204,"column_start":1,"column_end":40}},{"value":"/ - This library has a bigger focus on `no-std` environments, and does not","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":8731,"byte_end":8807,"line_start":205,"line_end":205,"column_start":1,"column_end":77}},{"value":"/   only try to provide an implementation for `alloc` or `std`.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":8808,"byte_end":8873,"line_start":206,"line_end":206,"column_start":1,"column_end":66}},{"value":"/ - The types in this library do not require dynamic memory allocation for","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":8874,"byte_end":8950,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/   waking up an arbitrary number of tasks waiting on a particular","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":8951,"byte_end":9019,"line_start":208,"line_end":208,"column_start":1,"column_end":69}},{"value":"/   `Future`. Other libraries typically require heap-allocated nodes of","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":9020,"byte_end":9093,"line_start":209,"line_end":209,"column_start":1,"column_end":74}},{"value":"/   growing vectors for handling a varying number of tasks.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":9094,"byte_end":9155,"line_start":210,"line_end":210,"column_start":1,"column_end":62}},{"value":"/ - The `Future`s produced by this library are all `!Unpin`, which might make","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":9156,"byte_end":9235,"line_start":211,"line_end":211,"column_start":1,"column_end":80}},{"value":"/   them less ergonomic to use.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":9236,"byte_end":9269,"line_start":212,"line_end":212,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":9270,"byte_end":9273,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"warn(missing_docs, missing_debug_implementations)","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":9318,"byte_end":9371,"line_start":216,"line_end":216,"column_start":1,"column_end":54}},{"value":"deny(bare_trait_objects)","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":9372,"byte_end":9400,"line_start":217,"line_end":217,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":2218},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/noop_lock.rs","byte_start":9877,"byte_end":9885,"line_start":8,"line_end":8,"column_start":12,"column_end":20},"name":"NoopLock","qualname":"::noop_lock::NoopLock","value":"NoopLock {  }","parent":null,"children":[{"krate":0,"index":2219}],"decl_id":null,"docs":" An unsafe (non-thread-safe) lock, equivalent to UnsafeCell\n","sig":null,"attributes":[{"value":"/ An unsafe (non-thread-safe) lock, equivalent to UnsafeCell","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/noop_lock.rs","byte_start":9786,"byte_end":9848,"line_start":6,"line_end":6,"column_start":1,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":24},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"buffer","qualname":"::buffer","value":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/mod.rs","parent":null,"children":[{"krate":0,"index":25},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":134}],"decl_id":null,"docs":" Buffer types\n","sig":null,"attributes":[{"value":"/ Buffer types","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/mod.rs","byte_start":10234,"byte_end":10250,"line_start":1,"line_end":1,"column_start":1,"column_end":17}}]},{"kind":"Trait","id":{"krate":0,"index":26},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/real_array.rs","byte_start":11793,"byte_end":11802,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"name":"RealArray","qualname":"::buffer::real_array::RealArray","value":"RealArray<T>","parent":null,"children":[{"krate":0,"index":28}],"decl_id":null,"docs":" A marker trait which may only be implemented for native array types, like\n `[T; 2]`. The library incorporates several components that are parameterized\n by array types, but currently Rust provides no safe mechanism to express\n that.","sig":null,"attributes":[{"value":"/ A marker trait which may only be implemented for native array types, like","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/real_array.rs","byte_start":10485,"byte_end":10562,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ `[T; 2]`. The library incorporates several components that are parameterized","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/real_array.rs","byte_start":10563,"byte_end":10643,"line_start":2,"line_end":2,"column_start":1,"column_end":81}},{"value":"/ by array types, but currently Rust provides no safe mechanism to express","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/real_array.rs","byte_start":10644,"byte_end":10720,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/ that.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/real_array.rs","byte_start":10721,"byte_end":10730,"line_start":4,"line_end":4,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/real_array.rs","byte_start":10731,"byte_end":10734,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ In order to work around the limitations, these methods only accept arrays","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/real_array.rs","byte_start":10735,"byte_end":10812,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ which implement the `RealArray` type. The library provides an implementation","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/real_array.rs","byte_start":10813,"byte_end":10893,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ of `RealArray` for arrays up to length 64, as well as for all powers of 2","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/real_array.rs","byte_start":10894,"byte_end":10971,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ up to 64k.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/real_array.rs","byte_start":10972,"byte_end":10986,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/real_array.rs","byte_start":10987,"byte_end":10990,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ In order to let the library accept arrays of bigger sizes, `RealArray` can","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/real_array.rs","byte_start":10991,"byte_end":11069,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ be implemented by users via newtypes. A type as defined in the following","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/real_array.rs","byte_start":11070,"byte_end":11146,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ example can be passed to the library:","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/real_array.rs","byte_start":11147,"byte_end":11188,"line_start":13,"line_end":13,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/real_array.rs","byte_start":11189,"byte_end":11192,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/real_array.rs","byte_start":11193,"byte_end":11200,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ use futures_intrusive::buffer::RealArray;","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/real_array.rs","byte_start":11201,"byte_end":11246,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/ use futures_intrusive::channel::LocalChannel;","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/real_array.rs","byte_start":11247,"byte_end":11296,"line_start":17,"line_end":17,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/real_array.rs","byte_start":11297,"byte_end":11300,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ struct I32x384Array([i32; 384]);","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/real_array.rs","byte_start":11301,"byte_end":11337,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/ unsafe impl RealArray<i32> for I32x384Array {","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/real_array.rs","byte_start":11338,"byte_end":11387,"line_start":20,"line_end":20,"column_start":1,"column_end":50}},{"value":"/     const LEN: usize = 384;","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/real_array.rs","byte_start":11388,"byte_end":11419,"line_start":21,"line_end":21,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/real_array.rs","byte_start":11420,"byte_end":11425,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/real_array.rs","byte_start":11426,"byte_end":11429,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ impl AsMut<[i32]> for I32x384Array {","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/real_array.rs","byte_start":11430,"byte_end":11470,"line_start":24,"line_end":24,"column_start":1,"column_end":41}},{"value":"/     fn as_mut(&mut self) -> &mut [i32] {","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/real_array.rs","byte_start":11471,"byte_end":11515,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"/         &mut self.0","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/real_array.rs","byte_start":11516,"byte_end":11539,"line_start":26,"line_end":26,"column_start":1,"column_end":24}},{"value":"/     }","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/real_array.rs","byte_start":11540,"byte_end":11549,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/real_array.rs","byte_start":11550,"byte_end":11555,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/real_array.rs","byte_start":11556,"byte_end":11559,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ impl AsRef<[i32]> for I32x384Array {","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/real_array.rs","byte_start":11560,"byte_end":11600,"line_start":30,"line_end":30,"column_start":1,"column_end":41}},{"value":"/     fn as_ref(&self) -> &[i32] {","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/real_array.rs","byte_start":11601,"byte_end":11637,"line_start":31,"line_end":31,"column_start":1,"column_end":37}},{"value":"/         &self.0","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/real_array.rs","byte_start":11638,"byte_end":11657,"line_start":32,"line_end":32,"column_start":1,"column_end":20}},{"value":"/     }","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/real_array.rs","byte_start":11658,"byte_end":11667,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/real_array.rs","byte_start":11668,"byte_end":11673,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/real_array.rs","byte_start":11674,"byte_end":11677,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/real_array.rs","byte_start":11678,"byte_end":11693,"line_start":36,"line_end":36,"column_start":1,"column_end":16}},{"value":"/     let channel = LocalChannel::<i32, I32x384Array>::new();","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/real_array.rs","byte_start":11694,"byte_end":11757,"line_start":37,"line_end":37,"column_start":1,"column_end":64}},{"value":"/ }","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/real_array.rs","byte_start":11758,"byte_end":11763,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/real_array.rs","byte_start":11764,"byte_end":11767,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/real_array.rs","byte_start":11768,"byte_end":11775,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":28},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/real_array.rs","byte_start":11850,"byte_end":11853,"line_start":43,"line_end":43,"column_start":11,"column_end":14},"name":"LEN","qualname":"::buffer::real_array::RealArray::LEN","value":"usize","parent":{"krate":0,"index":26},"children":[],"decl_id":null,"docs":" The length of the array\n","sig":null,"attributes":[{"value":"/ The length of the array","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/real_array.rs","byte_start":11812,"byte_end":11839,"line_start":42,"line_end":42,"column_start":5,"column_end":32}}]},{"kind":"Trait","id":{"krate":0,"index":43},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":12518,"byte_end":12525,"line_start":6,"line_end":6,"column_start":11,"column_end":18},"name":"RingBuf","qualname":"::buffer::ring_buffer::RingBuf","value":"RingBuf","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52}],"decl_id":null,"docs":" A Ring Buffer of items\n","sig":null,"attributes":[{"value":"/ A Ring Buffer of items","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":12481,"byte_end":12507,"line_start":5,"line_end":5,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":44},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":12593,"byte_end":12597,"line_start":8,"line_end":8,"column_start":10,"column_end":14},"name":"Item","qualname":"::buffer::ring_buffer::RingBuf::Item","value":"type Item;","parent":{"krate":0,"index":43},"children":[],"decl_id":null,"docs":" The type of stored items inside the Ring Buffer\n","sig":null,"attributes":[{"value":"/ The type of stored items inside the Ring Buffer","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":12532,"byte_end":12583,"line_start":7,"line_end":7,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":12657,"byte_end":12660,"line_start":11,"line_end":11,"column_start":8,"column_end":11},"name":"new","qualname":"::buffer::ring_buffer::RingBuf::new","value":"pub fn new() -> Self","parent":{"krate":0,"index":43},"children":[],"decl_id":null,"docs":" Creates a new instance of the Ring Buffer\n","sig":null,"attributes":[{"value":"/ Creates a new instance of the Ring Buffer","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":12604,"byte_end":12649,"line_start":10,"line_end":10,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":12874,"byte_end":12887,"line_start":15,"line_end":15,"column_start":8,"column_end":21},"name":"with_capacity","qualname":"::buffer::ring_buffer::RingBuf::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":{"krate":0,"index":43},"children":[],"decl_id":null,"docs":" Creates a new instance of the Ring Buffer with the given capacity.\n `RingBuf` implementations are allowed to ignore the `capacity` hint and\n utilize their default capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new instance of the Ring Buffer with the given capacity.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":12676,"byte_end":12746,"line_start":12,"line_end":12,"column_start":5,"column_end":75}},{"value":"/ `RingBuf` implementations are allowed to ignore the `capacity` hint and","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":12751,"byte_end":12826,"line_start":13,"line_end":13,"column_start":5,"column_end":80}},{"value":"/ utilize their default capacity.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":12831,"byte_end":12866,"line_start":14,"line_end":14,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":12952,"byte_end":12960,"line_start":18,"line_end":18,"column_start":8,"column_end":16},"name":"capacity","qualname":"::buffer::ring_buffer::RingBuf::capacity","value":"pub fn capacity(&Self) -> usize","parent":{"krate":0,"index":43},"children":[],"decl_id":null,"docs":" The capacity of the buffer\n","sig":null,"attributes":[{"value":"/ The capacity of the buffer","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":12914,"byte_end":12944,"line_start":17,"line_end":17,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":13034,"byte_end":13037,"line_start":20,"line_end":20,"column_start":8,"column_end":11},"name":"len","qualname":"::buffer::ring_buffer::RingBuf::len","value":"pub fn len(&Self) -> usize","parent":{"krate":0,"index":43},"children":[],"decl_id":null,"docs":" The amount of stored items in the buffer\n","sig":null,"attributes":[{"value":"/ The amount of stored items in the buffer","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":12982,"byte_end":13026,"line_start":19,"line_end":19,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":13123,"byte_end":13131,"line_start":22,"line_end":22,"column_start":8,"column_end":16},"name":"is_empty","qualname":"::buffer::ring_buffer::RingBuf::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":{"krate":0,"index":43},"children":[],"decl_id":null,"docs":" Returns true if no item is stored inside the buffer.\n","sig":null,"attributes":[{"value":"/ Returns true if no item is stored inside the buffer.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":13059,"byte_end":13115,"line_start":21,"line_end":21,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":13278,"byte_end":13286,"line_start":28,"line_end":28,"column_start":8,"column_end":16},"name":"can_push","qualname":"::buffer::ring_buffer::RingBuf::can_push","value":"pub fn can_push(&Self) -> bool","parent":{"krate":0,"index":43},"children":[],"decl_id":null,"docs":" Returns true if there is enough space in the buffer to\n store another item.\n","sig":null,"attributes":[{"value":"/ Returns true if there is enough space in the buffer to","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":13184,"byte_end":13242,"line_start":26,"line_end":26,"column_start":5,"column_end":63}},{"value":"/ store another item.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":13247,"byte_end":13270,"line_start":27,"line_end":27,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":13410,"byte_end":13414,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"push","qualname":"::buffer::ring_buffer::RingBuf::push","value":"pub fn push(&mut Self, Self::Item)","parent":{"krate":0,"index":43},"children":[],"decl_id":null,"docs":" Stores the item at the end of the buffer.\n Panics if there is not enough free space.\n","sig":null,"attributes":[{"value":"/ Stores the item at the end of the buffer.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":13307,"byte_end":13352,"line_start":29,"line_end":29,"column_start":5,"column_end":50}},{"value":"/ Panics if there is not enough free space.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":13357,"byte_end":13402,"line_start":30,"line_end":30,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":13549,"byte_end":13552,"line_start":34,"line_end":34,"column_start":8,"column_end":11},"name":"pop","qualname":"::buffer::ring_buffer::RingBuf::pop","value":"pub fn pop(&mut Self) -> Self::Item","parent":{"krate":0,"index":43},"children":[],"decl_id":null,"docs":" Returns the oldest item inside the buffer.\n Panics if there is no available item.\n","sig":null,"attributes":[{"value":"/ Returns the oldest item inside the buffer.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":13449,"byte_end":13495,"line_start":32,"line_end":32,"column_start":5,"column_end":51}},{"value":"/ Panics if there is no available item.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":13500,"byte_end":13541,"line_start":33,"line_end":33,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":53},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":14061,"byte_end":14069,"line_start":50,"line_end":50,"column_start":12,"column_end":20},"name":"ArrayBuf","qualname":"::buffer::ring_buffer::ArrayBuf","value":"ArrayBuf {  }","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60}],"decl_id":null,"docs":" An array-backed Ring Buffer","sig":null,"attributes":[{"value":"/ An array-backed Ring Buffer","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":13582,"byte_end":13613,"line_start":37,"line_end":37,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":13614,"byte_end":13617,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ `A` is the type of the backing array. The backing array must be a real","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":13618,"byte_end":13692,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"/ array. In order to verify this it must satisfy the [`RealArray`] constraint.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":13693,"byte_end":13773,"line_start":40,"line_end":40,"column_start":1,"column_end":81}},{"value":"/ In order to create a Ring Buffer backed by an array of 5 integer elements,","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":13774,"byte_end":13852,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ the following code can be utilized:","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":13853,"byte_end":13892,"line_start":42,"line_end":42,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":13893,"byte_end":13896,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":13897,"byte_end":13904,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/ use futures_intrusive::buffer::{ArrayBuf, RingBuf};","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":13905,"byte_end":13960,"line_start":45,"line_end":45,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":13961,"byte_end":13964,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ type Buffer5 = ArrayBuf<i32, [i32; 5]>;","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":13965,"byte_end":14008,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/ let buffer = Buffer5::new();","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":14009,"byte_end":14041,"line_start":48,"line_end":48,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":14042,"byte_end":14049,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":89},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":17616,"byte_end":17628,"line_start":181,"line_end":181,"column_start":16,"column_end":28},"name":"FixedHeapBuf","qualname":"::buffer::ring_buffer::if_alloc::FixedHeapBuf","value":"FixedHeapBuf {  }","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":92}],"decl_id":null,"docs":" A Ring Buffer which stores all items on the heap.","sig":null,"attributes":[{"value":"/ A Ring Buffer which stores all items on the heap.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":17388,"byte_end":17441,"line_start":177,"line_end":177,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":17446,"byte_end":17449,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ The `FixedHeapBuf` will allocate its capacity ahead of time. This is good","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":17454,"byte_end":17531,"line_start":179,"line_end":179,"column_start":5,"column_end":82}},{"value":"/ fit when you have a constant latency between two components.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":17536,"byte_end":17600,"line_start":180,"line_end":180,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":106},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":19591,"byte_end":19605,"line_start":252,"line_end":252,"column_start":16,"column_end":30},"name":"GrowingHeapBuf","qualname":"::buffer::ring_buffer::if_alloc::GrowingHeapBuf","value":"GrowingHeapBuf {  }","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109}],"decl_id":null,"docs":" A Ring Buffer which stores all items on the heap but grows dynamically.","sig":null,"attributes":[{"value":"/ A Ring Buffer which stores all items on the heap but grows dynamically.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":19161,"byte_end":19236,"line_start":245,"line_end":245,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":19241,"byte_end":19244,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ A `GrowingHeapBuf` does not allocate the capacity ahead of time, as","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":19249,"byte_end":19320,"line_start":247,"line_end":247,"column_start":5,"column_end":76}},{"value":"/ opposed to the `FixedHeapBuf`. This makes it a good fit when you have","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":19325,"byte_end":19398,"line_start":248,"line_end":248,"column_start":5,"column_end":78}},{"value":"/ unpredictable latency between two components, when you want to","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":19403,"byte_end":19469,"line_start":249,"line_end":249,"column_start":5,"column_end":71}},{"value":"/ amortize your allocation costs or when you are using an external","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":19474,"byte_end":19542,"line_start":250,"line_end":250,"column_start":5,"column_end":73}},{"value":"/ back-pressure mechanism.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":19547,"byte_end":19575,"line_start":251,"line_end":251,"column_start":5,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":234},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"channel","qualname":"::channel","value":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mod.rs","parent":null,"children":[{"krate":0,"index":235},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":248},{"krate":0,"index":251},{"krate":0,"index":254},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":442},{"krate":0,"index":445},{"krate":0,"index":448},{"krate":0,"index":451},{"krate":0,"index":454},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":461},{"krate":0,"index":464},{"krate":0,"index":467},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":630},{"krate":0,"index":633},{"krate":0,"index":636},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":803},{"krate":0,"index":806},{"krate":0,"index":809},{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1058},{"krate":0,"index":1061},{"krate":0,"index":1064},{"krate":0,"index":1067},{"krate":0,"index":1070},{"krate":0,"index":1390},{"krate":0,"index":1391},{"krate":0,"index":1394},{"krate":0,"index":1397},{"krate":0,"index":1400},{"krate":0,"index":1403},{"krate":0,"index":1404},{"krate":0,"index":1407},{"krate":0,"index":1410},{"krate":0,"index":1417}],"decl_id":null,"docs":" Asynchronous channels.","sig":null,"attributes":[{"value":"/ Asynchronous channels.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mod.rs","byte_start":62179,"byte_end":62205,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mod.rs","byte_start":62206,"byte_end":62209,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides various channels that can be used to communicate between","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mod.rs","byte_start":62210,"byte_end":62291,"line_start":3,"line_end":3,"column_start":1,"column_end":82}},{"value":"/ asynchronous tasks.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mod.rs","byte_start":62292,"byte_end":62315,"line_start":4,"line_end":4,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":2555},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/error.rs","byte_start":64334,"byte_end":64350,"line_start":8,"line_end":8,"column_start":12,"column_end":28},"name":"ChannelSendError","qualname":"::channel::error::ChannelSendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" The error which is returned when sending a value into a channel fails.","sig":null,"attributes":[{"value":"/ The error which is returned when sending a value into a channel fails.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/error.rs","byte_start":64019,"byte_end":64093,"line_start":1,"line_end":1,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/error.rs","byte_start":64094,"byte_end":64097,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The `send` operation can only fail if the channel has been closed, which","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/error.rs","byte_start":64098,"byte_end":64174,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/ would prevent the other actors to ever retrieve the value.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/error.rs","byte_start":64175,"byte_end":64237,"line_start":4,"line_end":4,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/error.rs","byte_start":64238,"byte_end":64241,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ The error recovers the value that has been sent.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/error.rs","byte_start":64242,"byte_end":64294,"line_start":6,"line_end":6,"column_start":1,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":2558},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/error.rs","byte_start":64354,"byte_end":64359,"line_start":8,"line_end":8,"column_start":32,"column_end":37},"name":"0","qualname":"::channel::error::ChannelSendError::0","value":"T","parent":{"krate":0,"index":2555},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2569},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/error.rs","byte_start":64599,"byte_end":64604,"line_start":15,"line_end":15,"column_start":5,"column_end":10},"name":"Empty","qualname":"::channel::error::TryReceiveError::Empty","value":"TryReceiveError::Empty","parent":{"krate":0,"index":2568},"children":[],"decl_id":null,"docs":" The channel is empty. No value is available for reception.\n","sig":null,"attributes":[{"value":"/ The channel is empty. No value is available for reception.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/error.rs","byte_start":64532,"byte_end":64594,"line_start":14,"line_end":14,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2571},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/error.rs","byte_start":64692,"byte_end":64698,"line_start":17,"line_end":17,"column_start":5,"column_end":11},"name":"Closed","qualname":"::channel::error::TryReceiveError::Closed","value":"TryReceiveError::Closed","parent":{"krate":0,"index":2568},"children":[],"decl_id":null,"docs":" The channel had been closed and no more value is available for reception.\n","sig":null,"attributes":[{"value":"/ The channel had been closed and no more value is available for reception.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/error.rs","byte_start":64610,"byte_end":64687,"line_start":16,"line_end":16,"column_start":5,"column_end":82}}]},{"kind":"Enum","id":{"krate":0,"index":2568},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/error.rs","byte_start":64510,"byte_end":64525,"line_start":13,"line_end":13,"column_start":10,"column_end":25},"name":"TryReceiveError","qualname":"::channel::error::TryReceiveError","value":"pub enum TryReceiveError { Empty, Closed, }","parent":null,"children":[{"krate":0,"index":2569},{"krate":0,"index":2571}],"decl_id":null,"docs":" The error which is returned when trying to receive from a channel\n without waiting fails.\n","sig":null,"attributes":[{"value":"/ The error which is returned when trying to receive from a channel","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/error.rs","byte_start":64363,"byte_end":64432,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ without waiting fails.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/error.rs","byte_start":64433,"byte_end":64459,"line_start":11,"line_end":11,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/error.rs","byte_start":64795,"byte_end":64803,"line_start":22,"line_end":22,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<TryReceiveError>::is_empty","value":"pub fn is_empty(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the error is the `Empty` variant.\n","sig":null,"attributes":[{"value":"/ Returns whether the error is the `Empty` variant.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/error.rs","byte_start":64730,"byte_end":64783,"line_start":21,"line_end":21,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/error.rs","byte_start":64985,"byte_end":64994,"line_start":30,"line_end":30,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<TryReceiveError>::is_closed","value":"pub fn is_closed(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the error is the `Closed` variant.\n","sig":null,"attributes":[{"value":"/ Returns whether the error is the `Closed` variant.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/error.rs","byte_start":64919,"byte_end":64973,"line_start":29,"line_end":29,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2583},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/error.rs","byte_start":65289,"byte_end":65293,"line_start":43,"line_end":43,"column_start":5,"column_end":9},"name":"Full","qualname":"::channel::error::TrySendError::Full","value":"TrySendError::Full(T)","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":" The channel is full.\n","sig":null,"attributes":[{"value":"/ The channel is full.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/error.rs","byte_start":65260,"byte_end":65284,"line_start":42,"line_end":42,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2586},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/error.rs","byte_start":65334,"byte_end":65340,"line_start":45,"line_end":45,"column_start":5,"column_end":11},"name":"Closed","qualname":"::channel::error::TrySendError::Closed","value":"TrySendError::Closed(T)","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":" The channel was closed.\n","sig":null,"attributes":[{"value":"/ The channel was closed.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/error.rs","byte_start":65302,"byte_end":65329,"line_start":44,"line_end":44,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":2581},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/error.rs","byte_start":65238,"byte_end":65250,"line_start":41,"line_end":41,"column_start":10,"column_end":22},"name":"TrySendError","qualname":"::channel::error::TrySendError","value":"pub enum TrySendError<T> { Full(T), Closed(T), }","parent":null,"children":[{"krate":0,"index":2583},{"krate":0,"index":2586}],"decl_id":null,"docs":" The error which is returned when trying to send on a channel\n without waiting fails.\n","sig":null,"attributes":[{"value":"/ The error which is returned when trying to send on a channel","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/error.rs","byte_start":65109,"byte_end":65173,"line_start":38,"line_end":38,"column_start":1,"column_end":65}},{"value":"/ without waiting fails.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/error.rs","byte_start":65174,"byte_end":65200,"line_start":39,"line_end":39,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/error.rs","byte_start":65434,"byte_end":65444,"line_start":50,"line_end":50,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TrySendError<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Converts the error into its inner value.\n","sig":null,"attributes":[{"value":"/ Converts the error into its inner value.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/error.rs","byte_start":65378,"byte_end":65422,"line_start":49,"line_end":49,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/error.rs","byte_start":65652,"byte_end":65659,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"is_full","qualname":"<TrySendError<T>>::is_full","value":"pub fn is_full(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the error is the `WouldBlock` variant.\n","sig":null,"attributes":[{"value":"/ Returns whether the error is the `WouldBlock` variant.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/error.rs","byte_start":65582,"byte_end":65640,"line_start":57,"line_end":57,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/error.rs","byte_start":65844,"byte_end":65853,"line_start":66,"line_end":66,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<TrySendError<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the error is the `Closed` variant.\n","sig":null,"attributes":[{"value":"/ Returns whether the error is the `Closed` variant.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/error.rs","byte_start":65778,"byte_end":65832,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2599},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":66442,"byte_end":66453,"line_start":13,"line_end":13,"column_start":5,"column_end":16},"name":"NewlyClosed","qualname":"::channel::channel_future::CloseStatus::NewlyClosed","value":"CloseStatus::NewlyClosed","parent":{"krate":0,"index":2598},"children":[],"decl_id":null,"docs":" The channel has just been closed by the operation.\n","sig":null,"attributes":[{"value":"/ The channel has just been closed by the operation.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":66383,"byte_end":66437,"line_start":12,"line_end":12,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2601},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":66523,"byte_end":66536,"line_start":16,"line_end":16,"column_start":5,"column_end":18},"name":"AlreadyClosed","qualname":"::channel::channel_future::CloseStatus::AlreadyClosed","value":"CloseStatus::AlreadyClosed","parent":{"krate":0,"index":2598},"children":[],"decl_id":null,"docs":" The channel was already closed prior to the operation.\n","sig":null,"attributes":[{"value":"/ The channel was already closed prior to the operation.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":66460,"byte_end":66518,"line_start":15,"line_end":15,"column_start":5,"column_end":63}}]},{"kind":"Enum","id":{"krate":0,"index":2598},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":66365,"byte_end":66376,"line_start":11,"line_end":11,"column_start":10,"column_end":21},"name":"CloseStatus","qualname":"::channel::channel_future::CloseStatus","value":"pub enum CloseStatus { NewlyClosed, AlreadyClosed, }","parent":null,"children":[{"krate":0,"index":2599},{"krate":0,"index":2601}],"decl_id":null,"docs":" Conveys additional information regarding the status of a channel\n following a `close` operation.\n","sig":null,"attributes":[{"value":"/ Conveys additional information regarding the status of a channel","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":66201,"byte_end":66269,"line_start":8,"line_end":8,"column_start":1,"column_end":69}},{"value":"/ following a `close` operation.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":66270,"byte_end":66304,"line_start":9,"line_end":9,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":66635,"byte_end":66650,"line_start":21,"line_end":21,"column_start":12,"column_end":27},"name":"is_newly_closed","qualname":"<CloseStatus>::is_newly_closed","value":"pub fn is_newly_closed(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the value is the `NewlyClosed` variant.\n","sig":null,"attributes":[{"value":"/ Returns whether the value is the `NewlyClosed` variant.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":66564,"byte_end":66623,"line_start":20,"line_end":20,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":66845,"byte_end":66862,"line_start":29,"line_end":29,"column_start":12,"column_end":29},"name":"is_already_closed","qualname":"<CloseStatus>::is_already_closed","value":"pub fn is_already_closed(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the value is the `AlreadyClosed` variant.\n","sig":null,"attributes":[{"value":"/ Returns whether the value is the `AlreadyClosed` variant.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":66772,"byte_end":66833,"line_start":28,"line_end":28,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":308},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":70427,"byte_end":70447,"line_start":150,"line_end":150,"column_start":12,"column_end":32},"name":"ChannelReceiveFuture","qualname":"::channel::channel_future::ChannelReceiveFuture","value":"ChannelReceiveFuture {  }","parent":null,"children":[{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314}],"decl_id":null,"docs":" A Future that is returned by the `receive` function on a channel.\n The future gets resolved with `Some(value)` when a value could be\n received from the channel.\n If the channels gets closed and no items are still enqueued inside the\n channel, the future will resolve to `None`.\n","sig":null,"attributes":[{"value":"/ A Future that is returned by the `receive` function on a channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":70073,"byte_end":70142,"line_start":144,"line_end":144,"column_start":1,"column_end":70}},{"value":"/ The future gets resolved with `Some(value)` when a value could be","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":70143,"byte_end":70212,"line_start":145,"line_end":145,"column_start":1,"column_end":70}},{"value":"/ received from the channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":70213,"byte_end":70243,"line_start":146,"line_end":146,"column_start":1,"column_end":31}},{"value":"/ If the channels gets closed and no items are still enqueued inside the","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":70244,"byte_end":70318,"line_start":147,"line_end":147,"column_start":1,"column_end":75}},{"value":"/ channel, the future will resolve to `None`.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":70319,"byte_end":70366,"line_start":148,"line_end":148,"column_start":1,"column_end":48}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":70367,"byte_end":70415,"line_start":149,"line_end":149,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":340},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":73343,"byte_end":73360,"line_start":227,"line_end":227,"column_start":12,"column_end":29},"name":"ChannelSendFuture","qualname":"::channel::channel_future::ChannelSendFuture","value":"ChannelSendFuture {  }","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346}],"decl_id":null,"docs":" A Future that is returned by the `send` function on a channel.\n The future gets resolved with `None` when a value could be\n written to the channel.\n If the channel gets closed the send operation will fail, and the\n Future will resolve to `ChannelSendError(T)` and return the item to send.\n","sig":null,"attributes":[{"value":"/ A Future that is returned by the `send` function on a channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":72978,"byte_end":73044,"line_start":221,"line_end":221,"column_start":1,"column_end":67}},{"value":"/ The future gets resolved with `None` when a value could be","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":73045,"byte_end":73107,"line_start":222,"line_end":222,"column_start":1,"column_end":63}},{"value":"/ written to the channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":73108,"byte_end":73135,"line_start":223,"line_end":223,"column_start":1,"column_end":28}},{"value":"/ If the channel gets closed the send operation will fail, and the","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":73136,"byte_end":73204,"line_start":224,"line_end":224,"column_start":1,"column_end":69}},{"value":"/ Future will resolve to `ChannelSendError(T)` and return the item to send.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":73205,"byte_end":73282,"line_start":225,"line_end":225,"column_start":1,"column_end":78}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":73283,"byte_end":73331,"line_start":226,"line_end":226,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":74313,"byte_end":74319,"line_start":254,"line_end":254,"column_start":12,"column_end":18},"name":"cancel","qualname":"<ChannelSendFuture>::cancel","value":"pub fn cancel(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Tries to cancel the ongoing send operation\n","sig":null,"attributes":[{"value":"/ Tries to cancel the ongoing send operation","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":74255,"byte_end":74301,"line_start":253,"line_end":253,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":381},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":77233,"byte_end":77253,"line_start":336,"line_end":336,"column_start":20,"column_end":40},"name":"ChannelReceiveFuture","qualname":"::channel::channel_future::if_alloc::shared::ChannelReceiveFuture","value":"ChannelReceiveFuture {  }","parent":null,"children":[{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386}],"decl_id":null,"docs":" A Future that is returned by the `receive` function on a channel.\n The future gets resolved with `Some(value)` when a value could be\n received from the channel.\n If the channels gets closed and no items are still enqueued inside the\n channel, the future will resolve to `None`.\n","sig":null,"attributes":[{"value":"/ A Future that is returned by the `receive` function on a channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":76831,"byte_end":76900,"line_start":330,"line_end":330,"column_start":9,"column_end":78}},{"value":"/ The future gets resolved with `Some(value)` when a value could be","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":76909,"byte_end":76978,"line_start":331,"line_end":331,"column_start":9,"column_end":78}},{"value":"/ received from the channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":76987,"byte_end":77017,"line_start":332,"line_end":332,"column_start":9,"column_end":39}},{"value":"/ If the channels gets closed and no items are still enqueued inside the","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":77026,"byte_end":77100,"line_start":333,"line_end":333,"column_start":9,"column_end":83}},{"value":"/ channel, the future will resolve to `None`.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":77109,"byte_end":77156,"line_start":334,"line_end":334,"column_start":9,"column_end":56}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":77165,"byte_end":77213,"line_start":335,"line_end":335,"column_start":9,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":407},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":80817,"byte_end":80834,"line_start":420,"line_end":420,"column_start":20,"column_end":37},"name":"ChannelSendFuture","qualname":"::channel::channel_future::if_alloc::shared::ChannelSendFuture","value":"ChannelSendFuture {  }","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412}],"decl_id":null,"docs":" A Future that is returned by the `send` function on a channel.\n The future gets resolved with `None` when a value could be\n written to the channel.\n If the channel gets closed the send operation will fail, and the\n Future will resolve to `ChannelSendError(T)` and return the item\n to send.\n","sig":null,"attributes":[{"value":"/ A Future that is returned by the `send` function on a channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":80392,"byte_end":80458,"line_start":413,"line_end":413,"column_start":9,"column_end":75}},{"value":"/ The future gets resolved with `None` when a value could be","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":80467,"byte_end":80529,"line_start":414,"line_end":414,"column_start":9,"column_end":71}},{"value":"/ written to the channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":80538,"byte_end":80565,"line_start":415,"line_end":415,"column_start":9,"column_end":36}},{"value":"/ If the channel gets closed the send operation will fail, and the","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":80574,"byte_end":80642,"line_start":416,"line_end":416,"column_start":9,"column_end":77}},{"value":"/ Future will resolve to `ChannelSendError(T)` and return the item","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":80651,"byte_end":80719,"line_start":417,"line_end":417,"column_start":9,"column_end":77}},{"value":"/ to send.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":80728,"byte_end":80740,"line_start":418,"line_end":418,"column_start":9,"column_end":21}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":80749,"byte_end":80797,"line_start":419,"line_end":419,"column_start":9,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":81391,"byte_end":81397,"line_start":432,"line_end":432,"column_start":20,"column_end":26},"name":"cancel","qualname":"<ChannelSendFuture<MutexType, T>>::cancel","value":"pub fn cancel(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Tries to cancel the ongoing send operation\n","sig":null,"attributes":[{"value":"/ Tries to cancel the ongoing send operation","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":81325,"byte_end":81371,"line_start":431,"line_end":431,"column_start":13,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":532},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":90562,"byte_end":90583,"line_start":148,"line_end":148,"column_start":12,"column_end":33},"name":"GenericOneshotChannel","qualname":"::channel::oneshot::GenericOneshotChannel","value":"GenericOneshotChannel {  }","parent":null,"children":[{"krate":0,"index":535}],"decl_id":null,"docs":" A channel which can be used to exchange a single value between two\n concurrent tasks.","sig":null,"attributes":[{"value":"/ A channel which can be used to exchange a single value between two","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":90108,"byte_end":90178,"line_start":139,"line_end":139,"column_start":1,"column_end":71}},{"value":"/ concurrent tasks.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":90179,"byte_end":90200,"line_start":140,"line_end":140,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":90201,"byte_end":90204,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ Tasks can wait for the value to get delivered via `receive`.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":90205,"byte_end":90269,"line_start":142,"line_end":142,"column_start":1,"column_end":65}},{"value":"/ The returned Future will get fulfilled when a value is sent into the channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":90270,"byte_end":90351,"line_start":143,"line_end":143,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":90352,"byte_end":90355,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ The value can only be extracted by a single receiving task. Once the value","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":90356,"byte_end":90434,"line_start":145,"line_end":145,"column_start":1,"column_end":79}},{"value":"/ has been retrieved from the Channel, the Channel is closed and subsequent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":90435,"byte_end":90512,"line_start":146,"line_end":146,"column_start":1,"column_end":78}},{"value":"/ receive calls will return `None`.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":90513,"byte_end":90550,"line_start":147,"line_end":147,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":91422,"byte_end":91425,"line_start":174,"line_end":174,"column_start":12,"column_end":15},"name":"new","qualname":"<GenericOneshotChannel<MutexType, T>>::new","value":"pub fn new() -> GenericOneshotChannel<MutexType, T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new OneshotChannel in the given state\n","sig":null,"attributes":[{"value":"/ Creates a new OneshotChannel in the given state","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":91359,"byte_end":91410,"line_start":173,"line_end":173,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":91879,"byte_end":91883,"line_start":186,"line_end":186,"column_start":12,"column_end":16},"name":"send","qualname":"<GenericOneshotChannel<MutexType, T>>::send","value":"pub fn send(&Self, T) -> Result<(), ChannelSendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Writes a single value to the channel.","sig":null,"attributes":[{"value":"/ Writes a single value to the channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":91574,"byte_end":91615,"line_start":180,"line_end":180,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":91620,"byte_end":91623,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ This will notify waiters about the availability of the value.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":91628,"byte_end":91693,"line_start":182,"line_end":182,"column_start":5,"column_end":70}},{"value":"/ If a value had been written to the channel before, or if the","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":91698,"byte_end":91762,"line_start":183,"line_end":183,"column_start":5,"column_end":69}},{"value":"/ channel is closed, the new value will be rejected and","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":91767,"byte_end":91824,"line_start":184,"line_end":184,"column_start":5,"column_end":62}},{"value":"/ returned inside the error variant.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":91829,"byte_end":91867,"line_start":185,"line_end":185,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":92232,"byte_end":92237,"line_start":196,"line_end":196,"column_start":12,"column_end":17},"name":"close","qualname":"<GenericOneshotChannel<MutexType, T>>::close","value":"pub fn close(&Self) -> CloseStatus","parent":null,"children":[],"decl_id":null,"docs":" Closes the channel.","sig":null,"attributes":[{"value":"/ Closes the channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":91987,"byte_end":92010,"line_start":190,"line_end":190,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":92015,"byte_end":92018,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ This will notify waiters about closure, by fulfilling pending `Future`s","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":92023,"byte_end":92098,"line_start":192,"line_end":192,"column_start":5,"column_end":80}},{"value":"/ with `None`.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":92103,"byte_end":92119,"line_start":193,"line_end":193,"column_start":5,"column_end":21}},{"value":"/ `send(value)` attempts which follow this call will fail with a","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":92124,"byte_end":92190,"line_start":194,"line_end":194,"column_start":5,"column_end":71}},{"value":"/ [`ChannelSendError`].","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":92195,"byte_end":92220,"line_start":195,"line_end":195,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":92432,"byte_end":92439,"line_start":202,"line_end":202,"column_start":12,"column_end":19},"name":"receive","qualname":"<GenericOneshotChannel<MutexType, T>>::receive","value":"pub fn receive(&Self) -> ChannelReceiveFuture<, MutexType, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that gets fulfilled when a value is written to the channel\n or the channel is closed.\n","sig":null,"attributes":[{"value":"/ Returns a future that gets fulfilled when a value is written to the channel","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":92307,"byte_end":92386,"line_start":200,"line_end":200,"column_start":5,"column_end":84}},{"value":"/ or the channel is closed.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":92391,"byte_end":92420,"line_start":201,"line_end":201,"column_start":5,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":558},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":93276,"byte_end":93295,"line_start":233,"line_end":233,"column_start":10,"column_end":29},"name":"LocalOneshotChannel","qualname":"::channel::oneshot::LocalOneshotChannel","value":"GenericOneshotChannel<NoopLock, T>","parent":null,"children":[],"decl_id":null,"docs":" A [`GenericOneshotChannel`] which is not thread-safe.\n","sig":null,"attributes":[{"value":"/ A [`GenericOneshotChannel`] which is not thread-safe.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":93209,"byte_end":93266,"line_start":232,"line_end":232,"column_start":1,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":562},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":93549,"byte_end":93563,"line_start":241,"line_end":241,"column_start":14,"column_end":28},"name":"OneshotChannel","qualname":"::channel::oneshot::if_std::OneshotChannel","value":"GenericOneshotChannel<parking_lot::RawMutex, T>","parent":null,"children":[],"decl_id":null,"docs":" A [`GenericOneshotChannel`] implementation backed by [`parking_lot`].\n","sig":null,"attributes":[{"value":"/ A [`GenericOneshotChannel`] implementation backed by [`parking_lot`].","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":93462,"byte_end":93535,"line_start":240,"line_end":240,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":581},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":95081,"byte_end":95101,"line_start":291,"line_end":291,"column_start":20,"column_end":40},"name":"GenericOneshotSender","qualname":"::channel::oneshot::if_alloc::shared::GenericOneshotSender","value":"GenericOneshotSender {  }","parent":null,"children":[{"krate":0,"index":584}],"decl_id":null,"docs":" The sending side of a channel which can be used to exchange values\n between concurrent tasks.","sig":null,"attributes":[{"value":"/ The sending side of a channel which can be used to exchange values","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":94877,"byte_end":94947,"line_start":287,"line_end":287,"column_start":9,"column_end":79}},{"value":"/ between concurrent tasks.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":94956,"byte_end":94985,"line_start":288,"line_end":288,"column_start":9,"column_end":38}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":94994,"byte_end":94997,"line_start":289,"line_end":289,"column_start":9,"column_end":12}},{"value":"/ Values can be sent into the channel through `send`.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":95006,"byte_end":95061,"line_start":290,"line_end":290,"column_start":9,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":585},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":95647,"byte_end":95669,"line_start":306,"line_end":306,"column_start":20,"column_end":42},"name":"GenericOneshotReceiver","qualname":"::channel::oneshot::if_alloc::shared::GenericOneshotReceiver","value":"GenericOneshotReceiver {  }","parent":null,"children":[{"krate":0,"index":588}],"decl_id":null,"docs":" The receiving side of a channel which can be used to exchange values\n between concurrent tasks.","sig":null,"attributes":[{"value":"/ The receiving side of a channel which can be used to exchange values","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":95332,"byte_end":95404,"line_start":301,"line_end":301,"column_start":9,"column_end":81}},{"value":"/ between concurrent tasks.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":95413,"byte_end":95442,"line_start":302,"line_end":302,"column_start":9,"column_end":38}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":95451,"byte_end":95454,"line_start":303,"line_end":303,"column_start":9,"column_end":12}},{"value":"/ Tasks can receive values from the channel through the `receive` method.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":95463,"byte_end":95538,"line_start":304,"line_end":304,"column_start":9,"column_end":84}},{"value":"/ The returned Future will get resolved when a value is sent into the channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":95547,"byte_end":95627,"line_start":305,"line_end":305,"column_start":9,"column_end":89}}]},{"kind":"Function","id":{"krate":0,"index":605},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":97641,"byte_end":97664,"line_start":363,"line_end":363,"column_start":16,"column_end":39},"name":"generic_oneshot_channel","qualname":"::channel::oneshot::if_alloc::shared::generic_oneshot_channel","value":"pub fn generic_oneshot_channel<MutexType, T>()\n-> (GenericOneshotSender<MutexType, T>, GenericOneshotReceiver<MutexType, T>)\nwhere MutexType: RawMutex, T: Send","parent":null,"children":[],"decl_id":null,"docs":" Creates a new oneshot channel which can be used to exchange values\n of type `T` between concurrent tasks.\n The ends of the Channel are represented through\n the returned Sender and Receiver.","sig":null,"attributes":[{"value":"/ Creates a new oneshot channel which can be used to exchange values","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":97274,"byte_end":97344,"line_start":356,"line_end":356,"column_start":9,"column_end":79}},{"value":"/ of type `T` between concurrent tasks.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":97353,"byte_end":97394,"line_start":357,"line_end":357,"column_start":9,"column_end":50}},{"value":"/ The ends of the Channel are represented through","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":97403,"byte_end":97454,"line_start":358,"line_end":358,"column_start":9,"column_end":60}},{"value":"/ the returned Sender and Receiver.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":97463,"byte_end":97500,"line_start":359,"line_end":359,"column_start":9,"column_end":46}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":97509,"byte_end":97512,"line_start":360,"line_end":360,"column_start":9,"column_end":12}},{"value":"/ As soon es either the senders or receivers is closed, the channel","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":97521,"byte_end":97590,"line_start":361,"line_end":361,"column_start":9,"column_end":78}},{"value":"/ itself will be closed.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":97599,"byte_end":97625,"line_start":362,"line_end":362,"column_start":9,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":98748,"byte_end":98752,"line_start":394,"line_end":394,"column_start":20,"column_end":24},"name":"send","qualname":"<GenericOneshotSender<MutexType, T>>::send","value":"pub fn send(&Self, T) -> Result<(), ChannelSendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Writes a single value to the channel.","sig":null,"attributes":[{"value":"/ Writes a single value to the channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":98395,"byte_end":98436,"line_start":388,"line_end":388,"column_start":13,"column_end":54}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":98449,"byte_end":98452,"line_start":389,"line_end":389,"column_start":13,"column_end":16}},{"value":"/ This will notify waiters about the availability of the value.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":98465,"byte_end":98530,"line_start":390,"line_end":390,"column_start":13,"column_end":78}},{"value":"/ If a value had been written to the channel before, or if the","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":98543,"byte_end":98607,"line_start":391,"line_end":391,"column_start":13,"column_end":77}},{"value":"/ channel is closed, the new value will be rejected and","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":98620,"byte_end":98677,"line_start":392,"line_end":392,"column_start":13,"column_end":70}},{"value":"/ returned inside the error variant.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":98690,"byte_end":98728,"line_start":393,"line_end":393,"column_start":13,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":99202,"byte_end":99209,"line_start":405,"line_end":405,"column_start":20,"column_end":27},"name":"receive","qualname":"<GenericOneshotReceiver<MutexType, T>>::receive","value":"pub fn receive(&Self) -> ChannelReceiveFuture<MutexType, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that gets fulfilled when a value is written to the channel.\n If the channels gets closed, the future will resolve to `None`.\n","sig":null,"attributes":[{"value":"/ Returns a future that gets fulfilled when a value is written to the channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":99022,"byte_end":99102,"line_start":403,"line_end":403,"column_start":13,"column_end":93}},{"value":"/ If the channels gets closed, the future will resolve to `None`.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":99115,"byte_end":99182,"line_start":404,"line_end":404,"column_start":13,"column_end":80}}]},{"kind":"Type","id":{"krate":0,"index":618},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":99760,"byte_end":99773,"line_start":420,"line_end":420,"column_start":22,"column_end":35},"name":"OneshotSender","qualname":"::channel::oneshot::if_alloc::shared::if_std::OneshotSender","value":"GenericOneshotSender<parking_lot::RawMutex, T>","parent":null,"children":[],"decl_id":null,"docs":" A [`GenericOneshotSender`] implementation backed by [`parking_lot`].\n","sig":null,"attributes":[{"value":"/ A [`GenericOneshotSender`] implementation backed by [`parking_lot`].","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":99666,"byte_end":99738,"line_start":419,"line_end":419,"column_start":13,"column_end":85}}]},{"kind":"Type","id":{"krate":0,"index":620},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":99951,"byte_end":99966,"line_start":423,"line_end":423,"column_start":22,"column_end":37},"name":"OneshotReceiver","qualname":"::channel::oneshot::if_alloc::shared::if_std::OneshotReceiver","value":"GenericOneshotReceiver<parking_lot::RawMutex, T>","parent":null,"children":[],"decl_id":null,"docs":" A [`GenericOneshotReceiver`] implementation backed by [`parking_lot`].\n","sig":null,"attributes":[{"value":"/ A [`GenericOneshotReceiver`] implementation backed by [`parking_lot`].","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":99855,"byte_end":99929,"line_start":422,"line_end":422,"column_start":13,"column_end":87}}]},{"kind":"Function","id":{"krate":0,"index":622},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":100478,"byte_end":100493,"line_start":436,"line_end":436,"column_start":20,"column_end":35},"name":"oneshot_channel","qualname":"::channel::oneshot::if_alloc::shared::if_std::oneshot_channel","value":"pub fn oneshot_channel<T>() -> (OneshotSender<T>, OneshotReceiver<T>) where\nT: Send","parent":null,"children":[],"decl_id":null,"docs":" Creates a new oneshot channel.","sig":null,"attributes":[{"value":"/ Creates a new oneshot channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":100051,"byte_end":100085,"line_start":426,"line_end":426,"column_start":13,"column_end":47}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":100098,"byte_end":100101,"line_start":427,"line_end":427,"column_start":13,"column_end":16}},{"value":"/ Refer to [`generic_oneshot_channel`] for details.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":100114,"byte_end":100167,"line_start":428,"line_end":428,"column_start":13,"column_end":66}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":100180,"byte_end":100183,"line_start":429,"line_end":429,"column_start":13,"column_end":16}},{"value":"/ Example for creating a channel to transmit an integer value:","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":100196,"byte_end":100260,"line_start":430,"line_end":430,"column_start":13,"column_end":77}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":100273,"byte_end":100276,"line_start":431,"line_end":431,"column_start":13,"column_end":16}},{"value":"/ ```","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":100289,"byte_end":100296,"line_start":432,"line_end":432,"column_start":13,"column_end":20}},{"value":"/ # use futures_intrusive::channel::shared::oneshot_channel;","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":100309,"byte_end":100371,"line_start":433,"line_end":433,"column_start":13,"column_end":75}},{"value":"/ let (sender, receiver) = oneshot_channel::<i32>();","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":100384,"byte_end":100438,"line_start":434,"line_end":434,"column_start":13,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":100451,"byte_end":100458,"line_start":435,"line_end":435,"column_start":13,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":701},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":106582,"byte_end":106612,"line_start":152,"line_end":152,"column_start":12,"column_end":42},"name":"GenericOneshotBroadcastChannel","qualname":"::channel::oneshot_broadcast::GenericOneshotBroadcastChannel","value":"GenericOneshotBroadcastChannel {  }","parent":null,"children":[{"krate":0,"index":704}],"decl_id":null,"docs":" A channel which can be used to exchange a single value between two or more\n concurrent tasks.","sig":null,"attributes":[{"value":"/ A channel which can be used to exchange a single value between two or more","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":106180,"byte_end":106258,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"/ concurrent tasks.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":106259,"byte_end":106280,"line_start":145,"line_end":145,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":106281,"byte_end":106284,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ The value which gets sent will get stored inside the Channel, and can be","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":106285,"byte_end":106361,"line_start":147,"line_end":147,"column_start":1,"column_end":77}},{"value":"/ retrieved by an arbitrary number of tasks afterwards.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":106362,"byte_end":106419,"line_start":148,"line_end":148,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":106420,"byte_end":106423,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ Tasks can wait for the value to get delivered via `receive`.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":106424,"byte_end":106488,"line_start":150,"line_end":150,"column_start":1,"column_end":65}},{"value":"/ The returned Future will get fulfilled when a value is sent into the channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":106489,"byte_end":106570,"line_start":151,"line_end":151,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":107525,"byte_end":107528,"line_start":181,"line_end":181,"column_start":12,"column_end":15},"name":"new","qualname":"<GenericOneshotBroadcastChannel<MutexType, T>>::new","value":"pub fn new() -> GenericOneshotBroadcastChannel<MutexType, T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new OneshotBroadcastChannel in the given state\n","sig":null,"attributes":[{"value":"/ Creates a new OneshotBroadcastChannel in the given state","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":107453,"byte_end":107513,"line_start":180,"line_end":180,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":108000,"byte_end":108004,"line_start":193,"line_end":193,"column_start":12,"column_end":16},"name":"send","qualname":"<GenericOneshotBroadcastChannel<MutexType, T>>::send","value":"pub fn send(&Self, T) -> Result<(), ChannelSendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Writes a single value to the channel.","sig":null,"attributes":[{"value":"/ Writes a single value to the channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":107695,"byte_end":107736,"line_start":187,"line_end":187,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":107741,"byte_end":107744,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ This will notify waiters about the availability of the value.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":107749,"byte_end":107814,"line_start":189,"line_end":189,"column_start":5,"column_end":70}},{"value":"/ If a value had been written to the channel before, or if the","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":107819,"byte_end":107883,"line_start":190,"line_end":190,"column_start":5,"column_end":69}},{"value":"/ channel is closed, the new value will be rejected and","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":107888,"byte_end":107945,"line_start":191,"line_end":191,"column_start":5,"column_end":62}},{"value":"/ returned inside the error variant.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":107950,"byte_end":107988,"line_start":192,"line_end":192,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":108353,"byte_end":108358,"line_start":203,"line_end":203,"column_start":12,"column_end":17},"name":"close","qualname":"<GenericOneshotBroadcastChannel<MutexType, T>>::close","value":"pub fn close(&Self) -> CloseStatus","parent":null,"children":[],"decl_id":null,"docs":" Closes the channel.","sig":null,"attributes":[{"value":"/ Closes the channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":108108,"byte_end":108131,"line_start":197,"line_end":197,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":108136,"byte_end":108139,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ This will notify waiters about closure, by fulfilling pending `Future`s","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":108144,"byte_end":108219,"line_start":199,"line_end":199,"column_start":5,"column_end":80}},{"value":"/ with `None`.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":108224,"byte_end":108240,"line_start":200,"line_end":200,"column_start":5,"column_end":21}},{"value":"/ `send(value)` attempts which follow this call will fail with a","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":108245,"byte_end":108311,"line_start":201,"line_end":201,"column_start":5,"column_end":71}},{"value":"/ [`ChannelSendError`].","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":108316,"byte_end":108341,"line_start":202,"line_end":202,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":108553,"byte_end":108560,"line_start":209,"line_end":209,"column_start":12,"column_end":19},"name":"receive","qualname":"<GenericOneshotBroadcastChannel<MutexType, T>>::receive","value":"pub fn receive(&Self) -> ChannelReceiveFuture<, MutexType, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that gets fulfilled when a value is written to the channel\n or the channel is closed.\n","sig":null,"attributes":[{"value":"/ Returns a future that gets fulfilled when a value is written to the channel","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":108428,"byte_end":108507,"line_start":207,"line_end":207,"column_start":5,"column_end":84}},{"value":"/ or the channel is closed.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":108512,"byte_end":108541,"line_start":208,"line_end":208,"column_start":5,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":727},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":109435,"byte_end":109463,"line_start":242,"line_end":242,"column_start":10,"column_end":38},"name":"LocalOneshotBroadcastChannel","qualname":"::channel::oneshot_broadcast::LocalOneshotBroadcastChannel","value":"GenericOneshotBroadcastChannel<NoopLock, T>","parent":null,"children":[],"decl_id":null,"docs":" A [`GenericOneshotBroadcastChannel`] which is not thread-safe.\n","sig":null,"attributes":[{"value":"/ A [`GenericOneshotBroadcastChannel`] which is not thread-safe.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":109359,"byte_end":109425,"line_start":241,"line_end":241,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":731},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":109740,"byte_end":109763,"line_start":252,"line_end":252,"column_start":14,"column_end":37},"name":"OneshotBroadcastChannel","qualname":"::channel::oneshot_broadcast::if_std::OneshotBroadcastChannel","value":"GenericOneshotBroadcastChannel<parking_lot::RawMutex, T>","parent":null,"children":[],"decl_id":null,"docs":" A [`GenericOneshotBroadcastChannel`] implementation backed by [`parking_lot`].\n","sig":null,"attributes":[{"value":"/ A [`GenericOneshotBroadcastChannel`] implementation backed by [`parking_lot`].","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":109644,"byte_end":109726,"line_start":251,"line_end":251,"column_start":5,"column_end":87}}]},{"kind":"Struct","id":{"krate":0,"index":750},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":111321,"byte_end":111350,"line_start":303,"line_end":303,"column_start":20,"column_end":49},"name":"GenericOneshotBroadcastSender","qualname":"::channel::oneshot_broadcast::if_alloc::shared::GenericOneshotBroadcastSender","value":"GenericOneshotBroadcastSender {  }","parent":null,"children":[{"krate":0,"index":753}],"decl_id":null,"docs":" The sending side of a channel which can be used to exchange values\n between concurrent tasks.","sig":null,"attributes":[{"value":"/ The sending side of a channel which can be used to exchange values","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":111117,"byte_end":111187,"line_start":299,"line_end":299,"column_start":9,"column_end":79}},{"value":"/ between concurrent tasks.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":111196,"byte_end":111225,"line_start":300,"line_end":300,"column_start":9,"column_end":38}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":111234,"byte_end":111237,"line_start":301,"line_end":301,"column_start":9,"column_end":12}},{"value":"/ Values can be sent into the channel through `send`.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":111246,"byte_end":111301,"line_start":302,"line_end":302,"column_start":9,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":754},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":111904,"byte_end":111935,"line_start":318,"line_end":318,"column_start":20,"column_end":51},"name":"GenericOneshotBroadcastReceiver","qualname":"::channel::oneshot_broadcast::if_alloc::shared::GenericOneshotBroadcastReceiver","value":"GenericOneshotBroadcastReceiver {  }","parent":null,"children":[{"krate":0,"index":757}],"decl_id":null,"docs":" The receiving side of a channel which can be used to exchange values\n between concurrent tasks.","sig":null,"attributes":[{"value":"/ The receiving side of a channel which can be used to exchange values","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":111589,"byte_end":111661,"line_start":313,"line_end":313,"column_start":9,"column_end":81}},{"value":"/ between concurrent tasks.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":111670,"byte_end":111699,"line_start":314,"line_end":314,"column_start":9,"column_end":38}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":111708,"byte_end":111711,"line_start":315,"line_end":315,"column_start":9,"column_end":12}},{"value":"/ Tasks can receive values from the channel through the `receive` method.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":111720,"byte_end":111795,"line_start":316,"line_end":316,"column_start":9,"column_end":84}},{"value":"/ The returned Future will get resolved when a value is sent into the channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":111804,"byte_end":111884,"line_start":317,"line_end":317,"column_start":9,"column_end":89}}]},{"kind":"Function","id":{"krate":0,"index":778},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":114744,"byte_end":114777,"line_start":397,"line_end":397,"column_start":16,"column_end":49},"name":"generic_oneshot_broadcast_channel","qualname":"::channel::oneshot_broadcast::if_alloc::shared::generic_oneshot_broadcast_channel","value":"pub fn generic_oneshot_broadcast_channel<MutexType, T>()\n->\n    (GenericOneshotBroadcastSender<MutexType, T>,\n     GenericOneshotBroadcastReceiver<MutexType, T>) where MutexType: RawMutex,\nT: Send + Clone","parent":null,"children":[],"decl_id":null,"docs":" Creates a new oneshot broadcast channel which can be used to exchange values\n of type `T` between concurrent tasks.\n The ends of the Channel are represented through\n the returned `Sender` and `Receiver`. The `Receiver` can be cloned.","sig":null,"attributes":[{"value":"/ Creates a new oneshot broadcast channel which can be used to exchange values","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":114329,"byte_end":114409,"line_start":390,"line_end":390,"column_start":9,"column_end":89}},{"value":"/ of type `T` between concurrent tasks.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":114418,"byte_end":114459,"line_start":391,"line_end":391,"column_start":9,"column_end":50}},{"value":"/ The ends of the Channel are represented through","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":114468,"byte_end":114519,"line_start":392,"line_end":392,"column_start":9,"column_end":60}},{"value":"/ the returned `Sender` and `Receiver`. The `Receiver` can be cloned.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":114528,"byte_end":114599,"line_start":393,"line_end":393,"column_start":9,"column_end":80}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":114608,"byte_end":114611,"line_start":394,"line_end":394,"column_start":9,"column_end":12}},{"value":"/ As soon es either the senders or all receivers is closed, the channel","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":114620,"byte_end":114693,"line_start":395,"line_end":395,"column_start":9,"column_end":82}},{"value":"/ itself will be closed.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":114702,"byte_end":114728,"line_start":396,"line_end":396,"column_start":9,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":784},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":115945,"byte_end":115949,"line_start":429,"line_end":429,"column_start":20,"column_end":24},"name":"send","qualname":"<GenericOneshotBroadcastSender<MutexType, T>>::send","value":"pub fn send(&Self, T) -> Result<(), ChannelSendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Writes a single value to the channel.","sig":null,"attributes":[{"value":"/ Writes a single value to the channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":115592,"byte_end":115633,"line_start":423,"line_end":423,"column_start":13,"column_end":54}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":115646,"byte_end":115649,"line_start":424,"line_end":424,"column_start":13,"column_end":16}},{"value":"/ This will notify waiters about the availability of the value.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":115662,"byte_end":115727,"line_start":425,"line_end":425,"column_start":13,"column_end":78}},{"value":"/ If a value had been written to the channel before, or if the","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":115740,"byte_end":115804,"line_start":426,"line_end":426,"column_start":13,"column_end":77}},{"value":"/ channel is closed, the new value will be rejected and","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":115817,"byte_end":115874,"line_start":427,"line_end":427,"column_start":13,"column_end":70}},{"value":"/ returned inside the error variant.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":115887,"byte_end":115925,"line_start":428,"line_end":428,"column_start":13,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":116430,"byte_end":116437,"line_start":441,"line_end":441,"column_start":20,"column_end":27},"name":"receive","qualname":"<GenericOneshotBroadcastReceiver<MutexType, T>>::receive","value":"pub fn receive(&Self) -> ChannelReceiveFuture<MutexType, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that gets fulfilled when a value is written to the channel.\n If the channels gets closed, the future will resolve to `None`.\n","sig":null,"attributes":[{"value":"/ Returns a future that gets fulfilled when a value is written to the channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":116250,"byte_end":116330,"line_start":439,"line_end":439,"column_start":13,"column_end":93}},{"value":"/ If the channels gets closed, the future will resolve to `None`.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":116343,"byte_end":116410,"line_start":440,"line_end":440,"column_start":13,"column_end":80}}]},{"kind":"Type","id":{"krate":0,"index":791},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":116997,"byte_end":117019,"line_start":456,"line_end":456,"column_start":22,"column_end":44},"name":"OneshotBroadcastSender","qualname":"::channel::oneshot_broadcast::if_alloc::shared::if_std::OneshotBroadcastSender","value":"GenericOneshotBroadcastSender<parking_lot::RawMutex, T>","parent":null,"children":[],"decl_id":null,"docs":" A [`GenericOneshotBroadcastSender`] implementation backed by [`parking_lot`].\n","sig":null,"attributes":[{"value":"/ A [`GenericOneshotBroadcastSender`] implementation backed by [`parking_lot`].","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":116894,"byte_end":116975,"line_start":455,"line_end":455,"column_start":13,"column_end":94}}]},{"kind":"Type","id":{"krate":0,"index":793},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":117215,"byte_end":117239,"line_start":459,"line_end":459,"column_start":22,"column_end":46},"name":"OneshotBroadcastReceiver","qualname":"::channel::oneshot_broadcast::if_alloc::shared::if_std::OneshotBroadcastReceiver","value":"GenericOneshotBroadcastReceiver<parking_lot::RawMutex, T>","parent":null,"children":[],"decl_id":null,"docs":" A [`GenericOneshotBroadcastReceiver`] implementation backed by [`parking_lot`].\n","sig":null,"attributes":[{"value":"/ A [`GenericOneshotBroadcastReceiver`] implementation backed by [`parking_lot`].","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":117110,"byte_end":117193,"line_start":458,"line_end":458,"column_start":13,"column_end":96}}]},{"kind":"Function","id":{"krate":0,"index":795},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":117800,"byte_end":117825,"line_start":472,"line_end":472,"column_start":20,"column_end":45},"name":"oneshot_broadcast_channel","qualname":"::channel::oneshot_broadcast::if_alloc::shared::if_std::oneshot_broadcast_channel","value":"pub fn oneshot_broadcast_channel<T>()\n-> (OneshotBroadcastSender<T>, OneshotBroadcastReceiver<T>) where T: Send +\nClone","parent":null,"children":[],"decl_id":null,"docs":" Creates a new oneshot broadcast channel.","sig":null,"attributes":[{"value":"/ Creates a new oneshot broadcast channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":117333,"byte_end":117377,"line_start":462,"line_end":462,"column_start":13,"column_end":57}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":117390,"byte_end":117393,"line_start":463,"line_end":463,"column_start":13,"column_end":16}},{"value":"/ Refer to [`generic_oneshot_broadcast_channel`] for details.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":117406,"byte_end":117469,"line_start":464,"line_end":464,"column_start":13,"column_end":76}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":117482,"byte_end":117485,"line_start":465,"line_end":465,"column_start":13,"column_end":16}},{"value":"/ Example for creating a channel to transmit an integer value:","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":117498,"byte_end":117562,"line_start":466,"line_end":466,"column_start":13,"column_end":77}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":117575,"byte_end":117578,"line_start":467,"line_end":467,"column_start":13,"column_end":16}},{"value":"/ ```","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":117591,"byte_end":117598,"line_start":468,"line_end":468,"column_start":13,"column_end":20}},{"value":"/ # use futures_intrusive::channel::shared::oneshot_broadcast_channel;","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":117611,"byte_end":117683,"line_start":469,"line_end":469,"column_start":13,"column_end":85}},{"value":"/ let (sender, receiver) = oneshot_broadcast_channel::<i32>();","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":117696,"byte_end":117760,"line_start":470,"line_end":470,"column_start":13,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":117773,"byte_end":117780,"line_start":471,"line_end":471,"column_start":13,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":2646},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":118864,"byte_end":118871,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"name":"StateId","qualname":"::channel::state_broadcast::StateId","value":"","parent":null,"children":[],"decl_id":null,"docs":" An ID, which allows to differentiate states received from a Channel.\n Elements with a bigger state ID (`id > otherId`) have been published more\n recently into the Channel.\n","sig":null,"attributes":[{"value":"/ An ID, which allows to differentiate states received from a Channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":118600,"byte_end":118672,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ Elements with a bigger state ID (`id > otherId`) have been published more","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":118673,"byte_end":118750,"line_start":18,"line_end":18,"column_start":1,"column_end":78}},{"value":"/ recently into the Channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":118751,"byte_end":118781,"line_start":19,"line_end":19,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":863},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":119017,"byte_end":119020,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"name":"new","qualname":"<StateId>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the initial StateId, which is guaranteed to return the\n oldest buffered value available.\n","sig":null,"attributes":[{"value":"/ Returns the initial StateId, which is guaranteed to return the","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":118898,"byte_end":118964,"line_start":24,"line_end":24,"column_start":5,"column_end":71}},{"value":"/ oldest buffered value available.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":118969,"byte_end":119005,"line_start":25,"line_end":25,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":870},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":121009,"byte_end":121027,"line_start":90,"line_end":90,"column_start":12,"column_end":30},"name":"StateReceiveFuture","qualname":"::channel::state_broadcast::StateReceiveFuture","value":"StateReceiveFuture {  }","parent":null,"children":[{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":876}],"decl_id":null,"docs":" A Future that is returned by the `receive` function on a state broadcast channel.\n The future gets resolved with `Some((state_id, state))` when a value could be\n received from the channel.","sig":null,"attributes":[{"value":"/ A Future that is returned by the `receive` function on a state broadcast channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":120396,"byte_end":120481,"line_start":78,"line_end":78,"column_start":1,"column_end":86}},{"value":"/ The future gets resolved with `Some((state_id, state))` when a value could be","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":120482,"byte_end":120563,"line_start":79,"line_end":79,"column_start":1,"column_end":82}},{"value":"/ received from the channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":120564,"byte_end":120594,"line_start":80,"line_end":80,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":120595,"byte_end":120598,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ `state` represents the new state which had been retrieved from the channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":120599,"byte_end":120678,"line_start":82,"line_end":82,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":120679,"byte_end":120682,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ `state_id` is the [`StateId`] which can be passed as a parameter to","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":120683,"byte_end":120754,"line_start":84,"line_end":84,"column_start":1,"column_end":72}},{"value":"/ `receive()` in order to fetch the next state from the channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":120755,"byte_end":120821,"line_start":85,"line_end":85,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":120822,"byte_end":120825,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ If the channels gets closed and no items are still enqueued inside the","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":120826,"byte_end":120900,"line_start":87,"line_end":87,"column_start":1,"column_end":75}},{"value":"/ channel, the future will resolve to `None`.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":120901,"byte_end":120948,"line_start":88,"line_end":88,"column_start":1,"column_end":48}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":120949,"byte_end":120997,"line_start":89,"line_end":89,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":918},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":129334,"byte_end":129362,"line_start":320,"line_end":320,"column_start":12,"column_end":40},"name":"GenericStateBroadcastChannel","qualname":"::channel::state_broadcast::GenericStateBroadcastChannel","value":"GenericStateBroadcastChannel {  }","parent":null,"children":[{"krate":0,"index":921}],"decl_id":null,"docs":" A channel which can be used to synchronize the state between a sender an\n arbitrary number of receivers.","sig":null,"attributes":[{"value":"/ A channel which can be used to synchronize the state between a sender an","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":129049,"byte_end":129125,"line_start":313,"line_end":313,"column_start":1,"column_end":77}},{"value":"/ arbitrary number of receivers.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":129126,"byte_end":129160,"line_start":314,"line_end":314,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":129161,"byte_end":129164,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ The sender can publish its state.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":129165,"byte_end":129202,"line_start":316,"line_end":316,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":129203,"byte_end":129206,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/ The receivers can wait for state updates by announcing the most recent state","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":129207,"byte_end":129287,"line_start":318,"line_end":318,"column_start":1,"column_end":81}},{"value":"/ that is already known to them.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":129288,"byte_end":129322,"line_start":319,"line_end":319,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":935},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":130265,"byte_end":130268,"line_start":349,"line_end":349,"column_start":12,"column_end":15},"name":"new","qualname":"<GenericStateBroadcastChannel<MutexType, T>>::new","value":"pub fn new() -> GenericStateBroadcastChannel<MutexType, T> where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Creates a new State Broadcast Channel in the given state\n","sig":null,"attributes":[{"value":"/ Creates a new State Broadcast Channel in the given state","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":130193,"byte_end":130253,"line_start":348,"line_end":348,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":936},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":130782,"byte_end":130786,"line_start":364,"line_end":364,"column_start":12,"column_end":16},"name":"send","qualname":"<GenericStateBroadcastChannel<MutexType, T>>::send","value":"pub fn send(&Self, T) -> Result<(), ChannelSendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Writes a single value to the channel.","sig":null,"attributes":[{"value":"/ Writes a single value to the channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":130463,"byte_end":130504,"line_start":358,"line_end":358,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":130509,"byte_end":130512,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ This will notify waiters about the availability of the value.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":130517,"byte_end":130582,"line_start":360,"line_end":360,"column_start":5,"column_end":70}},{"value":"/ If the maximum amount of values had been written to the channel,","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":130587,"byte_end":130655,"line_start":361,"line_end":361,"column_start":5,"column_end":73}},{"value":"/ or if the channel is closed, the new value will be rejected and","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":130660,"byte_end":130727,"line_start":362,"line_end":362,"column_start":5,"column_end":72}},{"value":"/ returned inside the error variant.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":130732,"byte_end":130770,"line_start":363,"line_end":363,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":937},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":131135,"byte_end":131140,"line_start":374,"line_end":374,"column_start":12,"column_end":17},"name":"close","qualname":"<GenericStateBroadcastChannel<MutexType, T>>::close","value":"pub fn close(&Self) -> CloseStatus","parent":null,"children":[],"decl_id":null,"docs":" Closes the channel.","sig":null,"attributes":[{"value":"/ Closes the channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":130890,"byte_end":130913,"line_start":368,"line_end":368,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":130918,"byte_end":130921,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ This will notify waiters about closure, by fulfilling pending `Future`s","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":130926,"byte_end":131001,"line_start":370,"line_end":370,"column_start":5,"column_end":80}},{"value":"/ with `None`.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":131006,"byte_end":131022,"line_start":371,"line_end":371,"column_start":5,"column_end":21}},{"value":"/ `send(value)` attempts which follow this call will fail with a","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":131027,"byte_end":131093,"line_start":372,"line_end":372,"column_start":5,"column_end":71}},{"value":"/ [`ChannelSendError`].","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":131098,"byte_end":131123,"line_start":373,"line_end":373,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":938},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":131636,"byte_end":131643,"line_start":386,"line_end":386,"column_start":12,"column_end":19},"name":"receive","qualname":"<GenericStateBroadcastChannel<MutexType, T>>::receive","value":"pub fn receive(&Self, StateId) -> StateReceiveFuture<, MutexType, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that gets fulfilled when a value is written to the channel\n or the channel is closed.\n `state_id` specifies the minimum state ID that should be retrieved\n by the `receive` operation.","sig":null,"attributes":[{"value":"/ Returns a future that gets fulfilled when a value is written to the channel","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":131210,"byte_end":131289,"line_start":378,"line_end":378,"column_start":5,"column_end":84}},{"value":"/ or the channel is closed.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":131294,"byte_end":131323,"line_start":379,"line_end":379,"column_start":5,"column_end":34}},{"value":"/ `state_id` specifies the minimum state ID that should be retrieved","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":131328,"byte_end":131398,"line_start":380,"line_end":380,"column_start":5,"column_end":75}},{"value":"/ by the `receive` operation.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":131403,"byte_end":131434,"line_start":381,"line_end":381,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":131439,"byte_end":131442,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ The returned [`StateReceiveFuture`] will get fulfilled with the","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":131447,"byte_end":131514,"line_start":383,"line_end":383,"column_start":5,"column_end":72}},{"value":"/ retrieved value as well as the [`StateId`] which is required to retrieve","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":131519,"byte_end":131595,"line_start":384,"line_end":384,"column_start":5,"column_end":81}},{"value":"/ the following state.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":131600,"byte_end":131624,"line_start":385,"line_end":385,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":132170,"byte_end":132181,"line_start":401,"line_end":401,"column_start":12,"column_end":23},"name":"try_receive","qualname":"<GenericStateBroadcastChannel<MutexType, T>>::try_receive","value":"pub fn try_receive(&Self, StateId) -> Option<(StateId, T)>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to retrieve a value whose `StateId` is greater than the one provided.","sig":null,"attributes":[{"value":"/ Attempt to retrieve a value whose `StateId` is greater than the one provided.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":131922,"byte_end":132003,"line_start":397,"line_end":397,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":132008,"byte_end":132011,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if no value is found in the channel, or if the current `StateId`","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":132016,"byte_end":132099,"line_start":399,"line_end":399,"column_start":5,"column_end":88}},{"value":"/ of the value is less or equal to the one provided.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":132104,"byte_end":132158,"line_start":400,"line_end":400,"column_start":5,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":945},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":132937,"byte_end":132963,"line_start":428,"line_end":428,"column_start":10,"column_end":36},"name":"LocalStateBroadcastChannel","qualname":"::channel::state_broadcast::LocalStateBroadcastChannel","value":"GenericStateBroadcastChannel<NoopLock, T>","parent":null,"children":[],"decl_id":null,"docs":" A [`GenericStateBroadcastChannel`] which is not thread-safe.\n","sig":null,"attributes":[{"value":"/ A [`GenericStateBroadcastChannel`] which is not thread-safe.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":132863,"byte_end":132927,"line_start":427,"line_end":427,"column_start":1,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":949},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":133236,"byte_end":133257,"line_start":438,"line_end":438,"column_start":14,"column_end":35},"name":"StateBroadcastChannel","qualname":"::channel::state_broadcast::if_std::StateBroadcastChannel","value":"GenericStateBroadcastChannel<parking_lot::RawMutex, T>","parent":null,"children":[],"decl_id":null,"docs":" A [`GenericStateBroadcastChannel`] implementation backed by [`parking_lot`].\n","sig":null,"attributes":[{"value":"/ A [`GenericStateBroadcastChannel`] implementation backed by [`parking_lot`].","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":133142,"byte_end":133222,"line_start":437,"line_end":437,"column_start":5,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":974},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":135649,"byte_end":135667,"line_start":502,"line_end":502,"column_start":20,"column_end":38},"name":"StateReceiveFuture","qualname":"::channel::state_broadcast::if_alloc::shared::StateReceiveFuture","value":"StateReceiveFuture {  }","parent":null,"children":[{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979}],"decl_id":null,"docs":" A Future that is returned by the `receive` function on a state broadcast channel.\n The future gets resolved with `Some((state_id, state))` when a value could be\n received from the channel.","sig":null,"attributes":[{"value":"/ A Future that is returned by the `receive` function on a state broadcast channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":134940,"byte_end":135025,"line_start":490,"line_end":490,"column_start":9,"column_end":94}},{"value":"/ The future gets resolved with `Some((state_id, state))` when a value could be","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":135034,"byte_end":135115,"line_start":491,"line_end":491,"column_start":9,"column_end":90}},{"value":"/ received from the channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":135124,"byte_end":135154,"line_start":492,"line_end":492,"column_start":9,"column_end":39}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":135163,"byte_end":135166,"line_start":493,"line_end":493,"column_start":9,"column_end":12}},{"value":"/ `state` represents the new state which had been retrieved from the channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":135175,"byte_end":135254,"line_start":494,"line_end":494,"column_start":9,"column_end":88}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":135263,"byte_end":135266,"line_start":495,"line_end":495,"column_start":9,"column_end":12}},{"value":"/ `state_id` is the [`StateId`] which can be passed as a parameter to","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":135275,"byte_end":135346,"line_start":496,"line_end":496,"column_start":9,"column_end":80}},{"value":"/ `receive()` in order to fetch the next state from the channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":135355,"byte_end":135421,"line_start":497,"line_end":497,"column_start":9,"column_end":75}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":135430,"byte_end":135433,"line_start":498,"line_end":498,"column_start":9,"column_end":12}},{"value":"/ If the channels gets closed and no items are still enqueued inside the","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":135442,"byte_end":135516,"line_start":499,"line_end":499,"column_start":9,"column_end":83}},{"value":"/ channel, the future will resolve to `None`.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":135525,"byte_end":135572,"line_start":500,"line_end":500,"column_start":9,"column_end":56}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":135581,"byte_end":135629,"line_start":501,"line_end":501,"column_start":9,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1000},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":138969,"byte_end":138987,"line_start":582,"line_end":582,"column_start":20,"column_end":38},"name":"GenericStateSender","qualname":"::channel::state_broadcast::if_alloc::shared::GenericStateSender","value":"GenericStateSender {  }","parent":null,"children":[{"krate":0,"index":1003}],"decl_id":null,"docs":" The sending side of a channel which can be used to exchange values\n between concurrent tasks.","sig":null,"attributes":[{"value":"/ The sending side of a channel which can be used to exchange values","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":138765,"byte_end":138835,"line_start":578,"line_end":578,"column_start":9,"column_end":79}},{"value":"/ between concurrent tasks.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":138844,"byte_end":138873,"line_start":579,"line_end":579,"column_start":9,"column_end":38}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":138882,"byte_end":138885,"line_start":580,"line_end":580,"column_start":9,"column_end":12}},{"value":"/ Values can be sent into the channel through `send`.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":138894,"byte_end":138949,"line_start":581,"line_end":581,"column_start":9,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":1004},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":139548,"byte_end":139568,"line_start":597,"line_end":597,"column_start":20,"column_end":40},"name":"GenericStateReceiver","qualname":"::channel::state_broadcast::if_alloc::shared::GenericStateReceiver","value":"GenericStateReceiver {  }","parent":null,"children":[{"krate":0,"index":1007}],"decl_id":null,"docs":" The receiving side of a channel which can be used to exchange values\n between concurrent tasks.","sig":null,"attributes":[{"value":"/ The receiving side of a channel which can be used to exchange values","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":139233,"byte_end":139305,"line_start":592,"line_end":592,"column_start":9,"column_end":81}},{"value":"/ between concurrent tasks.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":139314,"byte_end":139343,"line_start":593,"line_end":593,"column_start":9,"column_end":38}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":139352,"byte_end":139355,"line_start":594,"line_end":594,"column_start":9,"column_end":12}},{"value":"/ Tasks can receive values from the channel through the `receive` method.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":139364,"byte_end":139439,"line_start":595,"line_end":595,"column_start":9,"column_end":84}},{"value":"/ The returned Future will get resolved when a value is sent into the channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":139448,"byte_end":139528,"line_start":596,"line_end":596,"column_start":9,"column_end":89}}]},{"kind":"Function","id":{"krate":0,"index":1032},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":143119,"byte_end":143150,"line_start":700,"line_end":700,"column_start":16,"column_end":47},"name":"generic_state_broadcast_channel","qualname":"::channel::state_broadcast::if_alloc::shared::generic_state_broadcast_channel","value":"pub fn generic_state_broadcast_channel<MutexType, T>()\n-> (GenericStateSender<MutexType, T>, GenericStateReceiver<MutexType, T>)\nwhere MutexType: RawMutex, T: Clone + Send","parent":null,"children":[],"decl_id":null,"docs":" Creates a new state broadcast channel which can be used to exchange values\n of type `T` between concurrent tasks.\n The ends of the Channel are represented through\n the returned Sender and Receiver.","sig":null,"attributes":[{"value":"/ Creates a new state broadcast channel which can be used to exchange values","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":142744,"byte_end":142822,"line_start":693,"line_end":693,"column_start":9,"column_end":87}},{"value":"/ of type `T` between concurrent tasks.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":142831,"byte_end":142872,"line_start":694,"line_end":694,"column_start":9,"column_end":50}},{"value":"/ The ends of the Channel are represented through","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":142881,"byte_end":142932,"line_start":695,"line_end":695,"column_start":9,"column_end":60}},{"value":"/ the returned Sender and Receiver.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":142941,"byte_end":142978,"line_start":696,"line_end":696,"column_start":9,"column_end":46}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":142987,"byte_end":142990,"line_start":697,"line_end":697,"column_start":9,"column_end":12}},{"value":"/ As soon es either the senders or receivers is closed, the channel","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":142999,"byte_end":143068,"line_start":698,"line_end":698,"column_start":9,"column_end":78}},{"value":"/ itself will be closed.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":143077,"byte_end":143103,"line_start":699,"line_end":699,"column_start":9,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1038},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":144385,"byte_end":144389,"line_start":735,"line_end":735,"column_start":20,"column_end":24},"name":"send","qualname":"<GenericStateSender<MutexType, T>>::send","value":"pub fn send(&Self, T) -> Result<(), ChannelSendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Writes a single value to the channel.","sig":null,"attributes":[{"value":"/ Writes a single value to the channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":144032,"byte_end":144073,"line_start":729,"line_end":729,"column_start":13,"column_end":54}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":144086,"byte_end":144089,"line_start":730,"line_end":730,"column_start":13,"column_end":16}},{"value":"/ This will notify waiters about the availability of the value.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":144102,"byte_end":144167,"line_start":731,"line_end":731,"column_start":13,"column_end":78}},{"value":"/ If a value had been written to the channel before, or if the","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":144180,"byte_end":144244,"line_start":732,"line_end":732,"column_start":13,"column_end":77}},{"value":"/ channel is closed, the new value will be rejected and","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":144257,"byte_end":144314,"line_start":733,"line_end":733,"column_start":13,"column_end":70}},{"value":"/ returned inside the error variant.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":144327,"byte_end":144365,"line_start":734,"line_end":734,"column_start":13,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1042},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":145168,"byte_end":145175,"line_start":753,"line_end":753,"column_start":20,"column_end":27},"name":"receive","qualname":"<GenericStateReceiver<MutexType, T>>::receive","value":"pub fn receive(&Self, StateId) -> StateReceiveFuture<MutexType, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that gets fulfilled when a value is written to the channel\n or the channel is closed.\n `state_id` specifies the minimum state ID that should be retrieved\n by the `receive` operation.","sig":null,"attributes":[{"value":"/ Returns a future that gets fulfilled when a value is written to the channel","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":144679,"byte_end":144758,"line_start":745,"line_end":745,"column_start":13,"column_end":92}},{"value":"/ or the channel is closed.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":144771,"byte_end":144800,"line_start":746,"line_end":746,"column_start":13,"column_end":42}},{"value":"/ `state_id` specifies the minimum state ID that should be retrieved","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":144813,"byte_end":144883,"line_start":747,"line_end":747,"column_start":13,"column_end":83}},{"value":"/ by the `receive` operation.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":144896,"byte_end":144927,"line_start":748,"line_end":748,"column_start":13,"column_end":44}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":144940,"byte_end":144943,"line_start":749,"line_end":749,"column_start":13,"column_end":16}},{"value":"/ The returned [`StateReceiveFuture`] will get fulfilled with the","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":144956,"byte_end":145023,"line_start":750,"line_end":750,"column_start":13,"column_end":80}},{"value":"/ retrieved value as well as the [`StateId`] which is required to retrieve","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":145036,"byte_end":145112,"line_start":751,"line_end":751,"column_start":13,"column_end":89}},{"value":"/ the following state","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":145125,"byte_end":145148,"line_start":752,"line_end":752,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":145828,"byte_end":145839,"line_start":768,"line_end":768,"column_start":20,"column_end":31},"name":"try_receive","qualname":"<GenericStateReceiver<MutexType, T>>::try_receive","value":"pub fn try_receive(&Self, StateId) -> Option<(StateId, T)>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to retrieve a value whose `StateId` is greater than the one provided.","sig":null,"attributes":[{"value":"/ Attempt to retrieve a value whose `StateId` is greater than the one provided.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":145548,"byte_end":145629,"line_start":764,"line_end":764,"column_start":13,"column_end":94}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":145642,"byte_end":145645,"line_start":765,"line_end":765,"column_start":13,"column_end":16}},{"value":"/ Returns `None` if no value is found in the channel, or if the current `StateId`","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":145658,"byte_end":145741,"line_start":766,"line_end":766,"column_start":13,"column_end":96}},{"value":"/ of the value is less or equal to the one provided.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":145754,"byte_end":145808,"line_start":767,"line_end":767,"column_start":13,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":1046},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":146269,"byte_end":146280,"line_start":782,"line_end":782,"column_start":22,"column_end":33},"name":"StateSender","qualname":"::channel::state_broadcast::if_alloc::shared::if_std::StateSender","value":"GenericStateSender<parking_lot::RawMutex, T>","parent":null,"children":[],"decl_id":null,"docs":" A [`GenericStateSender`] implementation backed by [`parking_lot`].\n","sig":null,"attributes":[{"value":"/ A [`GenericStateSender`] implementation backed by [`parking_lot`].","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":146177,"byte_end":146247,"line_start":781,"line_end":781,"column_start":13,"column_end":83}}]},{"kind":"Type","id":{"krate":0,"index":1048},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":146454,"byte_end":146467,"line_start":785,"line_end":785,"column_start":22,"column_end":35},"name":"StateReceiver","qualname":"::channel::state_broadcast::if_alloc::shared::if_std::StateReceiver","value":"GenericStateReceiver<parking_lot::RawMutex, T>","parent":null,"children":[],"decl_id":null,"docs":" A [`GenericStateReceiver`] implementation backed by [`parking_lot`].\n","sig":null,"attributes":[{"value":"/ A [`GenericStateReceiver`] implementation backed by [`parking_lot`].","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":146360,"byte_end":146432,"line_start":784,"line_end":784,"column_start":13,"column_end":85}}]},{"kind":"Function","id":{"krate":0,"index":1050},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":147009,"byte_end":147032,"line_start":798,"line_end":798,"column_start":20,"column_end":43},"name":"state_broadcast_channel","qualname":"::channel::state_broadcast::if_alloc::shared::if_std::state_broadcast_channel","value":"pub fn state_broadcast_channel<T>() -> (StateSender<T>, StateReceiver<T>)\nwhere T: Clone + Send","parent":null,"children":[],"decl_id":null,"docs":" Creates a new state broadcast channel.","sig":null,"attributes":[{"value":"/ Creates a new state broadcast channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":146550,"byte_end":146592,"line_start":788,"line_end":788,"column_start":13,"column_end":55}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":146605,"byte_end":146608,"line_start":789,"line_end":789,"column_start":13,"column_end":16}},{"value":"/ Refer to [`generic_state_broadcast_channel`] for details.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":146621,"byte_end":146682,"line_start":790,"line_end":790,"column_start":13,"column_end":74}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":146695,"byte_end":146698,"line_start":791,"line_end":791,"column_start":13,"column_end":16}},{"value":"/ Example for creating a channel to transmit an integer value:","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":146711,"byte_end":146775,"line_start":792,"line_end":792,"column_start":13,"column_end":77}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":146788,"byte_end":146791,"line_start":793,"line_end":793,"column_start":13,"column_end":16}},{"value":"/ ```","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":146804,"byte_end":146811,"line_start":794,"line_end":794,"column_start":13,"column_end":20}},{"value":"/ # use futures_intrusive::channel::shared::state_broadcast_channel;","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":146824,"byte_end":146894,"line_start":795,"line_end":795,"column_start":13,"column_end":83}},{"value":"/ let (sender, receiver) = state_broadcast_channel::<i32>();","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":146907,"byte_end":146969,"line_start":796,"line_end":796,"column_start":13,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":146982,"byte_end":146989,"line_start":797,"line_end":797,"column_start":13,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":1188},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":161717,"byte_end":161731,"line_start":368,"line_end":368,"column_start":12,"column_end":26},"name":"GenericChannel","qualname":"::channel::mpmc::GenericChannel","value":"GenericChannel {  }","parent":null,"children":[{"krate":0,"index":1192}],"decl_id":null,"docs":" A channel which can be used to exchange values of type `T` between\n concurrent tasks.","sig":null,"attributes":[{"value":"/ A channel which can be used to exchange values of type `T` between","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":161027,"byte_end":161097,"line_start":352,"line_end":352,"column_start":1,"column_end":71}},{"value":"/ concurrent tasks.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":161098,"byte_end":161119,"line_start":353,"line_end":353,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":161120,"byte_end":161123,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ `A` represents the backing buffer for a Channel. E.g. a channel which","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":161124,"byte_end":161197,"line_start":355,"line_end":355,"column_start":1,"column_end":74}},{"value":"/ can buffer up to 4 u32 values can be created via:","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":161198,"byte_end":161251,"line_start":356,"line_end":356,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":161252,"byte_end":161255,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":161256,"byte_end":161263,"line_start":358,"line_end":358,"column_start":1,"column_end":8}},{"value":"/ # use futures_intrusive::channel::LocalChannel;","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":161264,"byte_end":161315,"line_start":359,"line_end":359,"column_start":1,"column_end":52}},{"value":"/ let channel: LocalChannel<i32, [i32; 4]> = LocalChannel::new();","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":161316,"byte_end":161383,"line_start":360,"line_end":360,"column_start":1,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":161384,"byte_end":161391,"line_start":361,"line_end":361,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":161392,"byte_end":161395,"line_start":362,"line_end":362,"column_start":1,"column_end":4}},{"value":"/ Tasks can receive values from the channel through the `receive` method.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":161396,"byte_end":161471,"line_start":363,"line_end":363,"column_start":1,"column_end":76}},{"value":"/ The returned Future will get resolved when a value is sent into the channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":161472,"byte_end":161552,"line_start":364,"line_end":364,"column_start":1,"column_end":81}},{"value":"/ Values can be sent into the channel through `send`.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":161553,"byte_end":161608,"line_start":365,"line_end":365,"column_start":1,"column_end":56}},{"value":"/ The returned Future will get resolved when the value has been stored","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":161609,"byte_end":161681,"line_start":366,"line_end":366,"column_start":1,"column_end":73}},{"value":"/ inside the channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":161682,"byte_end":161705,"line_start":367,"line_end":367,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1210},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":162776,"byte_end":162779,"line_start":407,"line_end":407,"column_start":12,"column_end":15},"name":"new","qualname":"<GenericChannel<MutexType, T, A>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Channel, utilizing the default capacity that\n the RingBuffer in `A` provides.\n","sig":null,"attributes":[{"value":"/ Creates a new Channel, utilizing the default capacity that","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":162662,"byte_end":162724,"line_start":405,"line_end":405,"column_start":5,"column_end":67}},{"value":"/ the RingBuffer in `A` provides.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":162729,"byte_end":162764,"line_start":406,"line_end":406,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1211},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":163119,"byte_end":163132,"line_start":416,"line_end":416,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<GenericChannel<MutexType, T, A>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Channel, which has storage for a `capacity` items.\n Depending on the utilized `RingBuf` type, the capacity argument might\n be ignored and the default capacity might be utilized.\n","sig":null,"attributes":[{"value":"/ Creates a new Channel, which has storage for a `capacity` items.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":162898,"byte_end":162966,"line_start":413,"line_end":413,"column_start":5,"column_end":73}},{"value":"/ Depending on the utilized `RingBuf` type, the capacity argument might","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":162971,"byte_end":163044,"line_start":414,"line_end":414,"column_start":5,"column_end":78}},{"value":"/ be ignored and the default capacity might be utilized.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":163049,"byte_end":163107,"line_start":415,"line_end":415,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1212},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":163539,"byte_end":163543,"line_start":426,"line_end":426,"column_start":12,"column_end":16},"name":"send","qualname":"<GenericChannel<MutexType, T, A>>::send","value":"pub fn send(&Self, T) -> ChannelSendFuture<, MutexType, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that gets fulfilled when the value has been written to\n the channel.\n If the channel gets closed while the send is in progress, sending the\n value will fail, and the future will deliver the value back.\n","sig":null,"attributes":[{"value":"/ Returns a future that gets fulfilled when the value has been written to","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":163284,"byte_end":163359,"line_start":422,"line_end":422,"column_start":5,"column_end":80}},{"value":"/ the channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":163364,"byte_end":163380,"line_start":423,"line_end":423,"column_start":5,"column_end":21}},{"value":"/ If the channel gets closed while the send is in progress, sending the","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":163385,"byte_end":163458,"line_start":424,"line_end":424,"column_start":5,"column_end":78}},{"value":"/ value will fail, and the future will deliver the value back.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":163463,"byte_end":163527,"line_start":425,"line_end":425,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1213},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":164428,"byte_end":164436,"line_start":444,"line_end":444,"column_start":12,"column_end":20},"name":"try_send","qualname":"<GenericChannel<MutexType, T, A>>::try_send","value":"pub fn try_send(&Self, T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to send the value without waiting.","sig":null,"attributes":[{"value":"/ Attempt to send the value without waiting.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":163785,"byte_end":163831,"line_start":434,"line_end":434,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":163836,"byte_end":163839,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ This operation is not supported for unbuffered channels and will","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":163844,"byte_end":163912,"line_start":436,"line_end":436,"column_start":5,"column_end":73}},{"value":"/ panic if the capacity of the `RingBuf` is zero. The reason for this is","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":163917,"byte_end":163991,"line_start":437,"line_end":437,"column_start":5,"column_end":79}},{"value":"/ that the actual value transfer on unbuffered channels always happens","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":163996,"byte_end":164068,"line_start":438,"line_end":438,"column_start":5,"column_end":77}},{"value":"/ when a receiving task copies the value out of the sending task while it","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":164073,"byte_end":164148,"line_start":439,"line_end":439,"column_start":5,"column_end":80}},{"value":"/ is waiting. If the sending task does not wait, the value can not be","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":164153,"byte_end":164224,"line_start":440,"line_end":440,"column_start":5,"column_end":76}},{"value":"/ transferred. Since this method can therefore never yield a reasonable","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":164229,"byte_end":164302,"line_start":441,"line_end":441,"column_start":5,"column_end":78}},{"value":"/ result with unbuffered channels, it panics in order to highlight the","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":164307,"byte_end":164379,"line_start":442,"line_end":442,"column_start":5,"column_end":77}},{"value":"/ use of an inappropriate API.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":164384,"byte_end":164416,"line_start":443,"line_end":443,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1214},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":164918,"byte_end":164925,"line_start":459,"line_end":459,"column_start":12,"column_end":19},"name":"receive","qualname":"<GenericChannel<MutexType, T, A>>::receive","value":"pub fn receive(&Self) -> ChannelReceiveFuture<, MutexType, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that gets fulfilled when a value is written to the channel.\n If the channels gets closed, the future will resolve to `None`.\n","sig":null,"attributes":[{"value":"/ Returns a future that gets fulfilled when a value is written to the channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":164754,"byte_end":164834,"line_start":457,"line_end":457,"column_start":5,"column_end":85}},{"value":"/ If the channels gets closed, the future will resolve to `None`.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":164839,"byte_end":164906,"line_start":458,"line_end":458,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1215},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":165232,"byte_end":165243,"line_start":468,"line_end":468,"column_start":12,"column_end":23},"name":"try_receive","qualname":"<GenericChannel<MutexType, T, A>>::try_receive","value":"pub fn try_receive(&Self) -> Result<T, TryReceiveError>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive a value of the channel without waiting.\n","sig":null,"attributes":[{"value":"/ Attempt to receive a value of the channel without waiting.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":165158,"byte_end":165220,"line_start":467,"line_end":467,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1216},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":165794,"byte_end":165800,"line_start":486,"line_end":486,"column_start":12,"column_end":18},"name":"stream","qualname":"<GenericChannel<MutexType, T, A>>::stream","value":"pub fn stream(&Self) -> ChannelStream<, MutexType, T, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream that will receive values from this channel.","sig":null,"attributes":[{"value":"/ Returns a stream that will receive values from this channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":165585,"byte_end":165649,"line_start":482,"line_end":482,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":165654,"byte_end":165657,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ This stream does not yield `None` when the channel is empty,","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":165662,"byte_end":165726,"line_start":484,"line_end":484,"column_start":5,"column_end":69}},{"value":"/ instead it yields `None` when it is terminated.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":165731,"byte_end":165782,"line_start":485,"line_end":485,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1217},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":166179,"byte_end":166184,"line_start":497,"line_end":497,"column_start":12,"column_end":17},"name":"close","qualname":"<GenericChannel<MutexType, T, A>>::close","value":"pub fn close(&Self) -> CloseStatus","parent":null,"children":[],"decl_id":null,"docs":" Closes the channel.\n All pending and future send attempts will fail.\n Receive attempts will continue to succeed as long as there are items\n stored inside the channel. Further attempts will fail.\n","sig":null,"attributes":[{"value":"/ Closes the channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":165948,"byte_end":165971,"line_start":493,"line_end":493,"column_start":5,"column_end":28}},{"value":"/ All pending and future send attempts will fail.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":165976,"byte_end":166027,"line_start":494,"line_end":494,"column_start":5,"column_end":56}},{"value":"/ Receive attempts will continue to succeed as long as there are items","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":166032,"byte_end":166104,"line_start":495,"line_end":495,"column_start":5,"column_end":77}},{"value":"/ stored inside the channel. Further attempts will fail.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":166109,"byte_end":166167,"line_start":496,"line_end":496,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":2683},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":168114,"byte_end":168127,"line_start":571,"line_end":571,"column_start":12,"column_end":25},"name":"ChannelStream","qualname":"::channel::mpmc::ChannelStream","value":"ChannelStream {  }","parent":null,"children":[{"krate":0,"index":2688},{"krate":0,"index":2689}],"decl_id":null,"docs":" A stream that receives from a `GenericChannel`.","sig":null,"attributes":[{"value":"/ A stream that receives from a `GenericChannel`.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":167910,"byte_end":167961,"line_start":566,"line_end":566,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":167962,"byte_end":167965,"line_start":567,"line_end":567,"column_start":1,"column_end":4}},{"value":"/ Not driving the `ChannelStream` to completion after it has been polled","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":167966,"byte_end":168040,"line_start":568,"line_end":568,"column_start":1,"column_end":75}},{"value":"/ might lead to lost wakeup notifications.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":168041,"byte_end":168085,"line_start":569,"line_end":569,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1243},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":170608,"byte_end":170620,"line_start":646,"line_end":646,"column_start":10,"column_end":22},"name":"LocalChannel","qualname":"::channel::mpmc::LocalChannel","value":"GenericChannel<NoopLock, T, ArrayBuf<T, A>>","parent":null,"children":[],"decl_id":null,"docs":" A [`GenericChannel`] implementation which is not thread-safe.\n","sig":null,"attributes":[{"value":"/ A [`GenericChannel`] implementation which is not thread-safe.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":170533,"byte_end":170598,"line_start":645,"line_end":645,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":1246},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":170762,"byte_end":170784,"line_start":649,"line_end":649,"column_start":10,"column_end":32},"name":"LocalUnbufferedChannel","qualname":"::channel::mpmc::LocalUnbufferedChannel","value":"LocalChannel<T, [T; ]>","parent":null,"children":[],"decl_id":null,"docs":" An unbuffered [`GenericChannel`] implementation which is not thread-safe.\n","sig":null,"attributes":[{"value":"/ An unbuffered [`GenericChannel`] implementation which is not thread-safe.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":170675,"byte_end":170752,"line_start":648,"line_end":648,"column_start":1,"column_end":78}}]},{"kind":"Type","id":{"krate":0,"index":1251},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":171578,"byte_end":171585,"line_start":667,"line_end":667,"column_start":14,"column_end":21},"name":"Channel","qualname":"::channel::mpmc::if_std::Channel","value":"GenericChannel<parking_lot::RawMutex, T, ArrayBuf<T, A>>","parent":null,"children":[],"decl_id":null,"docs":" A [`GenericChannel`] implementation backed by [`parking_lot`].\n","sig":null,"attributes":[{"value":"/ A [`GenericChannel`] implementation backed by [`parking_lot`].","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":171498,"byte_end":171564,"line_start":666,"line_end":666,"column_start":5,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":1254},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":171757,"byte_end":171774,"line_start":671,"line_end":671,"column_start":14,"column_end":31},"name":"UnbufferedChannel","qualname":"::channel::mpmc::if_std::UnbufferedChannel","value":"Channel<T, [T; ]>","parent":null,"children":[],"decl_id":null,"docs":" An unbuffered [`GenericChannel`] implementation backed by [`parking_lot`].\n","sig":null,"attributes":[{"value":"/ An unbuffered [`GenericChannel`] implementation backed by [`parking_lot`].","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":171665,"byte_end":171743,"line_start":670,"line_end":670,"column_start":5,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":1295},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":174892,"byte_end":174905,"line_start":758,"line_end":758,"column_start":20,"column_end":33},"name":"GenericSender","qualname":"::channel::mpmc::if_alloc::shared::GenericSender","value":"GenericSender {  }","parent":null,"children":[{"krate":0,"index":1299}],"decl_id":null,"docs":" The sending side of a channel which can be used to exchange values\n between concurrent tasks.","sig":null,"attributes":[{"value":"/ The sending side of a channel which can be used to exchange values","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":174587,"byte_end":174657,"line_start":753,"line_end":753,"column_start":9,"column_end":79}},{"value":"/ between concurrent tasks.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":174666,"byte_end":174695,"line_start":754,"line_end":754,"column_start":9,"column_end":38}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":174704,"byte_end":174707,"line_start":755,"line_end":755,"column_start":9,"column_end":12}},{"value":"/ Values can be sent into the channel through `send`.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":174716,"byte_end":174771,"line_start":756,"line_end":756,"column_start":9,"column_end":64}},{"value":"/ The returned Future will get resolved when the value has been stored inside the channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":174780,"byte_end":174872,"line_start":757,"line_end":757,"column_start":9,"column_end":101}}]},{"kind":"Struct","id":{"krate":0,"index":1300},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":175453,"byte_end":175468,"line_start":772,"line_end":772,"column_start":20,"column_end":35},"name":"GenericReceiver","qualname":"::channel::mpmc::if_alloc::shared::GenericReceiver","value":"GenericReceiver {  }","parent":null,"children":[{"krate":0,"index":1304}],"decl_id":null,"docs":" The receiving side of a channel which can be used to exchange values\n between concurrent tasks.","sig":null,"attributes":[{"value":"/ The receiving side of a channel which can be used to exchange values","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":175138,"byte_end":175210,"line_start":767,"line_end":767,"column_start":9,"column_end":81}},{"value":"/ between concurrent tasks.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":175219,"byte_end":175248,"line_start":768,"line_end":768,"column_start":9,"column_end":38}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":175257,"byte_end":175260,"line_start":769,"line_end":769,"column_start":9,"column_end":12}},{"value":"/ Tasks can receive values from the channel through the `receive` method.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":175269,"byte_end":175344,"line_start":770,"line_end":770,"column_start":9,"column_end":84}},{"value":"/ The returned Future will get resolved when a value is sent into the channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":175353,"byte_end":175433,"line_start":771,"line_end":771,"column_start":9,"column_end":89}}]},{"kind":"Function","id":{"krate":0,"index":1335},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":179459,"byte_end":179474,"line_start":881,"line_end":881,"column_start":16,"column_end":31},"name":"generic_channel","qualname":"::channel::mpmc::if_alloc::shared::generic_channel","value":"pub fn generic_channel<MutexType, T, A>(usize)\n-> (GenericSender<MutexType, T, A>, GenericReceiver<MutexType, T, A>) where\nMutexType: RawMutex, A: RingBuf<Item = T>, T: Send","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Channel which can be used to exchange values of type `T` between\n concurrent tasks. The ends of the Channel are represented through\n the returned Sender and Receiver.\n Both the Sender and Receiver can be cloned in order to let more tasks\n interact with the Channel.","sig":null,"attributes":[{"value":"/ Creates a new Channel which can be used to exchange values of type `T` between","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":178904,"byte_end":178986,"line_start":871,"line_end":871,"column_start":9,"column_end":91}},{"value":"/ concurrent tasks. The ends of the Channel are represented through","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":178995,"byte_end":179064,"line_start":872,"line_end":872,"column_start":9,"column_end":78}},{"value":"/ the returned Sender and Receiver.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":179073,"byte_end":179110,"line_start":873,"line_end":873,"column_start":9,"column_end":46}},{"value":"/ Both the Sender and Receiver can be cloned in order to let more tasks","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":179119,"byte_end":179192,"line_start":874,"line_end":874,"column_start":9,"column_end":82}},{"value":"/ interact with the Channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":179201,"byte_end":179231,"line_start":875,"line_end":875,"column_start":9,"column_end":39}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":179240,"byte_end":179243,"line_start":876,"line_end":876,"column_start":9,"column_end":12}},{"value":"/ As soon es either all Senders or all Receivers are closed, the Channel","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":179252,"byte_end":179326,"line_start":877,"line_end":877,"column_start":9,"column_end":83}},{"value":"/ itself will be closed.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":179335,"byte_end":179361,"line_start":878,"line_end":878,"column_start":9,"column_end":35}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":179370,"byte_end":179373,"line_start":879,"line_end":879,"column_start":9,"column_end":12}},{"value":"/ The channel can buffer up to `capacity` items internally.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":179382,"byte_end":179443,"line_start":880,"line_end":880,"column_start":9,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1343},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":180662,"byte_end":180666,"line_start":915,"line_end":915,"column_start":20,"column_end":24},"name":"send","qualname":"<GenericSender<MutexType, T, A>>::send","value":"pub fn send(&Self, T) -> ChannelSendFuture<MutexType, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that gets fulfilled when the value has been written to\n the channel.\n If the channel gets closed while the send is in progress, sending the\n value will fail, and the future will deliver the value back.\n","sig":null,"attributes":[{"value":"/ Returns a future that gets fulfilled when the value has been written to","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":180375,"byte_end":180450,"line_start":911,"line_end":911,"column_start":13,"column_end":88}},{"value":"/ the channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":180463,"byte_end":180479,"line_start":912,"line_end":912,"column_start":13,"column_end":29}},{"value":"/ If the channel gets closed while the send is in progress, sending the","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":180492,"byte_end":180565,"line_start":913,"line_end":913,"column_start":13,"column_end":86}},{"value":"/ value will fail, and the future will deliver the value back.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":180578,"byte_end":180642,"line_start":914,"line_end":914,"column_start":13,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1344},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":181701,"byte_end":181709,"line_start":933,"line_end":933,"column_start":20,"column_end":28},"name":"try_send","qualname":"<GenericSender<MutexType, T, A>>::try_send","value":"pub fn try_send(&Self, T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to send the value without waiting.","sig":null,"attributes":[{"value":"/ Attempt to send the value without waiting.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":180978,"byte_end":181024,"line_start":923,"line_end":923,"column_start":13,"column_end":59}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":181037,"byte_end":181040,"line_start":924,"line_end":924,"column_start":13,"column_end":16}},{"value":"/ This operation is not supported for unbuffered channels and will","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":181053,"byte_end":181121,"line_start":925,"line_end":925,"column_start":13,"column_end":81}},{"value":"/ panic if the capacity of the `RingBuf` is zero. The reason for this is","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":181134,"byte_end":181208,"line_start":926,"line_end":926,"column_start":13,"column_end":87}},{"value":"/ that the actual value transfer on unbuffered channels always happens","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":181221,"byte_end":181293,"line_start":927,"line_end":927,"column_start":13,"column_end":85}},{"value":"/ when a receiving task copies the value out of the sending task while it","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":181306,"byte_end":181381,"line_start":928,"line_end":928,"column_start":13,"column_end":88}},{"value":"/ is waiting. If the sending task does not wait, the value can not be","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":181394,"byte_end":181465,"line_start":929,"line_end":929,"column_start":13,"column_end":84}},{"value":"/ transferred. Since this method can therefore never yield a reasonable","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":181478,"byte_end":181551,"line_start":930,"line_end":930,"column_start":13,"column_end":86}},{"value":"/ result with unbuffered channels, it panics in order to highlight the","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":181564,"byte_end":181636,"line_start":931,"line_end":931,"column_start":13,"column_end":85}},{"value":"/ use of an inappropriate API.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":181649,"byte_end":181681,"line_start":932,"line_end":932,"column_start":13,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1345},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":182106,"byte_end":182111,"line_start":941,"line_end":941,"column_start":20,"column_end":25},"name":"close","qualname":"<GenericSender<MutexType, T, A>>::close","value":"pub fn close(&Self) -> CloseStatus","parent":null,"children":[],"decl_id":null,"docs":" Closes the channel.\n All pending future send attempts will fail.\n Receive attempts will continue to succeed as long as there are items\n stored inside the channel. Further attempts will return `None`.\n","sig":null,"attributes":[{"value":"/ Closes the channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":181838,"byte_end":181861,"line_start":937,"line_end":937,"column_start":13,"column_end":36}},{"value":"/ All pending future send attempts will fail.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":181874,"byte_end":181921,"line_start":938,"line_end":938,"column_start":13,"column_end":60}},{"value":"/ Receive attempts will continue to succeed as long as there are items","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":181934,"byte_end":182006,"line_start":939,"line_end":939,"column_start":13,"column_end":85}},{"value":"/ stored inside the channel. Further attempts will return `None`.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":182019,"byte_end":182086,"line_start":940,"line_end":940,"column_start":13,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1350},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":182570,"byte_end":182577,"line_start":953,"line_end":953,"column_start":20,"column_end":27},"name":"receive","qualname":"<GenericReceiver<MutexType, T, A>>::receive","value":"pub fn receive(&Self) -> ChannelReceiveFuture<MutexType, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that gets fulfilled when a value is written to the channel.\n If the channels gets closed, the future will resolve to `None`.\n","sig":null,"attributes":[{"value":"/ Returns a future that gets fulfilled when a value is written to the channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":182390,"byte_end":182470,"line_start":951,"line_end":951,"column_start":13,"column_end":93}},{"value":"/ If the channels gets closed, the future will resolve to `None`.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":182483,"byte_end":182550,"line_start":952,"line_end":952,"column_start":13,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1351},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":182956,"byte_end":182967,"line_start":962,"line_end":962,"column_start":20,"column_end":31},"name":"try_receive","qualname":"<GenericReceiver<MutexType, T, A>>::try_receive","value":"pub fn try_receive(&Self) -> Result<T, TryReceiveError>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive form the channel without waiting.\n","sig":null,"attributes":[{"value":"/ Attempt to receive form the channel without waiting.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":182880,"byte_end":182936,"line_start":961,"line_end":961,"column_start":13,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1352},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":183351,"byte_end":183356,"line_start":970,"line_end":970,"column_start":20,"column_end":25},"name":"close","qualname":"<GenericReceiver<MutexType, T, A>>::close","value":"pub fn close(&Self) -> CloseStatus","parent":null,"children":[],"decl_id":null,"docs":" Closes the channel.\n All pending future send attempts will fail.\n Receive attempts will continue to succeed as long as there are items\n stored inside the channel. Further attempts will return `None`.\n","sig":null,"attributes":[{"value":"/ Closes the channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":183083,"byte_end":183106,"line_start":966,"line_end":966,"column_start":13,"column_end":36}},{"value":"/ All pending future send attempts will fail.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":183119,"byte_end":183166,"line_start":967,"line_end":967,"column_start":13,"column_end":60}},{"value":"/ Receive attempts will continue to succeed as long as there are items","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":183179,"byte_end":183251,"line_start":968,"line_end":968,"column_start":13,"column_end":85}},{"value":"/ stored inside the channel. Further attempts will return `None`.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":183264,"byte_end":183331,"line_start":969,"line_end":969,"column_start":13,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1353},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":183692,"byte_end":183703,"line_start":978,"line_end":978,"column_start":20,"column_end":31},"name":"into_stream","qualname":"<GenericReceiver<MutexType, T, A>>::into_stream","value":"pub fn into_stream(Self) -> SharedStream<MutexType, T, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream that will receive values from this channel.","sig":null,"attributes":[{"value":"/ Returns a stream that will receive values from this channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":183451,"byte_end":183515,"line_start":974,"line_end":974,"column_start":13,"column_end":77}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":183528,"byte_end":183531,"line_start":975,"line_end":975,"column_start":13,"column_end":16}},{"value":"/ This stream does not yield `None` when the channel is empty,","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":183544,"byte_end":183608,"line_start":976,"line_end":976,"column_start":13,"column_end":77}},{"value":"/ instead it yields `None` when it is terminated.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":183621,"byte_end":183672,"line_start":977,"line_end":977,"column_start":13,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":2696},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":184197,"byte_end":184209,"line_start":992,"line_end":992,"column_start":20,"column_end":32},"name":"SharedStream","qualname":"::channel::mpmc::if_alloc::shared::SharedStream","value":"SharedStream {  }","parent":null,"children":[{"krate":0,"index":2700},{"krate":0,"index":2701},{"krate":0,"index":2702}],"decl_id":null,"docs":" A stream that receives from channel using a `GenericReceiver`.","sig":null,"attributes":[{"value":"/ A stream that receives from channel using a `GenericReceiver`.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":183939,"byte_end":184005,"line_start":987,"line_end":987,"column_start":9,"column_end":75}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":184014,"byte_end":184017,"line_start":988,"line_end":988,"column_start":9,"column_end":12}},{"value":"/ Not driving the `SharedStream` to completion after it has been polled","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":184026,"byte_end":184099,"line_start":989,"line_end":989,"column_start":9,"column_end":82}},{"value":"/ might lead to lost wakeup notifications.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":184108,"byte_end":184152,"line_start":990,"line_end":990,"column_start":9,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1358},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":184962,"byte_end":184967,"line_start":1012,"line_end":1012,"column_start":20,"column_end":25},"name":"close","qualname":"<SharedStream<MutexType, T, A>>::close","value":"pub fn close(&Self) -> CloseStatus","parent":null,"children":[],"decl_id":null,"docs":" Closes the channel.\n All pending and future send attempts will fail.\n Receive attempts will continue to succeed as long as there are items\n stored inside the channel. Further attempts will fail.\n","sig":null,"attributes":[{"value":"/ Closes the channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":184699,"byte_end":184722,"line_start":1008,"line_end":1008,"column_start":13,"column_end":36}},{"value":"/ All pending and future send attempts will fail.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":184735,"byte_end":184786,"line_start":1009,"line_end":1009,"column_start":13,"column_end":64}},{"value":"/ Receive attempts will continue to succeed as long as there are items","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":184799,"byte_end":184871,"line_start":1010,"line_end":1010,"column_start":13,"column_end":85}},{"value":"/ stored inside the channel. Further attempts will fail.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":184884,"byte_end":184942,"line_start":1011,"line_end":1011,"column_start":13,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":1376},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":187486,"byte_end":187492,"line_start":1086,"line_end":1086,"column_start":22,"column_end":28},"name":"Sender","qualname":"::channel::mpmc::if_alloc::shared::if_std::Sender","value":"GenericSender<parking_lot::RawMutex, T, GrowingHeapBuf<T>>","parent":null,"children":[],"decl_id":null,"docs":" A [`GenericSender`] implementation backed by [`parking_lot`].","sig":null,"attributes":[{"value":"/ A [`GenericSender`] implementation backed by [`parking_lot`].","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":187129,"byte_end":187194,"line_start":1080,"line_end":1080,"column_start":13,"column_end":78}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":187207,"byte_end":187210,"line_start":1081,"line_end":1081,"column_start":13,"column_end":16}},{"value":"/ Uses a `GrowingHeapBuf` whose capacity grows dynamically up to","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":187223,"byte_end":187289,"line_start":1082,"line_end":1082,"column_start":13,"column_end":79}},{"value":"/ the given limit. Refer to [`GrowingHeapBuf`] for more information.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":187302,"byte_end":187372,"line_start":1083,"line_end":1083,"column_start":13,"column_end":83}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":187385,"byte_end":187388,"line_start":1084,"line_end":1084,"column_start":13,"column_end":16}},{"value":"/ [`GrowingHeapBuf`]: ../../buffer/struct.GrowingHeapBuf.html","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":187401,"byte_end":187464,"line_start":1085,"line_end":1085,"column_start":13,"column_end":76}}]},{"kind":"Type","id":{"krate":0,"index":1378},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":187945,"byte_end":187953,"line_start":1094,"line_end":1094,"column_start":22,"column_end":30},"name":"Receiver","qualname":"::channel::mpmc::if_alloc::shared::if_std::Receiver","value":"GenericReceiver<parking_lot::RawMutex, T, GrowingHeapBuf<T>>","parent":null,"children":[],"decl_id":null,"docs":" A [`GenericReceiver`] implementation backed by [`parking_lot`].","sig":null,"attributes":[{"value":"/ A [`GenericReceiver`] implementation backed by [`parking_lot`].","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":187586,"byte_end":187653,"line_start":1088,"line_end":1088,"column_start":13,"column_end":80}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":187666,"byte_end":187669,"line_start":1089,"line_end":1089,"column_start":13,"column_end":16}},{"value":"/ Uses a `GrowingHeapBuf` whose capacity grows dynamically up to","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":187682,"byte_end":187748,"line_start":1090,"line_end":1090,"column_start":13,"column_end":79}},{"value":"/ the given limit. Refer to [`GrowingHeapBuf`] for more information.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":187761,"byte_end":187831,"line_start":1091,"line_end":1091,"column_start":13,"column_end":83}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":187844,"byte_end":187847,"line_start":1092,"line_end":1092,"column_start":13,"column_end":16}},{"value":"/ [`GrowingHeapBuf`]: ../../buffer/struct.GrowingHeapBuf.html","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":187860,"byte_end":187923,"line_start":1093,"line_end":1093,"column_start":13,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":1380},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":188606,"byte_end":188613,"line_start":1108,"line_end":1108,"column_start":20,"column_end":27},"name":"channel","qualname":"::channel::mpmc::if_alloc::shared::if_std::channel","value":"pub fn channel<T>(usize) -> (Sender<T>, Receiver<T>) where T: Send","parent":null,"children":[],"decl_id":null,"docs":" Creates a new channel with the given buffering capacity","sig":null,"attributes":[{"value":"/ Creates a new channel with the given buffering capacity","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":188050,"byte_end":188109,"line_start":1097,"line_end":1097,"column_start":13,"column_end":72}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":188122,"byte_end":188125,"line_start":1098,"line_end":1098,"column_start":13,"column_end":16}},{"value":"/ Uses a `GrowingHeapBuf` whose capacity grows dynamically up to","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":188138,"byte_end":188204,"line_start":1099,"line_end":1099,"column_start":13,"column_end":79}},{"value":"/ the given limit. Refer to [`generic_channel`] and [`GrowingHeapBuf`] for more information.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":188217,"byte_end":188311,"line_start":1100,"line_end":1100,"column_start":13,"column_end":107}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":188324,"byte_end":188327,"line_start":1101,"line_end":1101,"column_start":13,"column_end":16}},{"value":"/ [`GrowingHeapBuf`]: ../../buffer/struct.GrowingHeapBuf.html","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":188340,"byte_end":188403,"line_start":1102,"line_end":1102,"column_start":13,"column_end":76}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":188416,"byte_end":188419,"line_start":1103,"line_end":1103,"column_start":13,"column_end":16}},{"value":"/ ```","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":188432,"byte_end":188439,"line_start":1104,"line_end":1104,"column_start":13,"column_end":20}},{"value":"/ # use futures_intrusive::channel::shared::channel;","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":188452,"byte_end":188506,"line_start":1105,"line_end":1105,"column_start":13,"column_end":67}},{"value":"/ let (sender, receiver) = channel::<i32>(4);","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":188519,"byte_end":188566,"line_start":1106,"line_end":1106,"column_start":13,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":188579,"byte_end":188586,"line_start":1107,"line_end":1107,"column_start":13,"column_end":20}}]},{"kind":"Type","id":{"krate":0,"index":1382},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":188960,"byte_end":188976,"line_start":1117,"line_end":1117,"column_start":22,"column_end":38},"name":"UnbufferedSender","qualname":"::channel::mpmc::if_alloc::shared::if_std::UnbufferedSender","value":"GenericSender<parking_lot::RawMutex, T, GrowingHeapBuf<T>>","parent":null,"children":[],"decl_id":null,"docs":" A [`GenericSender`] implementation backed by [`parking_lot`].\n","sig":null,"attributes":[{"value":"/ A [`GenericSender`] implementation backed by [`parking_lot`].","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":188873,"byte_end":188938,"line_start":1116,"line_end":1116,"column_start":13,"column_end":78}}]},{"kind":"Type","id":{"krate":0,"index":1384},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":189159,"byte_end":189177,"line_start":1120,"line_end":1120,"column_start":22,"column_end":40},"name":"UnbufferedReceiver","qualname":"::channel::mpmc::if_alloc::shared::if_std::UnbufferedReceiver","value":"GenericReceiver<parking_lot::RawMutex, T, GrowingHeapBuf<T>>","parent":null,"children":[],"decl_id":null,"docs":" A [`GenericReceiver`] implementation backed by [`parking_lot`].\n","sig":null,"attributes":[{"value":"/ A [`GenericReceiver`] implementation backed by [`parking_lot`].","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":189070,"byte_end":189137,"line_start":1119,"line_end":1119,"column_start":13,"column_end":80}}]},{"kind":"Function","id":{"krate":0,"index":1386},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":189405,"byte_end":189423,"line_start":1126,"line_end":1126,"column_start":20,"column_end":38},"name":"unbuffered_channel","qualname":"::channel::mpmc::if_alloc::shared::if_std::unbuffered_channel","value":"pub fn unbuffered_channel<T>() -> (Sender<T>, Receiver<T>) where T: Send","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unbuffered channel.","sig":null,"attributes":[{"value":"/ Creates a new unbuffered channel.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":189274,"byte_end":189311,"line_start":1123,"line_end":1123,"column_start":13,"column_end":50}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":189324,"byte_end":189327,"line_start":1124,"line_end":1124,"column_start":13,"column_end":16}},{"value":"/ Refer to [`generic_channel`] for details.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":189340,"byte_end":189385,"line_start":1125,"line_end":1125,"column_start":13,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":1411},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mod.rs","byte_start":63675,"byte_end":63681,"line_start":59,"line_end":59,"column_start":13,"column_end":19},"name":"shared","qualname":"::channel::if_alloc::shared","value":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mod.rs","parent":null,"children":[{"krate":0,"index":1412},{"krate":0,"index":1413},{"krate":0,"index":1414},{"krate":0,"index":1415},{"krate":0,"index":1416}],"decl_id":null,"docs":" Channel implementations where Sender and Receiver sides are cloneable\n and owned.\n The Futures produced by channels in this module don't require a lifetime\n parameter.\n","sig":null,"attributes":[{"value":"/ Channel implementations where Sender and Receiver sides are cloneable","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mod.rs","byte_start":63470,"byte_end":63543,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ and owned.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mod.rs","byte_start":63548,"byte_end":63562,"line_start":56,"line_end":56,"column_start":5,"column_end":19}},{"value":"/ The Futures produced by channels in this module don't require a lifetime","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mod.rs","byte_start":63567,"byte_end":63643,"line_start":57,"line_end":57,"column_start":5,"column_end":81}},{"value":"/ parameter.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mod.rs","byte_start":63648,"byte_end":63662,"line_start":58,"line_end":58,"column_start":5,"column_end":19}}]},{"kind":"Mod","id":{"krate":0,"index":1418},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":1419},{"krate":0,"index":1531},{"krate":0,"index":1532},{"krate":0,"index":1535},{"krate":0,"index":1538},{"krate":0,"index":1541},{"krate":0,"index":1544},{"krate":0,"index":1545},{"krate":0,"index":1548},{"krate":0,"index":1551},{"krate":0,"index":1720},{"krate":0,"index":1721},{"krate":0,"index":1724},{"krate":0,"index":1727},{"krate":0,"index":1730},{"krate":0,"index":1733},{"krate":0,"index":1736},{"krate":0,"index":1739},{"krate":0,"index":1740},{"krate":0,"index":1743},{"krate":0,"index":1746},{"krate":0,"index":1749},{"krate":0,"index":1946},{"krate":0,"index":1947},{"krate":0,"index":1950},{"krate":0,"index":1953},{"krate":0,"index":1956},{"krate":0,"index":1959},{"krate":0,"index":1962},{"krate":0,"index":1965},{"krate":0,"index":1966},{"krate":0,"index":1969},{"krate":0,"index":1972},{"krate":0,"index":1975},{"krate":0,"index":1976},{"krate":0,"index":1979},{"krate":0,"index":1982},{"krate":0,"index":1985},{"krate":0,"index":1988},{"krate":0,"index":1991}],"decl_id":null,"docs":" Asynchronous synchronization primitives based on intrusive collections.","sig":null,"attributes":[{"value":"/ Asynchronous synchronization primitives based on intrusive collections.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mod.rs","byte_start":189788,"byte_end":189863,"line_start":1,"line_end":1,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mod.rs","byte_start":189864,"byte_end":189867,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides various primitives for synchronizing concurrently","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mod.rs","byte_start":189868,"byte_end":189942,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/ executing futures.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mod.rs","byte_start":189943,"byte_end":189965,"line_start":4,"line_end":4,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":1478},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/manual_reset_event.rs","byte_start":196213,"byte_end":196236,"line_start":151,"line_end":151,"column_start":12,"column_end":35},"name":"GenericManualResetEvent","qualname":"::sync::manual_reset_event::GenericManualResetEvent","value":"GenericManualResetEvent {  }","parent":null,"children":[{"krate":0,"index":1480}],"decl_id":null,"docs":" A synchronization primitive which can be either in the set or reset state.","sig":null,"attributes":[{"value":"/ A synchronization primitive which can be either in the set or reset state.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/manual_reset_event.rs","byte_start":195977,"byte_end":196055,"line_start":147,"line_end":147,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/manual_reset_event.rs","byte_start":196056,"byte_end":196059,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ Tasks can wait for the event to get set by obtaining a Future via `wait`.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/manual_reset_event.rs","byte_start":196060,"byte_end":196137,"line_start":149,"line_end":149,"column_start":1,"column_end":78}},{"value":"/ This Future will get fulfilled when the event has been set.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/manual_reset_event.rs","byte_start":196138,"byte_end":196201,"line_start":150,"line_end":150,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1490},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/manual_reset_event.rs","byte_start":196988,"byte_end":196991,"line_start":176,"line_end":176,"column_start":12,"column_end":15},"name":"new","qualname":"<GenericManualResetEvent<MutexType>>::new","value":"pub fn new(bool) -> GenericManualResetEvent<MutexType>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new ManualResetEvent in the given state\n","sig":null,"attributes":[{"value":"/ Creates a new ManualResetEvent in the given state","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/manual_reset_event.rs","byte_start":196923,"byte_end":196976,"line_start":175,"line_end":175,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1491},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/manual_reset_event.rs","byte_start":197280,"byte_end":197283,"line_start":185,"line_end":185,"column_start":12,"column_end":15},"name":"set","qualname":"<GenericManualResetEvent<MutexType>>::set","value":"pub fn set(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Sets the event.","sig":null,"attributes":[{"value":"/ Sets the event.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/manual_reset_event.rs","byte_start":197182,"byte_end":197201,"line_start":182,"line_end":182,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/manual_reset_event.rs","byte_start":197206,"byte_end":197209,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ Setting the event will notify all pending waiters.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/manual_reset_event.rs","byte_start":197214,"byte_end":197268,"line_start":184,"line_end":184,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1492},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/manual_reset_event.rs","byte_start":197369,"byte_end":197374,"line_start":190,"line_end":190,"column_start":12,"column_end":17},"name":"reset","qualname":"<GenericManualResetEvent<MutexType>>::reset","value":"pub fn reset(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Resets the event.\n","sig":null,"attributes":[{"value":"/ Resets the event.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/manual_reset_event.rs","byte_start":197336,"byte_end":197357,"line_start":189,"line_end":189,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1493},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/manual_reset_event.rs","byte_start":197477,"byte_end":197483,"line_start":195,"line_end":195,"column_start":12,"column_end":18},"name":"is_set","qualname":"<GenericManualResetEvent<MutexType>>::is_set","value":"pub fn is_set(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the event is set\n","sig":null,"attributes":[{"value":"/ Returns whether the event is set","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/manual_reset_event.rs","byte_start":197429,"byte_end":197465,"line_start":194,"line_end":194,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1494},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/manual_reset_event.rs","byte_start":197622,"byte_end":197626,"line_start":200,"line_end":200,"column_start":12,"column_end":16},"name":"wait","qualname":"<GenericManualResetEvent<MutexType>>::wait","value":"pub fn wait(&Self) -> GenericWaitForEventFuture<, MutexType>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that gets fulfilled when the event is set.\n","sig":null,"attributes":[{"value":"/ Returns a future that gets fulfilled when the event is set.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/manual_reset_event.rs","byte_start":197547,"byte_end":197610,"line_start":199,"line_end":199,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":1497},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/manual_reset_event.rs","byte_start":198292,"byte_end":198317,"line_start":222,"line_end":222,"column_start":12,"column_end":37},"name":"GenericWaitForEventFuture","qualname":"::sync::manual_reset_event::GenericWaitForEventFuture","value":"GenericWaitForEventFuture {  }","parent":null,"children":[{"krate":0,"index":1500},{"krate":0,"index":1501}],"decl_id":null,"docs":" A Future that is resolved once the corresponding ManualResetEvent has been set\n","sig":null,"attributes":[{"value":"/ A Future that is resolved once the corresponding ManualResetEvent has been set","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/manual_reset_event.rs","byte_start":198149,"byte_end":198231,"line_start":220,"line_end":220,"column_start":1,"column_end":83}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/manual_reset_event.rs","byte_start":198232,"byte_end":198280,"line_start":221,"line_end":221,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1522},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/manual_reset_event.rs","byte_start":200858,"byte_end":200879,"line_start":299,"line_end":299,"column_start":10,"column_end":31},"name":"LocalManualResetEvent","qualname":"::sync::manual_reset_event::LocalManualResetEvent","value":"GenericManualResetEvent<NoopLock>","parent":null,"children":[],"decl_id":null,"docs":" A [`GenericManualResetEvent`] which is not thread-safe.\n","sig":null,"attributes":[{"value":"/ A [`GenericManualResetEvent`] which is not thread-safe.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/manual_reset_event.rs","byte_start":200789,"byte_end":200848,"line_start":298,"line_end":298,"column_start":1,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":1523},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/manual_reset_event.rs","byte_start":200993,"byte_end":201016,"line_start":301,"line_end":301,"column_start":10,"column_end":33},"name":"LocalWaitForEventFuture","qualname":"::sync::manual_reset_event::LocalWaitForEventFuture","value":"GenericWaitForEventFuture","parent":null,"children":[],"decl_id":null,"docs":" A [`GenericWaitForEventFuture`] for [`LocalManualResetEvent`].\n","sig":null,"attributes":[{"value":"/ A [`GenericWaitForEventFuture`] for [`LocalManualResetEvent`].","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/manual_reset_event.rs","byte_start":200917,"byte_end":200983,"line_start":300,"line_end":300,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":1527},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/manual_reset_event.rs","byte_start":201279,"byte_end":201295,"line_start":310,"line_end":310,"column_start":14,"column_end":30},"name":"ManualResetEvent","qualname":"::sync::manual_reset_event::if_std::ManualResetEvent","value":"GenericManualResetEvent<parking_lot::RawMutex>","parent":null,"children":[],"decl_id":null,"docs":" A [`GenericManualResetEvent`] implementation backed by [`parking_lot`].\n","sig":null,"attributes":[{"value":"/ A [`GenericManualResetEvent`] implementation backed by [`parking_lot`].","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/manual_reset_event.rs","byte_start":201190,"byte_end":201265,"line_start":309,"line_end":309,"column_start":5,"column_end":80}}]},{"kind":"Type","id":{"krate":0,"index":1528},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/manual_reset_event.rs","byte_start":201425,"byte_end":201443,"line_start":312,"line_end":312,"column_start":14,"column_end":32},"name":"WaitForEventFuture","qualname":"::sync::manual_reset_event::if_std::WaitForEventFuture","value":"GenericWaitForEventFuture","parent":null,"children":[],"decl_id":null,"docs":" A [`GenericWaitForEventFuture`] for [`ManualResetEvent`].\n","sig":null,"attributes":[{"value":"/ A [`GenericWaitForEventFuture`] for [`ManualResetEvent`].","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/manual_reset_event.rs","byte_start":201350,"byte_end":201411,"line_start":311,"line_end":311,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1623},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":212038,"byte_end":212055,"line_start":277,"line_end":277,"column_start":12,"column_end":29},"name":"GenericMutexGuard","qualname":"::sync::mutex::GenericMutexGuard","value":"GenericMutexGuard {  }","parent":null,"children":[{"krate":0,"index":1627}],"decl_id":null,"docs":" An RAII guard returned by the `lock` and `try_lock` methods.\n When this structure is dropped (falls out of scope), the lock will be\n unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `lock` and `try_lock` methods.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":211874,"byte_end":211938,"line_start":274,"line_end":274,"column_start":1,"column_end":65}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":211939,"byte_end":212012,"line_start":275,"line_end":275,"column_start":1,"column_end":74}},{"value":"/ unlocked.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":212013,"byte_end":212026,"line_start":276,"line_end":276,"column_start":1,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1648},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":213393,"byte_end":213415,"line_start":322,"line_end":322,"column_start":12,"column_end":34},"name":"GenericMutexLockFuture","qualname":"::sync::mutex::GenericMutexLockFuture","value":"GenericMutexLockFuture {  }","parent":null,"children":[{"krate":0,"index":1652},{"krate":0,"index":1653}],"decl_id":null,"docs":" A future which resolves when the target mutex has been successfully acquired.\n","sig":null,"attributes":[{"value":"/ A future which resolves when the target mutex has been successfully acquired.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":213251,"byte_end":213332,"line_start":320,"line_end":320,"column_start":1,"column_end":82}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":213333,"byte_end":213381,"line_start":321,"line_end":321,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1679},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":216173,"byte_end":216185,"line_start":405,"line_end":405,"column_start":12,"column_end":24},"name":"GenericMutex","qualname":"::sync::mutex::GenericMutex","value":"GenericMutex {  }","parent":null,"children":[{"krate":0,"index":1682},{"krate":0,"index":1683}],"decl_id":null,"docs":" A futures-aware mutex.\n","sig":null,"attributes":[{"value":"/ A futures-aware mutex.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":216135,"byte_end":216161,"line_start":404,"line_end":404,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1697},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":217499,"byte_end":217502,"line_start":441,"line_end":441,"column_start":12,"column_end":15},"name":"new","qualname":"<GenericMutex<MutexType, T>>::new","value":"pub fn new(T, bool) -> GenericMutex<MutexType, T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new futures-aware mutex.","sig":null,"attributes":[{"value":"/ Creates a new futures-aware mutex.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":216997,"byte_end":217035,"line_start":433,"line_end":433,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":217040,"byte_end":217043,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ `is_fair` defines whether the `Mutex` should behave be fair regarding the","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":217048,"byte_end":217125,"line_start":435,"line_end":435,"column_start":5,"column_end":82}},{"value":"/ order of waiters. A fair `Mutex` will only allow the first waiter which","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":217130,"byte_end":217205,"line_start":436,"line_end":436,"column_start":5,"column_end":80}},{"value":"/ tried to lock but failed to lock the `Mutex` once it's available again.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":217210,"byte_end":217285,"line_start":437,"line_end":437,"column_start":5,"column_end":80}},{"value":"/ Other waiters must wait until either this locking attempt completes, and","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":217290,"byte_end":217366,"line_start":438,"line_end":438,"column_start":5,"column_end":81}},{"value":"/ the `Mutex` gets unlocked again, or until the `MutexLockFuture` which","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":217371,"byte_end":217444,"line_start":439,"line_end":439,"column_start":5,"column_end":78}},{"value":"/ tried to gain the lock is dropped.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":217449,"byte_end":217487,"line_start":440,"line_end":440,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1698},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":217894,"byte_end":217898,"line_start":452,"line_end":452,"column_start":12,"column_end":16},"name":"lock","qualname":"<GenericMutex<MutexType, T>>::lock","value":"pub fn lock(&Self) -> GenericMutexLockFuture<, MutexType, T>","parent":null,"children":[],"decl_id":null,"docs":" Acquire the mutex asynchronously.","sig":null,"attributes":[{"value":"/ Acquire the mutex asynchronously.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":217727,"byte_end":217764,"line_start":448,"line_end":448,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":217769,"byte_end":217772,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ This method returns a future that will resolve once the mutex has been","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":217777,"byte_end":217851,"line_start":450,"line_end":450,"column_start":5,"column_end":79}},{"value":"/ successfully acquired.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":217856,"byte_end":217882,"line_start":451,"line_end":451,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1699},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":218355,"byte_end":218363,"line_start":465,"line_end":465,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<GenericMutex<MutexType, T>>::try_lock","value":"pub fn try_lock(&Self) -> Option<GenericMutexGuard<, MutexType, T>>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire the mutex","sig":null,"attributes":[{"value":"/ Tries to acquire the mutex","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":218115,"byte_end":218145,"line_start":459,"line_end":459,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":218150,"byte_end":218153,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ If acquiring the mutex is successful, a [`GenericMutexGuard`]","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":218158,"byte_end":218223,"line_start":461,"line_end":461,"column_start":5,"column_end":70}},{"value":"/ will be returned, which allows to access the contained data.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":218228,"byte_end":218292,"line_start":462,"line_end":462,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":218297,"byte_end":218300,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ Otherwise `None` will be returned.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":218305,"byte_end":218343,"line_start":464,"line_end":464,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1700},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":218626,"byte_end":218635,"line_start":474,"line_end":474,"column_start":12,"column_end":21},"name":"is_locked","qualname":"<GenericMutex<MutexType, T>>::is_locked","value":"pub fn is_locked(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the mutex is locked.\n","sig":null,"attributes":[{"value":"/ Returns whether the mutex is locked.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":218574,"byte_end":218614,"line_start":473,"line_end":473,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1701},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":218810,"byte_end":218820,"line_start":482,"line_end":482,"column_start":10,"column_end":20},"name":"LocalMutex","qualname":"::sync::mutex::LocalMutex","value":"GenericMutex<NoopLock, T>","parent":null,"children":[],"decl_id":null,"docs":" A [`GenericMutex`] which is not thread-safe.\n","sig":null,"attributes":[{"value":"/ A [`GenericMutex`] which is not thread-safe.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":218752,"byte_end":218800,"line_start":481,"line_end":481,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1703},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":218910,"byte_end":218925,"line_start":484,"line_end":484,"column_start":10,"column_end":25},"name":"LocalMutexGuard","qualname":"::sync::mutex::LocalMutexGuard","value":"GenericMutexGuard","parent":null,"children":[],"decl_id":null,"docs":" A [`GenericMutexGuard`] for [`LocalMutex`].\n","sig":null,"attributes":[{"value":"/ A [`GenericMutexGuard`] for [`LocalMutex`].","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":218853,"byte_end":218900,"line_start":483,"line_end":483,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":1706},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":219033,"byte_end":219053,"line_start":486,"line_end":486,"column_start":10,"column_end":30},"name":"LocalMutexLockFuture","qualname":"::sync::mutex::LocalMutexLockFuture","value":"GenericMutexLockFuture","parent":null,"children":[],"decl_id":null,"docs":" A [`GenericMutexLockFuture`] for [`LocalMutex`].\n","sig":null,"attributes":[{"value":"/ A [`GenericMutexLockFuture`] for [`LocalMutex`].","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":218971,"byte_end":219023,"line_start":485,"line_end":485,"column_start":1,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":1711},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":219293,"byte_end":219298,"line_start":495,"line_end":495,"column_start":14,"column_end":19},"name":"Mutex","qualname":"::sync::mutex::if_std::Mutex","value":"GenericMutex<parking_lot::RawMutex, T>","parent":null,"children":[],"decl_id":null,"docs":" A [`GenericMutex`] backed by [`parking_lot`].\n","sig":null,"attributes":[{"value":"/ A [`GenericMutex`] backed by [`parking_lot`].","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":219230,"byte_end":219279,"line_start":494,"line_end":494,"column_start":5,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":1713},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":219404,"byte_end":219414,"line_start":497,"line_end":497,"column_start":14,"column_end":24},"name":"MutexGuard","qualname":"::sync::mutex::if_std::MutexGuard","value":"GenericMutexGuard","parent":null,"children":[],"decl_id":null,"docs":" A [`GenericMutexGuard`] for [`Mutex`].\n","sig":null,"attributes":[{"value":"/ A [`GenericMutexGuard`] for [`Mutex`].","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":219348,"byte_end":219390,"line_start":496,"line_end":496,"column_start":5,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":1716},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":219546,"byte_end":219561,"line_start":500,"line_end":500,"column_start":14,"column_end":29},"name":"MutexLockFuture","qualname":"::sync::mutex::if_std::MutexLockFuture","value":"GenericMutexLockFuture","parent":null,"children":[],"decl_id":null,"docs":" A [`GenericMutexLockFuture`] for [`Mutex`].\n","sig":null,"attributes":[{"value":"/ A [`GenericMutexLockFuture`] for [`Mutex`].","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":219485,"byte_end":219532,"line_start":499,"line_end":499,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":1811},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":231831,"byte_end":231855,"line_start":298,"line_end":298,"column_start":12,"column_end":36},"name":"GenericSemaphoreReleaser","qualname":"::sync::semaphore::GenericSemaphoreReleaser","value":"GenericSemaphoreReleaser {  }","parent":null,"children":[{"krate":0,"index":1814},{"krate":0,"index":1815}],"decl_id":null,"docs":" An RAII guard returned by the `acquire` and `try_acquire` methods.","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `acquire` and `try_acquire` methods.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":231580,"byte_end":231650,"line_start":293,"line_end":293,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":231651,"byte_end":231654,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/ When this structure is dropped (falls out of scope),","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":231655,"byte_end":231711,"line_start":295,"line_end":295,"column_start":1,"column_end":57}},{"value":"/ the amount of permits that was used in the `acquire()` call will be released","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":231712,"byte_end":231792,"line_start":296,"line_end":296,"column_start":1,"column_end":81}},{"value":"/ back to the Semaphore.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":231793,"byte_end":231819,"line_start":297,"line_end":297,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1821},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":232722,"byte_end":232728,"line_start":320,"line_end":320,"column_start":12,"column_end":18},"name":"disarm","qualname":"<GenericSemaphoreReleaser>::disarm","value":"pub fn disarm(&mut Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Prevents the SemaphoreReleaser from automatically releasing the permits\n when it gets dropped.\n This is helpful if the permits must be acquired for a longer lifetime\n than the one of the SemaphoreReleaser.\n If this method is used it is important to release the acquired permits\n manually back to the Semaphore.\n","sig":null,"attributes":[{"value":"/ Prevents the SemaphoreReleaser from automatically releasing the permits","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":232361,"byte_end":232436,"line_start":314,"line_end":314,"column_start":5,"column_end":80}},{"value":"/ when it gets dropped.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":232441,"byte_end":232466,"line_start":315,"line_end":315,"column_start":5,"column_end":30}},{"value":"/ This is helpful if the permits must be acquired for a longer lifetime","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":232471,"byte_end":232544,"line_start":316,"line_end":316,"column_start":5,"column_end":78}},{"value":"/ than the one of the SemaphoreReleaser.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":232549,"byte_end":232591,"line_start":317,"line_end":317,"column_start":5,"column_end":47}},{"value":"/ If this method is used it is important to release the acquired permits","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":232596,"byte_end":232670,"line_start":318,"line_end":318,"column_start":5,"column_end":79}},{"value":"/ manually back to the Semaphore.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":232675,"byte_end":232710,"line_start":319,"line_end":319,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1825},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":233267,"byte_end":233296,"line_start":338,"line_end":338,"column_start":12,"column_end":41},"name":"GenericSemaphoreAcquireFuture","qualname":"::sync::semaphore::GenericSemaphoreAcquireFuture","value":"GenericSemaphoreAcquireFuture {  }","parent":null,"children":[{"krate":0,"index":1828},{"krate":0,"index":1829},{"krate":0,"index":1830}],"decl_id":null,"docs":" A future which resolves when the target semaphore has been successfully acquired.\n","sig":null,"attributes":[{"value":"/ A future which resolves when the target semaphore has been successfully acquired.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":233121,"byte_end":233206,"line_start":336,"line_end":336,"column_start":1,"column_end":86}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":233207,"byte_end":233255,"line_start":337,"line_end":337,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1851},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":236976,"byte_end":236992,"line_start":433,"line_end":433,"column_start":12,"column_end":28},"name":"GenericSemaphore","qualname":"::sync::semaphore::GenericSemaphore","value":"GenericSemaphore {  }","parent":null,"children":[{"krate":0,"index":1853}],"decl_id":null,"docs":" A futures-aware semaphore.\n","sig":null,"attributes":[{"value":"/ A futures-aware semaphore.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":236934,"byte_end":236964,"line_start":432,"line_end":432,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1863},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":238840,"byte_end":238843,"line_start":470,"line_end":470,"column_start":12,"column_end":15},"name":"new","qualname":"<GenericSemaphore<MutexType>>::new","value":"pub fn new(bool, usize) -> GenericSemaphore<MutexType>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new futures-aware semaphore.","sig":null,"attributes":[{"value":"/ Creates a new futures-aware semaphore.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":237734,"byte_end":237776,"line_start":452,"line_end":452,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":237781,"byte_end":237784,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ `is_fair` defines whether the `Semaphore` should behave be fair regarding the","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":237789,"byte_end":237870,"line_start":454,"line_end":454,"column_start":5,"column_end":86}},{"value":"/ order of waiters. A fair `Semaphore` will only allow the oldest waiter on","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":237875,"byte_end":237952,"line_start":455,"line_end":455,"column_start":5,"column_end":82}},{"value":"/ a `Semaphore` to retry acquiring it once it's available again.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":237957,"byte_end":238023,"line_start":456,"line_end":456,"column_start":5,"column_end":71}},{"value":"/ Other waiters must wait until either this acquire attempt completes, and","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":238028,"byte_end":238104,"line_start":457,"line_end":457,"column_start":5,"column_end":81}},{"value":"/ the `Semaphore` has enough permits after that, or until the","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":238109,"byte_end":238172,"line_start":458,"line_end":458,"column_start":5,"column_end":68}},{"value":"/ [`SemaphoreAcquireFuture`] which tried to acquire the `Semaphore` is dropped.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":238177,"byte_end":238258,"line_start":459,"line_end":459,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":238263,"byte_end":238266,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ If the `Semaphore` isn't fair, waiters that wait for a high amount of","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":238271,"byte_end":238344,"line_start":461,"line_end":461,"column_start":5,"column_end":78}},{"value":"/ permits might never succeed since the permits might be stolen in between","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":238349,"byte_end":238425,"line_start":462,"line_end":462,"column_start":5,"column_end":81}},{"value":"/ by other waiters. Therefore use-cases which make use of very different","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":238430,"byte_end":238504,"line_start":463,"line_end":463,"column_start":5,"column_end":79}},{"value":"/ amount of permits per acquire should use fair semaphores.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":238509,"byte_end":238570,"line_start":464,"line_end":464,"column_start":5,"column_end":66}},{"value":"/ For use-cases where each `acquire()` tries to acquire the same amount of","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":238575,"byte_end":238651,"line_start":465,"line_end":465,"column_start":5,"column_end":81}},{"value":"/ permits an unfair `Semaphore` might provide throughput advantages.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":238656,"byte_end":238726,"line_start":466,"line_end":466,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":238731,"byte_end":238734,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ `permits` is the amount of permits that a semaphore should hold when","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":238739,"byte_end":238811,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ created.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":238816,"byte_end":238828,"line_start":469,"line_end":469,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1864},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":239395,"byte_end":239402,"line_start":482,"line_end":482,"column_start":12,"column_end":19},"name":"acquire","qualname":"<GenericSemaphore<MutexType>>::acquire","value":"pub fn acquire(&Self, usize) -> GenericSemaphoreAcquireFuture<, MutexType>","parent":null,"children":[],"decl_id":null,"docs":" Acquire a certain amount of permits on a semaphore asynchronously.","sig":null,"attributes":[{"value":"/ Acquire a certain amount of permits on a semaphore asynchronously.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":239046,"byte_end":239116,"line_start":476,"line_end":476,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":239121,"byte_end":239124,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ This method returns a future that will resolve once the given amount of","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":239129,"byte_end":239204,"line_start":478,"line_end":478,"column_start":5,"column_end":80}},{"value":"/ permits have been acquired.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":239209,"byte_end":239240,"line_start":479,"line_end":479,"column_start":5,"column_end":36}},{"value":"/ The Future will resolve to a [`GenericSemaphoreReleaser`], which will","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":239245,"byte_end":239318,"line_start":480,"line_end":480,"column_start":5,"column_end":78}},{"value":"/ release all acquired permits automatically when dropped.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":239323,"byte_end":239383,"line_start":481,"line_end":481,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1865},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":240031,"byte_end":240042,"line_start":500,"line_end":500,"column_start":12,"column_end":23},"name":"try_acquire","qualname":"<GenericSemaphore<MutexType>>::try_acquire","value":"pub fn try_acquire(&Self, usize)\n-> Option<GenericSemaphoreReleaser<, MutexType>>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a certain amount of permits on a semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire a certain amount of permits on a semaphore.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":239715,"byte_end":239779,"line_start":493,"line_end":493,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":239784,"byte_end":239787,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ If acquiring the permits is successful, a [`GenericSemaphoreReleaser`]","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":239792,"byte_end":239866,"line_start":495,"line_end":495,"column_start":5,"column_end":79}},{"value":"/ will be returned, which will release all acquired permits automatically","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":239871,"byte_end":239946,"line_start":496,"line_end":496,"column_start":5,"column_end":80}},{"value":"/ when dropped.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":239951,"byte_end":239968,"line_start":497,"line_end":497,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":239973,"byte_end":239976,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ Otherwise `None` will be returned.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":239981,"byte_end":240019,"line_start":499,"line_end":499,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1866},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":240938,"byte_end":240945,"line_start":524,"line_end":524,"column_start":12,"column_end":19},"name":"release","qualname":"<GenericSemaphore<MutexType>>::release","value":"pub fn release(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Releases the given amount of permits back to the semaphore.","sig":null,"attributes":[{"value":"/ Releases the given amount of permits back to the semaphore.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":240389,"byte_end":240452,"line_start":514,"line_end":514,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":240457,"byte_end":240460,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ This method should in most cases not be used, since the","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":240465,"byte_end":240524,"line_start":516,"line_end":516,"column_start":5,"column_end":64}},{"value":"/ [`GenericSemaphoreReleaser`] which is obtained when acquiring a Semaphore","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":240529,"byte_end":240606,"line_start":517,"line_end":517,"column_start":5,"column_end":82}},{"value":"/ will automatically release the obtained permits again.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":240611,"byte_end":240669,"line_start":518,"line_end":518,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":240674,"byte_end":240677,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ Therefore this method should only be used if the automatic release was","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":240682,"byte_end":240756,"line_start":520,"line_end":520,"column_start":5,"column_end":79}},{"value":"/ disabled by calling [`GenericSemaphoreReleaser::disarm`],","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":240761,"byte_end":240822,"line_start":521,"line_end":521,"column_start":5,"column_end":66}},{"value":"/ or when the amount of permits in the Semaphore","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":240827,"byte_end":240877,"line_start":522,"line_end":522,"column_start":5,"column_end":55}},{"value":"/ should increase from the initial amount.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":240882,"byte_end":240926,"line_start":523,"line_end":523,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1867},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":241112,"byte_end":241119,"line_start":529,"line_end":529,"column_start":12,"column_end":19},"name":"permits","qualname":"<GenericSemaphore<MutexType>>::permits","value":"pub fn permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of permits that are available on the semaphore\n","sig":null,"attributes":[{"value":"/ Returns the amount of permits that are available on the semaphore","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":241031,"byte_end":241100,"line_start":528,"line_end":528,"column_start":5,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":1868},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":241297,"byte_end":241311,"line_start":537,"line_end":537,"column_start":10,"column_end":24},"name":"LocalSemaphore","qualname":"::sync::semaphore::LocalSemaphore","value":"GenericSemaphore<NoopLock>","parent":null,"children":[],"decl_id":null,"docs":" A [`GenericSemaphore`] which is not thread-safe.\n","sig":null,"attributes":[{"value":"/ A [`GenericSemaphore`] which is not thread-safe.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":241235,"byte_end":241287,"line_start":536,"line_end":536,"column_start":1,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":1869},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":241410,"byte_end":241432,"line_start":539,"line_end":539,"column_start":10,"column_end":32},"name":"LocalSemaphoreReleaser","qualname":"::sync::semaphore::LocalSemaphoreReleaser","value":"GenericSemaphoreReleaser","parent":null,"children":[],"decl_id":null,"docs":" A [`GenericSemaphoreReleaser`] for [`LocalSemaphore`].\n","sig":null,"attributes":[{"value":"/ A [`GenericSemaphoreReleaser`] for [`LocalSemaphore`].","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":241342,"byte_end":241400,"line_start":538,"line_end":538,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":1871},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":241552,"byte_end":241579,"line_start":541,"line_end":541,"column_start":10,"column_end":37},"name":"LocalSemaphoreAcquireFuture","qualname":"::sync::semaphore::LocalSemaphoreAcquireFuture","value":"GenericSemaphoreAcquireFuture","parent":null,"children":[],"decl_id":null,"docs":" A [`GenericSemaphoreAcquireFuture`] for [`LocalSemaphore`].\n","sig":null,"attributes":[{"value":"/ A [`GenericSemaphoreAcquireFuture`] for [`LocalSemaphore`].","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":241479,"byte_end":241542,"line_start":540,"line_end":540,"column_start":1,"column_end":64}}]},{"kind":"Type","id":{"krate":0,"index":1875},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":241828,"byte_end":241837,"line_start":551,"line_end":551,"column_start":14,"column_end":23},"name":"Semaphore","qualname":"::sync::semaphore::if_std::Semaphore","value":"GenericSemaphore<parking_lot::RawMutex>","parent":null,"children":[],"decl_id":null,"docs":" A [`GenericSemaphore`] backed by [`parking_lot`].\n","sig":null,"attributes":[{"value":"/ A [`GenericSemaphore`] backed by [`parking_lot`].","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":241761,"byte_end":241814,"line_start":550,"line_end":550,"column_start":5,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":1876},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":241952,"byte_end":241969,"line_start":553,"line_end":553,"column_start":14,"column_end":31},"name":"SemaphoreReleaser","qualname":"::sync::semaphore::if_std::SemaphoreReleaser","value":"GenericSemaphoreReleaser","parent":null,"children":[],"decl_id":null,"docs":" A [`GenericSemaphoreReleaser`] for [`Semaphore`].\n","sig":null,"attributes":[{"value":"/ A [`GenericSemaphoreReleaser`] for [`Semaphore`].","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":241885,"byte_end":241938,"line_start":552,"line_end":552,"column_start":5,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":1878},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":242113,"byte_end":242135,"line_start":556,"line_end":556,"column_start":14,"column_end":36},"name":"SemaphoreAcquireFuture","qualname":"::sync::semaphore::if_std::SemaphoreAcquireFuture","value":"GenericSemaphoreAcquireFuture","parent":null,"children":[],"decl_id":null,"docs":" A [`GenericSemaphoreAcquireFuture`] for [`Semaphore`].\n","sig":null,"attributes":[{"value":"/ A [`GenericSemaphoreAcquireFuture`] for [`Semaphore`].","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":242041,"byte_end":242099,"line_start":555,"line_end":555,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1886},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":242623,"byte_end":242653,"line_start":574,"line_end":574,"column_start":16,"column_end":46},"name":"GenericSharedSemaphoreReleaser","qualname":"::sync::semaphore::if_alloc::GenericSharedSemaphoreReleaser","value":"GenericSharedSemaphoreReleaser {  }","parent":null,"children":[{"krate":0,"index":1888},{"krate":0,"index":1889}],"decl_id":null,"docs":" An RAII guard returned by the `acquire` and `try_acquire` methods.","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `acquire` and `try_acquire` methods.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":242352,"byte_end":242422,"line_start":569,"line_end":569,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":242427,"byte_end":242430,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ When this structure is dropped (falls out of scope),","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":242435,"byte_end":242491,"line_start":571,"line_end":571,"column_start":5,"column_end":61}},{"value":"/ the amount of permits that was used in the `acquire()` call will be released","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":242496,"byte_end":242576,"line_start":572,"line_end":572,"column_start":5,"column_end":85}},{"value":"/ back to the Semaphore.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":242581,"byte_end":242607,"line_start":573,"line_end":573,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1895},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":243638,"byte_end":243644,"line_start":598,"line_end":598,"column_start":16,"column_end":22},"name":"disarm","qualname":"<GenericSharedSemaphoreReleaser<MutexType>>::disarm","value":"pub fn disarm(&mut Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Prevents the SharedSemaphoreReleaser from automatically releasing the permits\n when it gets dropped.","sig":null,"attributes":[{"value":"/ Prevents the SharedSemaphoreReleaser from automatically releasing the permits","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":243223,"byte_end":243304,"line_start":590,"line_end":590,"column_start":9,"column_end":90}},{"value":"/ when it gets dropped.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":243313,"byte_end":243338,"line_start":591,"line_end":591,"column_start":9,"column_end":34}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":243347,"byte_end":243350,"line_start":592,"line_end":592,"column_start":9,"column_end":12}},{"value":"/ This is helpful if the permits must be acquired for a longer lifetime","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":243359,"byte_end":243432,"line_start":593,"line_end":593,"column_start":9,"column_end":82}},{"value":"/ than the one of the SemaphoreReleaser.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":243441,"byte_end":243483,"line_start":594,"line_end":594,"column_start":9,"column_end":51}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":243492,"byte_end":243495,"line_start":595,"line_end":595,"column_start":9,"column_end":12}},{"value":"/ If this method is used it is important to release the acquired permits","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":243504,"byte_end":243578,"line_start":596,"line_end":596,"column_start":9,"column_end":83}},{"value":"/ manually back to the Semaphore.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":243587,"byte_end":243622,"line_start":597,"line_end":597,"column_start":9,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":1899},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":244249,"byte_end":244284,"line_start":616,"line_end":616,"column_start":16,"column_end":51},"name":"GenericSharedSemaphoreAcquireFuture","qualname":"::sync::semaphore::if_alloc::GenericSharedSemaphoreAcquireFuture","value":"GenericSharedSemaphoreAcquireFuture {  }","parent":null,"children":[{"krate":0,"index":1901},{"krate":0,"index":1902},{"krate":0,"index":1903}],"decl_id":null,"docs":" A future which resolves when the target semaphore has been successfully acquired.\n","sig":null,"attributes":[{"value":"/ A future which resolves when the target semaphore has been successfully acquired.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":244095,"byte_end":244180,"line_start":614,"line_end":614,"column_start":5,"column_end":90}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":244185,"byte_end":244233,"line_start":615,"line_end":615,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":1919},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":248427,"byte_end":248449,"line_start":718,"line_end":718,"column_start":16,"column_end":38},"name":"GenericSharedSemaphore","qualname":"::sync::semaphore::if_alloc::GenericSharedSemaphore","value":"GenericSharedSemaphore {  }","parent":null,"children":[{"krate":0,"index":1921}],"decl_id":null,"docs":" A futures-aware shared semaphore.\n","sig":null,"attributes":[{"value":"/ A futures-aware shared semaphore.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":248374,"byte_end":248411,"line_start":717,"line_end":717,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1934},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":249680,"byte_end":249683,"line_start":756,"line_end":756,"column_start":16,"column_end":19},"name":"new","qualname":"<GenericSharedSemaphore<MutexType>>::new","value":"pub fn new(bool, usize) -> GenericSharedSemaphore<MutexType>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new futures-aware shared semaphore.","sig":null,"attributes":[{"value":"/ Creates a new futures-aware shared semaphore.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":249540,"byte_end":249589,"line_start":753,"line_end":753,"column_start":9,"column_end":58}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":249598,"byte_end":249601,"line_start":754,"line_end":754,"column_start":9,"column_end":12}},{"value":"/ See `GenericSharedSemaphore` for more information.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":249610,"byte_end":249664,"line_start":755,"line_end":755,"column_start":9,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1935},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":250381,"byte_end":250388,"line_start":773,"line_end":773,"column_start":16,"column_end":23},"name":"acquire","qualname":"<GenericSharedSemaphore<MutexType>>::acquire","value":"pub fn acquire(&Self, usize) -> GenericSharedSemaphoreAcquireFuture<MutexType>","parent":null,"children":[],"decl_id":null,"docs":" Acquire a certain amount of permits on a semaphore asynchronously.","sig":null,"attributes":[{"value":"/ Acquire a certain amount of permits on a semaphore asynchronously.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":250002,"byte_end":250072,"line_start":767,"line_end":767,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":250081,"byte_end":250084,"line_start":768,"line_end":768,"column_start":9,"column_end":12}},{"value":"/ This method returns a future that will resolve once the given amount of","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":250093,"byte_end":250168,"line_start":769,"line_end":769,"column_start":9,"column_end":84}},{"value":"/ permits have been acquired.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":250177,"byte_end":250208,"line_start":770,"line_end":770,"column_start":9,"column_end":40}},{"value":"/ The Future will resolve to a [`GenericSharedSemaphoreReleaser`], which will","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":250217,"byte_end":250296,"line_start":771,"line_end":771,"column_start":9,"column_end":88}},{"value":"/ release all acquired permits automatically when dropped.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":250305,"byte_end":250365,"line_start":772,"line_end":772,"column_start":9,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1936},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":251106,"byte_end":251117,"line_start":791,"line_end":791,"column_start":16,"column_end":27},"name":"try_acquire","qualname":"<GenericSharedSemaphore<MutexType>>::try_acquire","value":"pub fn try_acquire(&Self, usize)\n-> Option<GenericSharedSemaphoreReleaser<MutexType>>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a certain amount of permits on a semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire a certain amount of permits on a semaphore.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":250756,"byte_end":250820,"line_start":784,"line_end":784,"column_start":9,"column_end":73}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":250829,"byte_end":250832,"line_start":785,"line_end":785,"column_start":9,"column_end":12}},{"value":"/ If acquiring the permits is successful, a [`GenericSharedSemaphoreReleaser`]","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":250841,"byte_end":250921,"line_start":786,"line_end":786,"column_start":9,"column_end":89}},{"value":"/ will be returned, which will release all acquired permits automatically","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":250930,"byte_end":251005,"line_start":787,"line_end":787,"column_start":9,"column_end":84}},{"value":"/ when dropped.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":251014,"byte_end":251031,"line_start":788,"line_end":788,"column_start":9,"column_end":26}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":251040,"byte_end":251043,"line_start":789,"line_end":789,"column_start":9,"column_end":12}},{"value":"/ Otherwise `None` will be returned.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":251052,"byte_end":251090,"line_start":790,"line_end":790,"column_start":9,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1937},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":252133,"byte_end":252140,"line_start":815,"line_end":815,"column_start":16,"column_end":23},"name":"release","qualname":"<GenericSharedSemaphore<MutexType>>::release","value":"pub fn release(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Releases the given amount of permits back to the semaphore.","sig":null,"attributes":[{"value":"/ Releases the given amount of permits back to the semaphore.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":251532,"byte_end":251595,"line_start":805,"line_end":805,"column_start":9,"column_end":72}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":251604,"byte_end":251607,"line_start":806,"line_end":806,"column_start":9,"column_end":12}},{"value":"/ This method should in most cases not be used, since the","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":251616,"byte_end":251675,"line_start":807,"line_end":807,"column_start":9,"column_end":68}},{"value":"/ [`GenericSharedSemaphoreReleaser`] which is obtained when acquiring a Semaphore","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":251684,"byte_end":251767,"line_start":808,"line_end":808,"column_start":9,"column_end":92}},{"value":"/ will automatically release the obtained permits again.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":251776,"byte_end":251834,"line_start":809,"line_end":809,"column_start":9,"column_end":67}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":251843,"byte_end":251846,"line_start":810,"line_end":810,"column_start":9,"column_end":12}},{"value":"/ Therefore this method should only be used if the automatic release was","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":251855,"byte_end":251929,"line_start":811,"line_end":811,"column_start":9,"column_end":83}},{"value":"/ disabled by calling [`GenericSharedSemaphoreReleaser::disarm`],","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":251938,"byte_end":252005,"line_start":812,"line_end":812,"column_start":9,"column_end":76}},{"value":"/ or when the amount of permits in the Semaphore","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":252014,"byte_end":252064,"line_start":813,"line_end":813,"column_start":9,"column_end":59}},{"value":"/ should increase from the initial amount.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":252073,"byte_end":252117,"line_start":814,"line_end":814,"column_start":9,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1938},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":252323,"byte_end":252330,"line_start":820,"line_end":820,"column_start":16,"column_end":23},"name":"permits","qualname":"<GenericSharedSemaphore<MutexType>>::permits","value":"pub fn permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of permits that are available on the semaphore\n","sig":null,"attributes":[{"value":"/ Returns the amount of permits that are available on the semaphore","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":252238,"byte_end":252307,"line_start":819,"line_end":819,"column_start":9,"column_end":78}}]},{"kind":"Type","id":{"krate":0,"index":1941},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":252621,"byte_end":252636,"line_start":831,"line_end":831,"column_start":18,"column_end":33},"name":"SharedSemaphore","qualname":"::sync::semaphore::if_alloc::if_std::SharedSemaphore","value":"GenericSharedSemaphore<parking_lot::RawMutex>","parent":null,"children":[],"decl_id":null,"docs":" A [`GenericSharedSemaphore`] backed by [`parking_lot`].\n","sig":null,"attributes":[{"value":"/ A [`GenericSharedSemaphore`] backed by [`parking_lot`].","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":252544,"byte_end":252603,"line_start":830,"line_end":830,"column_start":9,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":1942},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":252789,"byte_end":252812,"line_start":834,"line_end":834,"column_start":18,"column_end":41},"name":"SharedSemaphoreReleaser","qualname":"::sync::semaphore::if_alloc::if_std::SharedSemaphoreReleaser","value":"GenericSharedSemaphoreReleaser<parking_lot::RawMutex>","parent":null,"children":[],"decl_id":null,"docs":" A [`GenericSharedSemaphoreReleaser`] for [`SharedSemaphore`].\n","sig":null,"attributes":[{"value":"/ A [`GenericSharedSemaphoreReleaser`] for [`SharedSemaphore`].","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":252706,"byte_end":252771,"line_start":833,"line_end":833,"column_start":9,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":1943},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":252978,"byte_end":253006,"line_start":837,"line_end":837,"column_start":18,"column_end":46},"name":"SharedSemaphoreAcquireFuture","qualname":"::sync::semaphore::if_alloc::if_std::SharedSemaphoreAcquireFuture","value":"GenericSharedSemaphoreAcquireFuture<parking_lot::RawMutex>","parent":null,"children":[],"decl_id":null,"docs":" A [`GenericSharedSemaphoreAcquireFuture`] for [`SharedSemaphore`].\n","sig":null,"attributes":[{"value":"/ A [`GenericSharedSemaphoreAcquireFuture`] for [`SharedSemaphore`].","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":252890,"byte_end":252960,"line_start":836,"line_end":836,"column_start":9,"column_end":79}}]},{"kind":"Mod","id":{"krate":0,"index":1994},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"timer","qualname":"::timer","value":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/mod.rs","parent":null,"children":[{"krate":0,"index":1995},{"krate":0,"index":2028},{"krate":0,"index":2029},{"krate":0,"index":2032},{"krate":0,"index":2035},{"krate":0,"index":2038},{"krate":0,"index":2186},{"krate":0,"index":2187},{"krate":0,"index":2190},{"krate":0,"index":2193},{"krate":0,"index":2196},{"krate":0,"index":2199},{"krate":0,"index":2202},{"krate":0,"index":2205}],"decl_id":null,"docs":" Asynchronous timers.","sig":null,"attributes":[{"value":"/ Asynchronous timers.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/mod.rs","byte_start":253202,"byte_end":253226,"line_start":1,"line_end":1,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/mod.rs","byte_start":253227,"byte_end":253230,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides a timer implementation which returns awaitable","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/mod.rs","byte_start":253231,"byte_end":253302,"line_start":3,"line_end":3,"column_start":1,"column_end":72}},{"value":"/ `Future`s.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/mod.rs","byte_start":253303,"byte_end":253317,"line_start":4,"line_end":4,"column_start":1,"column_end":15}},{"value":"/ The timer can work with a configurable clock source. In order to utilize","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/mod.rs","byte_start":253318,"byte_end":253394,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ the system clock, a global instance `StdClock` can be utilized.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/mod.rs","byte_start":253395,"byte_end":253462,"line_start":6,"line_end":6,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":2003},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/clock.rs","byte_start":253944,"byte_end":253949,"line_start":8,"line_end":8,"column_start":11,"column_end":16},"name":"Clock","qualname":"::timer::clock::Clock","value":"Clock: Sync","parent":null,"children":[{"krate":0,"index":2004}],"decl_id":null,"docs":" A monotonic source of time.","sig":null,"attributes":[{"value":"/ A monotonic source of time.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/clock.rs","byte_start":253842,"byte_end":253873,"line_start":5,"line_end":5,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/clock.rs","byte_start":253874,"byte_end":253877,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Clocks must always returning increasing timestamps.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/clock.rs","byte_start":253878,"byte_end":253933,"line_start":7,"line_end":7,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2004},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/clock.rs","byte_start":254212,"byte_end":254215,"line_start":14,"line_end":14,"column_start":8,"column_end":11},"name":"now","qualname":"::timer::clock::Clock::now","value":"pub fn now(&Self) -> u64","parent":{"krate":0,"index":2003},"children":[],"decl_id":null,"docs":" Returns a timestamp in milliseconds which represents the current time\n according to the clock.","sig":null,"attributes":[{"value":"/ Returns a timestamp in milliseconds which represents the current time","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/clock.rs","byte_start":253962,"byte_end":254035,"line_start":9,"line_end":9,"column_start":5,"column_end":78}},{"value":"/ according to the clock.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/clock.rs","byte_start":254040,"byte_end":254067,"line_start":10,"line_end":10,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/clock.rs","byte_start":254072,"byte_end":254075,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ Clocks must only return timestamps that are bigger or equal than what","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/clock.rs","byte_start":254080,"byte_end":254153,"line_start":12,"line_end":12,"column_start":5,"column_end":78}},{"value":"/ they returned on the last call to `now()`.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/clock.rs","byte_start":254158,"byte_end":254204,"line_start":13,"line_end":13,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":2005},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/clock.rs","byte_start":254735,"byte_end":254744,"line_start":30,"line_end":30,"column_start":12,"column_end":21},"name":"MockClock","qualname":"::timer::clock::MockClock","value":"MockClock {  }","parent":null,"children":[{"krate":0,"index":2006}],"decl_id":null,"docs":" A [`Clock`] which can be set to arbitrary timestamps for testing purposes.","sig":null,"attributes":[{"value":"/ A [`Clock`] which can be set to arbitrary timestamps for testing purposes.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/clock.rs","byte_start":254234,"byte_end":254312,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/clock.rs","byte_start":254313,"byte_end":254316,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ It can be used in a test case as demonstrated in the following example:","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/clock.rs","byte_start":254317,"byte_end":254392,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/clock.rs","byte_start":254393,"byte_end":254400,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use futures_intrusive::timer::MockClock;","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/clock.rs","byte_start":254401,"byte_end":254445,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/ # #[cfg(feature = \"std\")]","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/clock.rs","byte_start":254446,"byte_end":254475,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/ # use futures_intrusive::timer::TimerService;","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/clock.rs","byte_start":254476,"byte_end":254525,"line_start":23,"line_end":23,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/clock.rs","byte_start":254526,"byte_end":254529,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ static TEST_CLOCK: MockClock = MockClock::new();","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/clock.rs","byte_start":254530,"byte_end":254582,"line_start":25,"line_end":25,"column_start":1,"column_end":53}},{"value":"/ TEST_CLOCK.set_time(2300); // Set the current time","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/clock.rs","byte_start":254583,"byte_end":254637,"line_start":26,"line_end":26,"column_start":1,"column_end":55}},{"value":"/ # #[cfg(feature = \"std\")]","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/clock.rs","byte_start":254638,"byte_end":254667,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/ let timer = TimerService::new(&TEST_CLOCK);","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/clock.rs","byte_start":254668,"byte_end":254715,"line_start":28,"line_end":28,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/clock.rs","byte_start":254716,"byte_end":254723,"line_start":29,"line_end":29,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2010},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/clock.rs","byte_start":255136,"byte_end":255139,"line_start":44,"line_end":44,"column_start":18,"column_end":21},"name":"new","qualname":"<MockClock>::new","value":"pub const fn new() -> MockClock","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of the [`MockClock`], which is initialized to\n timestamp 0.\n","sig":null,"attributes":[{"value":"/ Creates a new instance of the [`MockClock`], which is initialized to","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/clock.rs","byte_start":255025,"byte_end":255097,"line_start":42,"line_end":42,"column_start":5,"column_end":77}},{"value":"/ timestamp 0.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/clock.rs","byte_start":255102,"byte_end":255118,"line_start":43,"line_end":43,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2011},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/clock.rs","byte_start":255321,"byte_end":255329,"line_start":51,"line_end":51,"column_start":12,"column_end":20},"name":"set_time","qualname":"<MockClock>::set_time","value":"pub fn set_time(&Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the current timestamp inside to [`MockClock`] to the given value\n","sig":null,"attributes":[{"value":"/ Sets the current timestamp inside to [`MockClock`] to the given value","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/clock.rs","byte_start":255236,"byte_end":255309,"line_start":50,"line_end":50,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":2019},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/clock.rs","byte_start":255961,"byte_end":255969,"line_start":73,"line_end":73,"column_start":16,"column_end":24},"name":"StdClock","qualname":"::timer::clock::if_std::StdClock","value":"StdClock {  }","parent":null,"children":[{"krate":0,"index":2020}],"decl_id":null,"docs":" A Clock that makes use of the Standard libraries [`std::time::Instant`]\n functionality in order to generate monotonically increasing timestamps.\n","sig":null,"attributes":[{"value":"/ A Clock that makes use of the Standard libraries [`std::time::Instant`]","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/clock.rs","byte_start":255790,"byte_end":255865,"line_start":71,"line_end":71,"column_start":5,"column_end":80}},{"value":"/ functionality in order to generate monotonically increasing timestamps.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/clock.rs","byte_start":255870,"byte_end":255945,"line_start":72,"line_end":72,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":2024},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/clock.rs","byte_start":256258,"byte_end":256261,"line_start":85,"line_end":85,"column_start":16,"column_end":19},"name":"new","qualname":"<StdClock>::new","value":"pub fn new() -> StdClock","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`StdClock`]\n","sig":null,"attributes":[{"value":"/ Creates a new [`StdClock`]","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/clock.rs","byte_start":256212,"byte_end":256242,"line_start":84,"line_end":84,"column_start":9,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":2114},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":262980,"byte_end":262990,"line_start":192,"line_end":192,"column_start":11,"column_end":21},"name":"LocalTimer","qualname":"::timer::timer::LocalTimer","value":"LocalTimer","parent":null,"children":[{"krate":0,"index":2115},{"krate":0,"index":2116}],"decl_id":null,"docs":" An asynchronously awaitable timer which is bound to a thread.","sig":null,"attributes":[{"value":"/ An asynchronously awaitable timer which is bound to a thread.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":262658,"byte_end":262723,"line_start":185,"line_end":185,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":262724,"byte_end":262727,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ The timer operates on millisecond precision and makes use of a configurable","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":262728,"byte_end":262807,"line_start":187,"line_end":187,"column_start":1,"column_end":80}},{"value":"/ clock source.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":262808,"byte_end":262825,"line_start":188,"line_end":188,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":262826,"byte_end":262829,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ The timer allows to wait asynchronously either for a certain duration,","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":262830,"byte_end":262904,"line_start":190,"line_end":190,"column_start":1,"column_end":75}},{"value":"/ or until the provided [`Clock`] reaches a certain timestamp.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":262905,"byte_end":262969,"line_start":191,"line_end":191,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2115},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":263072,"byte_end":263077,"line_start":194,"line_end":194,"column_start":8,"column_end":13},"name":"delay","qualname":"::timer::timer::LocalTimer::delay","value":"pub fn delay(&Self, Duration) -> LocalTimerFuture","parent":{"krate":0,"index":2114},"children":[],"decl_id":null,"docs":" Returns a future that gets fulfilled after the given `Duration`\n","sig":null,"attributes":[{"value":"/ Returns a future that gets fulfilled after the given `Duration`","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":262997,"byte_end":263064,"line_start":193,"line_end":193,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2116},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":263241,"byte_end":263249,"line_start":198,"line_end":198,"column_start":8,"column_end":16},"name":"deadline","qualname":"::timer::timer::LocalTimer::deadline","value":"pub fn deadline(&Self, u64) -> LocalTimerFuture","parent":{"krate":0,"index":2114},"children":[],"decl_id":null,"docs":" Returns a future that gets fulfilled when the utilized [`Clock`] reaches\n the given timestamp.\n","sig":null,"attributes":[{"value":"/ Returns a future that gets fulfilled when the utilized [`Clock`] reaches","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":263128,"byte_end":263204,"line_start":196,"line_end":196,"column_start":5,"column_end":81}},{"value":"/ the given timestamp.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":263209,"byte_end":263233,"line_start":197,"line_end":197,"column_start":5,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":2117},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":263604,"byte_end":263609,"line_start":208,"line_end":208,"column_start":11,"column_end":16},"name":"Timer","qualname":"::timer::timer::Timer","value":"Timer","parent":null,"children":[{"krate":0,"index":2118},{"krate":0,"index":2119}],"decl_id":null,"docs":" An asynchronously awaitable thread-safe timer.","sig":null,"attributes":[{"value":"/ An asynchronously awaitable thread-safe timer.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":263297,"byte_end":263347,"line_start":201,"line_end":201,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":263348,"byte_end":263351,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ The timer operates on millisecond precision and makes use of a configurable","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":263352,"byte_end":263431,"line_start":203,"line_end":203,"column_start":1,"column_end":80}},{"value":"/ clock source.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":263432,"byte_end":263449,"line_start":204,"line_end":204,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":263450,"byte_end":263453,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ The timer allows to wait asynchronously either for a certain duration,","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":263454,"byte_end":263528,"line_start":206,"line_end":206,"column_start":1,"column_end":75}},{"value":"/ or until the provided [`Clock`] reaches a certain timestamp.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":263529,"byte_end":263593,"line_start":207,"line_end":207,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2118},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":263691,"byte_end":263696,"line_start":210,"line_end":210,"column_start":8,"column_end":13},"name":"delay","qualname":"::timer::timer::Timer::delay","value":"pub fn delay(&Self, Duration) -> TimerFuture","parent":{"krate":0,"index":2117},"children":[],"decl_id":null,"docs":" Returns a future that gets fulfilled after the given `Duration`\n","sig":null,"attributes":[{"value":"/ Returns a future that gets fulfilled after the given `Duration`","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":263616,"byte_end":263683,"line_start":209,"line_end":209,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2119},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":263855,"byte_end":263863,"line_start":214,"line_end":214,"column_start":8,"column_end":16},"name":"deadline","qualname":"::timer::timer::Timer::deadline","value":"pub fn deadline(&Self, u64) -> TimerFuture","parent":{"krate":0,"index":2117},"children":[],"decl_id":null,"docs":" Returns a future that gets fulfilled when the utilized [`Clock`] reaches\n the given timestamp.\n","sig":null,"attributes":[{"value":"/ Returns a future that gets fulfilled when the utilized [`Clock`] reaches","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":263742,"byte_end":263818,"line_start":212,"line_end":212,"column_start":5,"column_end":81}},{"value":"/ the given timestamp.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":263823,"byte_end":263847,"line_start":213,"line_end":213,"column_start":5,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":2120},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":264598,"byte_end":264617,"line_start":232,"line_end":232,"column_start":12,"column_end":31},"name":"GenericTimerService","qualname":"::timer::timer::GenericTimerService","value":"GenericTimerService {  }","parent":null,"children":[{"krate":0,"index":2122}],"decl_id":null,"docs":" An asynchronously awaitable timer.","sig":null,"attributes":[{"value":"/ An asynchronously awaitable timer.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":263906,"byte_end":263944,"line_start":217,"line_end":217,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":263945,"byte_end":263948,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ The timer operates on millisecond precision and makes use of a configurable","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":263949,"byte_end":264028,"line_start":219,"line_end":219,"column_start":1,"column_end":80}},{"value":"/ clock source.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":264029,"byte_end":264046,"line_start":220,"line_end":220,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":264047,"byte_end":264050,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ The timer allows to wait asynchronously either for a certain duration,","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":264051,"byte_end":264125,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ or until the provided [`Clock`] reaches a certain timestamp.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":264126,"byte_end":264190,"line_start":223,"line_end":223,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":264191,"byte_end":264194,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ In order to unblock tasks that are waiting on the timer,","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":264195,"byte_end":264255,"line_start":225,"line_end":225,"column_start":1,"column_end":61}},{"value":"/ [`check_expirations`](GenericTimerService::check_expirations)","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":264256,"byte_end":264321,"line_start":226,"line_end":226,"column_start":1,"column_end":66}},{"value":"/ must be called in regular intervals on this timer service.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":264322,"byte_end":264384,"line_start":227,"line_end":227,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":264385,"byte_end":264388,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ The timer can either be running on a separate timer thread (in case a","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":264389,"byte_end":264462,"line_start":229,"line_end":229,"column_start":1,"column_end":74}},{"value":"/ thread-safe timer type is utilize), or it can be integrated into an executor","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":264463,"byte_end":264543,"line_start":230,"line_end":230,"column_start":1,"column_end":81}},{"value":"/ in order to minimize context switches.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":264544,"byte_end":264586,"line_start":231,"line_end":231,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2132},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":265688,"byte_end":265691,"line_start":263,"line_end":263,"column_start":12,"column_end":15},"name":"new","qualname":"<GenericTimerService<MutexType>>::new","value":"pub fn new(&'static dyn Clock) -> GenericTimerService<MutexType>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Timer in the given state.","sig":null,"attributes":[{"value":"/ Creates a new Timer in the given state.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":265271,"byte_end":265314,"line_start":254,"line_end":254,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":265319,"byte_end":265322,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ The Timer will query the provided [`Clock`] instance for the current","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":265327,"byte_end":265399,"line_start":256,"line_end":256,"column_start":5,"column_end":77}},{"value":"/ time whenever required.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":265404,"byte_end":265431,"line_start":257,"line_end":257,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":265436,"byte_end":265439,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ In order to create a create a clock which utilizes system time,","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":265444,"byte_end":265511,"line_start":259,"line_end":259,"column_start":5,"column_end":72}},{"value":"/ [`StdClock`](super::StdClock) can be utilized.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":265516,"byte_end":265566,"line_start":260,"line_end":260,"column_start":5,"column_end":55}},{"value":"/ In order to simulate time for test purposes,","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":265571,"byte_end":265619,"line_start":261,"line_end":261,"column_start":5,"column_end":53}},{"value":"/ [`MockClock`](super::MockClock) can be utilized.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":265624,"byte_end":265676,"line_start":262,"line_end":262,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2133},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":266312,"byte_end":266327,"line_start":277,"line_end":277,"column_start":12,"column_end":27},"name":"next_expiration","qualname":"<GenericTimerService<MutexType>>::next_expiration","value":"pub fn next_expiration(&Self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Returns a timestamp when the next timer expires.","sig":null,"attributes":[{"value":"/ Returns a timestamp when the next timer expires.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":265874,"byte_end":265926,"line_start":269,"line_end":269,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":265931,"byte_end":265934,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ For thread-safe timers, the returned value is not precise and subject to","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":265939,"byte_end":266015,"line_start":271,"line_end":271,"column_start":5,"column_end":81}},{"value":"/ race-conditions, since other threads can add timer in the meantime.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":266020,"byte_end":266091,"line_start":272,"line_end":272,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":266096,"byte_end":266099,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ Therefore adding any timer to the [`GenericTimerService`] should  also","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":266104,"byte_end":266178,"line_start":274,"line_end":274,"column_start":5,"column_end":79}},{"value":"/ make sure to wake up the executor which polls for timeouts, in order to","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":266183,"byte_end":266258,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/ let it capture the latest change.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":266263,"byte_end":266300,"line_start":276,"line_end":276,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2134},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":266541,"byte_end":266558,"line_start":283,"line_end":283,"column_start":12,"column_end":29},"name":"check_expirations","qualname":"<GenericTimerService<MutexType>>::check_expirations","value":"pub fn check_expirations(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Checks whether any of the attached [`TimerFuture`]s has expired.\n In this case the associated task is woken up.\n","sig":null,"attributes":[{"value":"/ Checks whether any of the attached [`TimerFuture`]s has expired.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":266407,"byte_end":266475,"line_start":281,"line_end":281,"column_start":5,"column_end":73}},{"value":"/ In this case the associated task is woken up.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":266480,"byte_end":266529,"line_start":282,"line_end":282,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":2148},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":268839,"byte_end":268855,"line_start":351,"line_end":351,"column_start":12,"column_end":28},"name":"LocalTimerFuture","qualname":"::timer::timer::LocalTimerFuture","value":"LocalTimerFuture {  }","parent":null,"children":[{"krate":0,"index":2150},{"krate":0,"index":2151}],"decl_id":null,"docs":" A Future that is resolved once the requested time has elapsed.\n","sig":null,"attributes":[{"value":"/ A Future that is resolved once the requested time has elapsed.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":268712,"byte_end":268778,"line_start":349,"line_end":349,"column_start":1,"column_end":67}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":268779,"byte_end":268827,"line_start":350,"line_end":350,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":2165},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":270825,"byte_end":270836,"line_start":410,"line_end":410,"column_start":12,"column_end":23},"name":"TimerFuture","qualname":"::timer::timer::TimerFuture","value":"TimerFuture {  }","parent":null,"children":[{"krate":0,"index":2167}],"decl_id":null,"docs":" A Future that is resolved once the requested time has elapsed.\n","sig":null,"attributes":[{"value":"/ A Future that is resolved once the requested time has elapsed.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":270698,"byte_end":270764,"line_start":408,"line_end":408,"column_start":1,"column_end":67}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":270765,"byte_end":270813,"line_start":409,"line_end":409,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":2181},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":271944,"byte_end":271961,"line_start":447,"line_end":447,"column_start":10,"column_end":27},"name":"LocalTimerService","qualname":"::timer::timer::LocalTimerService","value":"GenericTimerService<NoopLock>","parent":null,"children":[],"decl_id":null,"docs":" A [`GenericTimerService`] implementation which is not thread-safe.\n","sig":null,"attributes":[{"value":"/ A [`GenericTimerService`] implementation which is not thread-safe.","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":271864,"byte_end":271934,"line_start":446,"line_end":446,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":2184},"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":272206,"byte_end":272218,"line_start":456,"line_end":456,"column_start":14,"column_end":26},"name":"TimerService","qualname":"::timer::timer::if_std::TimerService","value":"GenericTimerService<parking_lot::RawMutex>","parent":null,"children":[],"decl_id":null,"docs":" A [`GenericTimerService`] implementation backed by [`parking_lot`].\n","sig":null,"attributes":[{"value":"/ A [`GenericTimerService`] implementation backed by [`parking_lot`].","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":272121,"byte_end":272192,"line_start":455,"line_end":455,"column_start":5,"column_end":76}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/noop_lock.rs","byte_start":10001,"byte_end":10009,"line_start":13,"line_end":13,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":14313,"byte_end":14321,"line_start":61,"line_end":61,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":14678,"byte_end":14686,"line_start":76,"line_end":76,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":14963,"byte_end":14971,"line_start":88,"line_end":88,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":16650,"byte_end":16658,"line_start":153,"line_end":153,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":17845,"byte_end":17857,"line_start":188,"line_end":188,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":18186,"byte_end":18198,"line_start":200,"line_end":200,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":19760,"byte_end":19774,"line_start":258,"line_end":258,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":20109,"byte_end":20123,"line_start":270,"line_end":270,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/intrusive_double_linked_list.rs","byte_start":23595,"byte_end":23603,"line_start":23,"line_end":23,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/intrusive_double_linked_list.rs","byte_start":23862,"byte_end":23870,"line_start":35,"line_end":35,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/intrusive_double_linked_list.rs","byte_start":23975,"byte_end":23983,"line_start":43,"line_end":43,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/intrusive_double_linked_list.rs","byte_start":24292,"byte_end":24302,"line_start":57,"line_end":57,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/intrusive_pairing_heap.rs","byte_start":48790,"byte_end":48798,"line_start":31,"line_end":31,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/intrusive_pairing_heap.rs","byte_start":49963,"byte_end":49971,"line_start":64,"line_end":64,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":207},{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/intrusive_pairing_heap.rs","byte_start":50517,"byte_end":50525,"line_start":88,"line_end":88,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":211},{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/intrusive_pairing_heap.rs","byte_start":50630,"byte_end":50638,"line_start":96,"line_end":96,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/intrusive_pairing_heap.rs","byte_start":54986,"byte_end":54997,"line_start":233,"line_end":233,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/error.rs","byte_start":64708,"byte_end":64723,"line_start":20,"line_end":20,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/error.rs","byte_start":65356,"byte_end":65368,"line_start":48,"line_end":48,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":66546,"byte_end":66557,"line_start":19,"line_end":19,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":285},{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":67704,"byte_end":67722,"line_start":59,"line_end":59,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":68640,"byte_end":68658,"line_start":91,"line_end":91,"column_start":30,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":68955,"byte_end":68973,"line_start":103,"line_end":103,"column_start":9,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":71020,"byte_end":71040,"line_start":163,"line_end":163,"column_start":9,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":71112,"byte_end":71132,"line_start":168,"line_end":168,"column_start":9,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":71323,"byte_end":71343,"line_start":175,"line_end":175,"column_start":35,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":328},{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":72416,"byte_end":72436,"line_start":204,"line_end":204,"column_start":40,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":72567,"byte_end":72587,"line_start":210,"line_end":210,"column_start":33,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":73930,"byte_end":73947,"line_start":240,"line_end":240,"column_start":9,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":74019,"byte_end":74036,"line_start":245,"line_end":245,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":74213,"byte_end":74230,"line_start":252,"line_end":252,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":74646,"byte_end":74663,"line_start":266,"line_end":266,"column_start":35,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":365},{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":76169,"byte_end":76186,"line_start":306,"line_end":306,"column_start":40,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":76317,"byte_end":76334,"line_start":312,"line_end":312,"column_start":33,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":77944,"byte_end":77964,"line_start":350,"line_end":350,"column_start":17,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":78048,"byte_end":78068,"line_start":354,"line_end":354,"column_start":49,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":78291,"byte_end":78311,"line_start":360,"line_end":360,"column_start":39,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":397},{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":79721,"byte_end":79741,"line_start":396,"line_end":396,"column_start":44,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":79904,"byte_end":79924,"line_start":402,"line_end":402,"column_start":37,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":81279,"byte_end":81296,"line_start":430,"line_end":430,"column_start":28,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":82033,"byte_end":82050,"line_start":447,"line_end":447,"column_start":56,"column_end":73},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":82117,"byte_end":82134,"line_start":449,"line_end":449,"column_start":49,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":82354,"byte_end":82371,"line_start":455,"line_end":455,"column_start":39,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":427},{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":84241,"byte_end":84258,"line_start":499,"line_end":499,"column_start":44,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":84421,"byte_end":84438,"line_start":505,"line_end":505,"column_start":37,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":86225,"byte_end":86237,"line_start":39,"line_end":39,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":90847,"byte_end":90868,"line_start":155,"line_end":155,"column_start":9,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":91018,"byte_end":91039,"line_start":160,"line_end":160,"column_start":9,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":91113,"byte_end":91134,"line_start":165,"line_end":165,"column_start":9,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":91317,"byte_end":91338,"line_start":172,"line_end":172,"column_start":30,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":92731,"byte_end":92752,"line_start":212,"line_end":212,"column_start":9,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":556},{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":94259,"byte_end":94291,"line_start":267,"line_end":267,"column_start":17,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":579},{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":95940,"byte_end":95960,"line_start":316,"line_end":316,"column_start":49,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":96241,"byte_end":96263,"line_start":325,"line_end":325,"column_start":49,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":96534,"byte_end":96554,"line_start":334,"line_end":334,"column_start":37,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":96917,"byte_end":96939,"line_start":345,"line_end":345,"column_start":37,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":98281,"byte_end":98301,"line_start":384,"line_end":384,"column_start":28,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":98906,"byte_end":98928,"line_start":399,"line_end":399,"column_start":28,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":102140,"byte_end":102152,"line_start":40,"line_end":40,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":106876,"byte_end":106906,"line_start":159,"line_end":159,"column_start":9,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":107056,"byte_end":107086,"line_start":164,"line_end":164,"column_start":9,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":107160,"byte_end":107190,"line_start":169,"line_end":169,"column_start":9,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":714}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":107382,"byte_end":107412,"line_start":176,"line_end":176,"column_start":30,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":108852,"byte_end":108882,"line_start":219,"line_end":219,"column_start":9,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":725},{"krate":0,"index":726}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":110477,"byte_end":110509,"line_start":278,"line_end":278,"column_start":17,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":748},{"krate":0,"index":749}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":112317,"byte_end":112348,"line_start":330,"line_end":330,"column_start":38,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":761}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":112663,"byte_end":112692,"line_start":343,"line_end":343,"column_start":17,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":765}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":113016,"byte_end":113047,"line_start":354,"line_end":354,"column_start":17,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":113349,"byte_end":113378,"line_start":364,"line_end":364,"column_start":37,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":113763,"byte_end":113794,"line_start":376,"line_end":376,"column_start":37,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":115447,"byte_end":115476,"line_start":418,"line_end":418,"column_start":28,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":784}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":116103,"byte_end":116134,"line_start":434,"line_end":434,"column_start":28,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":788}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":118884,"byte_end":118891,"line_start":23,"line_end":23,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":863}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":119700,"byte_end":119718,"line_start":52,"line_end":52,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":865}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":121593,"byte_end":121611,"line_start":106,"line_end":106,"column_start":9,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":121690,"byte_end":121708,"line_start":111,"line_end":111,"column_start":9,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":885}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":121904,"byte_end":121922,"line_start":118,"line_end":118,"column_start":42,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":890},{"krate":0,"index":891}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":123045,"byte_end":123063,"line_start":151,"line_end":151,"column_start":9,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":896}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":123201,"byte_end":123219,"line_start":158,"line_end":158,"column_start":40,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":901}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":124529,"byte_end":124541,"line_start":194,"line_end":194,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":917}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":129626,"byte_end":129654,"line_start":327,"line_end":327,"column_start":9,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":129804,"byte_end":129832,"line_start":332,"line_end":332,"column_start":9,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":129906,"byte_end":129934,"line_start":337,"line_end":337,"column_start":9,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":931}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":130124,"byte_end":130152,"line_start":344,"line_end":344,"column_start":30,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":132359,"byte_end":132387,"line_start":407,"line_end":407,"column_start":9,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":943},{"krate":0,"index":944}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":134272,"byte_end":134311,"line_start":469,"line_end":469,"column_start":17,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":972},{"krate":0,"index":973}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":136315,"byte_end":136333,"line_start":515,"line_end":515,"column_start":17,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":136417,"byte_end":136435,"line_start":519,"line_end":519,"column_start":49,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":986}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":136656,"byte_end":136674,"line_start":525,"line_end":525,"column_start":39,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":990},{"krate":0,"index":991}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":138100,"byte_end":138118,"line_start":561,"line_end":561,"column_start":44,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":995}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":138281,"byte_end":138299,"line_start":567,"line_end":567,"column_start":37,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":999}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":139854,"byte_end":139872,"line_start":607,"line_end":607,"column_start":49,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1011}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":140173,"byte_end":140193,"line_start":617,"line_end":617,"column_start":49,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":1015}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":140485,"byte_end":140503,"line_start":627,"line_end":627,"column_start":38,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":141035,"byte_end":141053,"line_start":644,"line_end":644,"column_start":37,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1023}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":141624,"byte_end":141644,"line_start":660,"line_end":660,"column_start":38,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1027}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":142180,"byte_end":142200,"line_start":677,"line_end":677,"column_start":37,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1031}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":143898,"byte_end":143916,"line_start":724,"line_end":724,"column_start":28,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1038}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":144543,"byte_end":144563,"line_start":740,"line_end":740,"column_start":28,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1042},{"krate":0,"index":1043}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":150077,"byte_end":150089,"line_start":82,"line_end":82,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1177},{"krate":0,"index":1178},{"krate":0,"index":1179},{"krate":0,"index":1180},{"krate":0,"index":1181},{"krate":0,"index":1182},{"krate":0,"index":1183},{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1186},{"krate":0,"index":1187}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":162036,"byte_end":162050,"line_start":378,"line_end":378,"column_start":9,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":162245,"byte_end":162259,"line_start":385,"line_end":385,"column_start":9,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":162371,"byte_end":162385,"line_start":392,"line_end":392,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1205}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":162592,"byte_end":162606,"line_start":401,"line_end":401,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1213},{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1217}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":166313,"byte_end":166327,"line_start":503,"line_end":503,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1222},{"krate":0,"index":1223}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":167002,"byte_end":167016,"line_start":531,"line_end":531,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1228},{"krate":0,"index":1229}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":168351,"byte_end":168364,"line_start":579,"line_end":579,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1235},{"krate":0,"index":1236}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":170309,"byte_end":170322,"line_start":633,"line_end":633,"column_start":43,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1242}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":173100,"byte_end":173125,"line_start":708,"line_end":708,"column_start":17,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1287},{"krate":0,"index":1288}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":173939,"byte_end":173964,"line_start":732,"line_end":732,"column_start":17,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1293},{"krate":0,"index":1294}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":175744,"byte_end":175757,"line_start":781,"line_end":781,"column_start":52,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1309}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":176071,"byte_end":176086,"line_start":791,"line_end":791,"column_start":52,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1314}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":176391,"byte_end":176404,"line_start":801,"line_end":801,"column_start":41,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1319}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":176949,"byte_end":176962,"line_start":818,"line_end":818,"column_start":40,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1324}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":177551,"byte_end":177566,"line_start":834,"line_end":834,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1329}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":178115,"byte_end":178130,"line_start":851,"line_end":851,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1334}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":180221,"byte_end":180234,"line_start":906,"line_end":906,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1343},{"krate":0,"index":1344},{"krate":0,"index":1345}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":182234,"byte_end":182249,"line_start":946,"line_end":946,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1350},{"krate":0,"index":1351},{"krate":0,"index":1352},{"krate":0,"index":1353}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":184556,"byte_end":184568,"line_start":1003,"line_end":1003,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1358}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":185096,"byte_end":185108,"line_start":1017,"line_end":1017,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1363},{"krate":0,"index":1364}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":186688,"byte_end":186700,"line_start":1063,"line_end":1063,"column_start":47,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1370}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/manual_reset_event.rs","byte_start":191924,"byte_end":191938,"line_start":35,"line_end":35,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1466}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/manual_reset_event.rs","byte_start":192257,"byte_end":192267,"line_start":51,"line_end":51,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1471},{"krate":0,"index":1472},{"krate":0,"index":1473},{"krate":0,"index":1475},{"krate":0,"index":1476},{"krate":0,"index":1477}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/manual_reset_event.rs","byte_start":196431,"byte_end":196454,"line_start":157,"line_end":157,"column_start":9,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/manual_reset_event.rs","byte_start":196596,"byte_end":196619,"line_start":162,"line_end":162,"column_start":9,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/manual_reset_event.rs","byte_start":196687,"byte_end":196710,"line_start":167,"line_end":167,"column_start":9,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1487}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/manual_reset_event.rs","byte_start":196882,"byte_end":196905,"line_start":174,"line_end":174,"column_start":27,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1490},{"krate":0,"index":1491},{"krate":0,"index":1492},{"krate":0,"index":1493},{"krate":0,"index":1494},{"krate":0,"index":1495},{"krate":0,"index":1496}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/manual_reset_event.rs","byte_start":198794,"byte_end":198819,"line_start":233,"line_end":233,"column_start":9,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/manual_reset_event.rs","byte_start":198895,"byte_end":198920,"line_start":238,"line_end":238,"column_start":9,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1508}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/manual_reset_event.rs","byte_start":199124,"byte_end":199149,"line_start":246,"line_end":246,"column_start":9,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1512},{"krate":0,"index":1513}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/manual_reset_event.rs","byte_start":200188,"byte_end":200213,"line_start":276,"line_end":276,"column_start":9,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1517}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/manual_reset_event.rs","byte_start":200350,"byte_end":200375,"line_start":284,"line_end":284,"column_start":9,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1521}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":202706,"byte_end":202720,"line_start":43,"line_end":43,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1609}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":203039,"byte_end":203049,"line_start":60,"line_end":60,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1615},{"krate":0,"index":1616},{"krate":0,"index":1617},{"krate":0,"index":1618},{"krate":0,"index":1619},{"krate":0,"index":1620},{"krate":0,"index":1621},{"krate":0,"index":1622}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":212262,"byte_end":212279,"line_start":283,"line_end":283,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1631}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":212471,"byte_end":212488,"line_start":290,"line_end":290,"column_start":39,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1635}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":212742,"byte_end":212759,"line_start":300,"line_end":300,"column_start":40,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1639},{"krate":0,"index":1640}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":212924,"byte_end":212941,"line_start":307,"line_end":307,"column_start":43,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1644}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":213210,"byte_end":213227,"line_start":316,"line_end":316,"column_start":9,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":213882,"byte_end":213904,"line_start":333,"line_end":333,"column_start":9,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":214004,"byte_end":214026,"line_start":338,"line_end":338,"column_start":9,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1662}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":214233,"byte_end":214255,"line_start":346,"line_end":346,"column_start":9,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1667},{"krate":0,"index":1668}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":215393,"byte_end":215415,"line_start":377,"line_end":377,"column_start":9,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1673}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":215558,"byte_end":215580,"line_start":385,"line_end":385,"column_start":9,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1678}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":216451,"byte_end":216463,"line_start":413,"line_end":413,"column_start":9,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":216617,"byte_end":216629,"line_start":418,"line_end":418,"column_start":9,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":216721,"byte_end":216733,"line_start":423,"line_end":423,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1693}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":216964,"byte_end":216976,"line_start":432,"line_end":432,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1697},{"krate":0,"index":1698},{"krate":0,"index":1699},{"krate":0,"index":1700}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":220854,"byte_end":220868,"line_start":41,"line_end":41,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1797}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":221247,"byte_end":221261,"line_start":59,"line_end":59,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1803},{"krate":0,"index":1804},{"krate":0,"index":1805},{"krate":0,"index":1806},{"krate":0,"index":1807},{"krate":0,"index":1808},{"krate":0,"index":1809},{"krate":0,"index":1810}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":232107,"byte_end":232131,"line_start":306,"line_end":306,"column_start":9,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1818}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":232315,"byte_end":232339,"line_start":313,"line_end":313,"column_start":27,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1821}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":232873,"byte_end":232897,"line_start":327,"line_end":327,"column_start":36,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1824}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":233893,"byte_end":233922,"line_start":352,"line_end":352,"column_start":9,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":233998,"byte_end":234027,"line_start":357,"line_end":357,"column_start":9,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1837}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":234235,"byte_end":234264,"line_start":365,"line_end":365,"column_start":9,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1841},{"krate":0,"index":1842}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":235715,"byte_end":235744,"line_start":403,"line_end":403,"column_start":9,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1846}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":235885,"byte_end":235914,"line_start":411,"line_end":411,"column_start":9,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1850}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":237223,"byte_end":237239,"line_start":439,"line_end":439,"column_start":50,"column_end":66},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":237380,"byte_end":237396,"line_start":441,"line_end":441,"column_start":50,"column_end":66},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":237459,"byte_end":237475,"line_start":443,"line_end":443,"column_start":48,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1860}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":237700,"byte_end":237716,"line_start":451,"line_end":451,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1863},{"krate":0,"index":1864},{"krate":0,"index":1865},{"krate":0,"index":1866},{"krate":0,"index":1867}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":242931,"byte_end":242961,"line_start":582,"line_end":582,"column_start":13,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1892}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":243171,"byte_end":243201,"line_start":589,"line_end":589,"column_start":31,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1895}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":243813,"byte_end":243843,"line_start":605,"line_end":605,"column_start":40,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":1898}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":244927,"byte_end":244962,"line_start":630,"line_end":630,"column_start":13,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":245046,"byte_end":245081,"line_start":635,"line_end":635,"column_start":13,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1908}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":245332,"byte_end":245367,"line_start":644,"line_end":644,"column_start":13,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1911},{"krate":0,"index":1912}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":247034,"byte_end":247069,"line_start":688,"line_end":688,"column_start":13,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1915}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":247230,"byte_end":247265,"line_start":696,"line_end":696,"column_start":13,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1918}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":248581,"byte_end":248603,"line_start":722,"line_end":722,"column_start":41,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1924}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":248923,"byte_end":248945,"line_start":733,"line_end":733,"column_start":13,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":249111,"byte_end":249133,"line_start":738,"line_end":738,"column_start":13,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":249217,"byte_end":249239,"line_start":743,"line_end":743,"column_start":13,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1931}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":249496,"byte_end":249518,"line_start":752,"line_end":752,"column_start":31,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1934},{"krate":0,"index":1935},{"krate":0,"index":1936},{"krate":0,"index":1937},{"krate":0,"index":1938}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/clock.rs","byte_start":254818,"byte_end":254827,"line_start":34,"line_end":34,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2008}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/clock.rs","byte_start":255009,"byte_end":255018,"line_start":41,"line_end":41,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2010},{"krate":0,"index":2011}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/clock.rs","byte_start":255606,"byte_end":255615,"line_start":60,"line_end":60,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2013}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/clock.rs","byte_start":256033,"byte_end":256041,"line_start":77,"line_end":77,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2022}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Inherent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/clock.rs","byte_start":256193,"byte_end":256201,"line_start":83,"line_end":83,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2024}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/clock.rs","byte_start":256390,"byte_end":256398,"line_start":92,"line_end":92,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2026}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Inherent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":257632,"byte_end":257647,"line_start":39,"line_end":39,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2093}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":257885,"byte_end":257900,"line_start":50,"line_end":50,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2095}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":258150,"byte_end":258165,"line_start":58,"line_end":58,"column_start":13,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":258190,"byte_end":258205,"line_start":60,"line_end":60,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2098}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":258442,"byte_end":258457,"line_start":70,"line_end":70,"column_start":14,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2100}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Inherent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":258819,"byte_end":258829,"line_start":84,"line_end":84,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2105},{"krate":0,"index":2106},{"krate":0,"index":2107},{"krate":0,"index":2108},{"krate":0,"index":2110}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":264809,"byte_end":264828,"line_start":238,"line_end":238,"column_start":9,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":264964,"byte_end":264983,"line_start":243,"line_end":243,"column_start":9,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":265047,"byte_end":265066,"line_start":247,"line_end":247,"column_start":48,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":2129}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Inherent","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":265234,"byte_end":265253,"line_start":253,"line_end":253,"column_start":27,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2132},{"krate":0,"index":2133},{"krate":0,"index":2134},{"krate":0,"index":2135}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":267010,"byte_end":267029,"line_start":296,"line_end":296,"column_start":42,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2138},{"krate":0,"index":2139}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":267639,"byte_end":267658,"line_start":313,"line_end":313,"column_start":37,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2142},{"krate":0,"index":2143}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":268349,"byte_end":268368,"line_start":335,"line_end":335,"column_start":43,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2146},{"krate":0,"index":2147}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":269074,"byte_end":269090,"line_start":358,"line_end":358,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2154}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":269249,"byte_end":269265,"line_start":364,"line_end":364,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2157},{"krate":0,"index":2158}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":270215,"byte_end":270231,"line_start":391,"line_end":391,"column_start":26,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2161}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":270332,"byte_end":270348,"line_start":397,"line_end":397,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2164}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":271088,"byte_end":271099,"line_start":417,"line_end":417,"column_start":26,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":271138,"byte_end":271149,"line_start":419,"line_end":419,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2172}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":271303,"byte_end":271314,"line_start":425,"line_end":425,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2175},{"krate":0,"index":2176}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":271705,"byte_end":271716,"line_start":438,"line_end":438,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2180}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":9502,"byte_end":9508,"line_start":225,"line_end":225,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":24}},{"kind":"Mod","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":9602,"byte_end":9609,"line_start":231,"line_end":231,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":234}},{"kind":"Mod","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":9619,"byte_end":9623,"line_start":232,"line_end":232,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1418}},{"kind":"Mod","span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/lib.rs","byte_start":9633,"byte_end":9638,"line_start":233,"line_end":233,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1994}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/noop_lock.rs","byte_start":10001,"byte_end":10009,"line_start":13,"line_end":13,"column_start":26,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":2218},"to":{"krate":18,"index":32}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":14313,"byte_end":14321,"line_start":61,"line_end":61,"column_start":33,"column_end":41},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":53},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":14678,"byte_end":14686,"line_start":76,"line_end":76,"column_start":12,"column_end":20},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":53},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":14963,"byte_end":14971,"line_start":88,"line_end":88,"column_start":24,"column_end":32},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":53},"to":{"krate":0,"index":43}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":16650,"byte_end":16658,"line_start":153,"line_end":153,"column_start":21,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":53},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":17845,"byte_end":17857,"line_start":188,"line_end":188,"column_start":34,"column_end":46},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":89},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":18186,"byte_end":18198,"line_start":200,"line_end":200,"column_start":25,"column_end":37},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":89},"to":{"krate":0,"index":43}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":19760,"byte_end":19774,"line_start":258,"line_end":258,"column_start":34,"column_end":48},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":106},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/buffer/ring_buffer.rs","byte_start":20109,"byte_end":20123,"line_start":270,"line_end":270,"column_start":25,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":106},"to":{"krate":0,"index":43}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/intrusive_double_linked_list.rs","byte_start":23595,"byte_end":23603,"line_start":23,"line_end":23,"column_start":9,"column_end":17},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":2522},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/intrusive_double_linked_list.rs","byte_start":23862,"byte_end":23870,"line_start":35,"line_end":35,"column_start":19,"column_end":27},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2522},"to":{"krate":2,"index":3227}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/intrusive_double_linked_list.rs","byte_start":23975,"byte_end":23983,"line_start":43,"line_end":43,"column_start":22,"column_end":30},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2522},"to":{"krate":2,"index":3240}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/intrusive_double_linked_list.rs","byte_start":24292,"byte_end":24302,"line_start":57,"line_end":57,"column_start":9,"column_end":19},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":2531},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/intrusive_pairing_heap.rs","byte_start":48790,"byte_end":48798,"line_start":31,"line_end":31,"column_start":19,"column_end":27},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":201},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/intrusive_pairing_heap.rs","byte_start":49963,"byte_end":49971,"line_start":64,"line_end":64,"column_start":9,"column_end":17},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":2538},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/intrusive_pairing_heap.rs","byte_start":50517,"byte_end":50525,"line_start":88,"line_end":88,"column_start":19,"column_end":27},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2538},"to":{"krate":2,"index":3227}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/intrusive_pairing_heap.rs","byte_start":50630,"byte_end":50638,"line_start":96,"line_end":96,"column_start":22,"column_end":30},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":2538},"to":{"krate":2,"index":3240}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/intrusive_pairing_heap.rs","byte_start":54986,"byte_end":54997,"line_start":233,"line_end":233,"column_start":14,"column_end":25},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":2549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/error.rs","byte_start":64708,"byte_end":64723,"line_start":20,"line_end":20,"column_start":6,"column_end":21},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":2568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/error.rs","byte_start":65356,"byte_end":65368,"line_start":48,"line_end":48,"column_start":9,"column_end":21},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":2581},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":66546,"byte_end":66557,"line_start":19,"line_end":19,"column_start":6,"column_end":17},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":2598},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":67704,"byte_end":67722,"line_start":59,"line_end":59,"column_start":6,"column_end":24},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":2629},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":68640,"byte_end":68658,"line_start":91,"line_end":91,"column_start":30,"column_end":48},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":289},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":68955,"byte_end":68973,"line_start":103,"line_end":103,"column_start":9,"column_end":27},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":289},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":71020,"byte_end":71040,"line_start":163,"line_end":163,"column_start":9,"column_end":29},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":308},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":71112,"byte_end":71132,"line_start":168,"line_end":168,"column_start":9,"column_end":29},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":308},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":71323,"byte_end":71343,"line_start":175,"line_end":175,"column_start":35,"column_end":55},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":308},"to":{"krate":2,"index":12710}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":72416,"byte_end":72436,"line_start":204,"line_end":204,"column_start":40,"column_end":60},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":308},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":72567,"byte_end":72587,"line_start":210,"line_end":210,"column_start":33,"column_end":53},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":308},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":73930,"byte_end":73947,"line_start":240,"line_end":240,"column_start":9,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":340},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":74019,"byte_end":74036,"line_start":245,"line_end":245,"column_start":9,"column_end":26},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":340},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":74213,"byte_end":74230,"line_start":252,"line_end":252,"column_start":24,"column_end":41},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":340},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":74646,"byte_end":74663,"line_start":266,"line_end":266,"column_start":35,"column_end":52},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":340},"to":{"krate":2,"index":12710}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":76169,"byte_end":76186,"line_start":306,"line_end":306,"column_start":40,"column_end":57},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":340},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":76317,"byte_end":76334,"line_start":312,"line_end":312,"column_start":33,"column_end":50},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":340},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":77944,"byte_end":77964,"line_start":350,"line_end":350,"column_start":17,"column_end":37},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":381},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":78048,"byte_end":78068,"line_start":354,"line_end":354,"column_start":49,"column_end":69},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":381},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":78291,"byte_end":78311,"line_start":360,"line_end":360,"column_start":39,"column_end":59},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":381},"to":{"krate":2,"index":12710}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":79721,"byte_end":79741,"line_start":396,"line_end":396,"column_start":44,"column_end":64},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":381},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":79904,"byte_end":79924,"line_start":402,"line_end":402,"column_start":37,"column_end":57},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":381},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":81279,"byte_end":81296,"line_start":430,"line_end":430,"column_start":28,"column_end":45},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":407},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":82033,"byte_end":82050,"line_start":447,"line_end":447,"column_start":56,"column_end":73},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":407},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":82117,"byte_end":82134,"line_start":449,"line_end":449,"column_start":49,"column_end":66},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":407},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":82354,"byte_end":82371,"line_start":455,"line_end":455,"column_start":39,"column_end":56},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":407},"to":{"krate":2,"index":12710}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":84241,"byte_end":84258,"line_start":499,"line_end":499,"column_start":44,"column_end":61},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":407},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/channel_future.rs","byte_start":84421,"byte_end":84438,"line_start":505,"line_end":505,"column_start":37,"column_end":54},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":407},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":86225,"byte_end":86237,"line_start":39,"line_end":39,"column_start":9,"column_end":21},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":520},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":90847,"byte_end":90868,"line_start":155,"line_end":155,"column_start":9,"column_end":30},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":532},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":91018,"byte_end":91039,"line_start":160,"line_end":160,"column_start":9,"column_end":30},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":532},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":91113,"byte_end":91134,"line_start":165,"line_end":165,"column_start":9,"column_end":30},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":532},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":91317,"byte_end":91338,"line_start":172,"line_end":172,"column_start":30,"column_end":51},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":532},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":92731,"byte_end":92752,"line_start":212,"line_end":212,"column_start":9,"column_end":30},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":532},"to":{"krate":0,"index":304}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":94259,"byte_end":94291,"line_start":267,"line_end":267,"column_start":17,"column_end":49},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":572},"to":{"krate":0,"index":304}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":95940,"byte_end":95960,"line_start":316,"line_end":316,"column_start":49,"column_end":69},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":581},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":96241,"byte_end":96263,"line_start":325,"line_end":325,"column_start":49,"column_end":71},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":585},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":96534,"byte_end":96554,"line_start":334,"line_end":334,"column_start":37,"column_end":57},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":581},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":96917,"byte_end":96939,"line_start":345,"line_end":345,"column_start":37,"column_end":59},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":585},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":98281,"byte_end":98301,"line_start":384,"line_end":384,"column_start":28,"column_end":48},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":581},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot.rs","byte_start":98906,"byte_end":98928,"line_start":399,"line_end":399,"column_start":28,"column_end":50},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":102140,"byte_end":102152,"line_start":40,"line_end":40,"column_start":9,"column_end":21},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":689},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":106876,"byte_end":106906,"line_start":159,"line_end":159,"column_start":9,"column_end":39},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":701},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":107056,"byte_end":107086,"line_start":164,"line_end":164,"column_start":9,"column_end":39},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":701},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":107160,"byte_end":107190,"line_start":169,"line_end":169,"column_start":9,"column_end":39},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":701},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":107382,"byte_end":107412,"line_start":176,"line_end":176,"column_start":30,"column_end":60},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":701},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":108852,"byte_end":108882,"line_start":219,"line_end":219,"column_start":9,"column_end":39},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":701},"to":{"krate":0,"index":304}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":110477,"byte_end":110509,"line_start":278,"line_end":278,"column_start":17,"column_end":49},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":741},"to":{"krate":0,"index":304}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":112317,"byte_end":112348,"line_start":330,"line_end":330,"column_start":38,"column_end":69},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":754},"to":{"krate":2,"index":2637}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":112663,"byte_end":112692,"line_start":343,"line_end":343,"column_start":17,"column_end":46},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":750},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":113016,"byte_end":113047,"line_start":354,"line_end":354,"column_start":17,"column_end":48},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":754},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":113349,"byte_end":113378,"line_start":364,"line_end":364,"column_start":37,"column_end":66},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":750},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":113763,"byte_end":113794,"line_start":376,"line_end":376,"column_start":37,"column_end":68},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":754},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":115447,"byte_end":115476,"line_start":418,"line_end":418,"column_start":28,"column_end":57},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":750},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/oneshot_broadcast.rs","byte_start":116103,"byte_end":116134,"line_start":434,"line_end":434,"column_start":28,"column_end":59},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":754},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":118884,"byte_end":118891,"line_start":23,"line_end":23,"column_start":6,"column_end":13},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":2646},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":119700,"byte_end":119718,"line_start":52,"line_end":52,"column_start":6,"column_end":24},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":2677},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":121593,"byte_end":121611,"line_start":106,"line_end":106,"column_start":9,"column_end":27},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":870},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":121690,"byte_end":121708,"line_start":111,"line_end":111,"column_start":9,"column_end":27},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":870},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":121904,"byte_end":121922,"line_start":118,"line_end":118,"column_start":42,"column_end":60},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":870},"to":{"krate":2,"index":12710}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":123045,"byte_end":123063,"line_start":151,"line_end":151,"column_start":9,"column_end":27},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":870},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":123201,"byte_end":123219,"line_start":158,"line_end":158,"column_start":40,"column_end":58},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":870},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":124529,"byte_end":124541,"line_start":194,"line_end":194,"column_start":9,"column_end":21},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":904},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":129626,"byte_end":129654,"line_start":327,"line_end":327,"column_start":9,"column_end":37},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":918},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":129804,"byte_end":129832,"line_start":332,"line_end":332,"column_start":9,"column_end":37},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":918},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":129906,"byte_end":129934,"line_start":337,"line_end":337,"column_start":9,"column_end":37},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":918},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":130124,"byte_end":130152,"line_start":344,"line_end":344,"column_start":30,"column_end":58},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":918},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":132359,"byte_end":132387,"line_start":407,"line_end":407,"column_start":9,"column_end":37},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":918},"to":{"krate":0,"index":866}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":134272,"byte_end":134311,"line_start":469,"line_end":469,"column_start":17,"column_end":56},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":963},"to":{"krate":0,"index":866}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":136315,"byte_end":136333,"line_start":515,"line_end":515,"column_start":17,"column_end":35},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":974},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":136417,"byte_end":136435,"line_start":519,"line_end":519,"column_start":49,"column_end":67},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":974},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":136656,"byte_end":136674,"line_start":525,"line_end":525,"column_start":39,"column_end":57},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":974},"to":{"krate":2,"index":12710}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":138100,"byte_end":138118,"line_start":561,"line_end":561,"column_start":44,"column_end":62},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":974},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":138281,"byte_end":138299,"line_start":567,"line_end":567,"column_start":37,"column_end":55},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":974},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":139854,"byte_end":139872,"line_start":607,"line_end":607,"column_start":49,"column_end":67},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1000},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":140173,"byte_end":140193,"line_start":617,"line_end":617,"column_start":49,"column_end":69},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1004},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":140485,"byte_end":140503,"line_start":627,"line_end":627,"column_start":38,"column_end":56},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1000},"to":{"krate":2,"index":2637}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":141035,"byte_end":141053,"line_start":644,"line_end":644,"column_start":37,"column_end":55},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1000},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":141624,"byte_end":141644,"line_start":660,"line_end":660,"column_start":38,"column_end":58},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1004},"to":{"krate":2,"index":2637}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":142180,"byte_end":142200,"line_start":677,"line_end":677,"column_start":37,"column_end":57},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1004},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":143898,"byte_end":143916,"line_start":724,"line_end":724,"column_start":28,"column_end":46},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1000},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/state_broadcast.rs","byte_start":144543,"byte_end":144563,"line_start":740,"line_end":740,"column_start":28,"column_end":48},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1004},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":150077,"byte_end":150089,"line_start":82,"line_end":82,"column_start":12,"column_end":24},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1167},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":162036,"byte_end":162050,"line_start":378,"line_end":378,"column_start":9,"column_end":23},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1188},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":162245,"byte_end":162259,"line_start":385,"line_end":385,"column_start":9,"column_end":23},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1188},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":162371,"byte_end":162385,"line_start":392,"line_end":392,"column_start":9,"column_end":23},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1188},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":162592,"byte_end":162606,"line_start":401,"line_end":401,"column_start":33,"column_end":47},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":166313,"byte_end":166327,"line_start":503,"line_end":503,"column_start":9,"column_end":23},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1188},"to":{"krate":0,"index":300}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":167002,"byte_end":167016,"line_start":531,"line_end":531,"column_start":9,"column_end":23},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1188},"to":{"krate":0,"index":304}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":168351,"byte_end":168364,"line_start":579,"line_end":579,"column_start":38,"column_end":51},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2683},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":170309,"byte_end":170322,"line_start":633,"line_end":633,"column_start":43,"column_end":56},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2683},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":173100,"byte_end":173125,"line_start":708,"line_end":708,"column_start":17,"column_end":42},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1276},"to":{"krate":0,"index":304}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":173939,"byte_end":173964,"line_start":732,"line_end":732,"column_start":17,"column_end":42},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1276},"to":{"krate":0,"index":300}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":175744,"byte_end":175757,"line_start":781,"line_end":781,"column_start":52,"column_end":65},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1295},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":176071,"byte_end":176086,"line_start":791,"line_end":791,"column_start":52,"column_end":67},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1300},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":176391,"byte_end":176404,"line_start":801,"line_end":801,"column_start":41,"column_end":54},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1295},"to":{"krate":2,"index":2637}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":176949,"byte_end":176962,"line_start":818,"line_end":818,"column_start":40,"column_end":53},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1295},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":177551,"byte_end":177566,"line_start":834,"line_end":834,"column_start":41,"column_end":56},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1300},"to":{"krate":2,"index":2637}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":178115,"byte_end":178130,"line_start":851,"line_end":851,"column_start":40,"column_end":55},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1300},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":180221,"byte_end":180234,"line_start":906,"line_end":906,"column_start":31,"column_end":44},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1295},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":182234,"byte_end":182249,"line_start":946,"line_end":946,"column_start":31,"column_end":46},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":184556,"byte_end":184568,"line_start":1003,"line_end":1003,"column_start":31,"column_end":43},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2696},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":185096,"byte_end":185108,"line_start":1017,"line_end":1017,"column_start":42,"column_end":54},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2696},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/channel/mpmc.rs","byte_start":186688,"byte_end":186700,"line_start":1063,"line_end":1063,"column_start":47,"column_end":59},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2696},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/manual_reset_event.rs","byte_start":191924,"byte_end":191938,"line_start":35,"line_end":35,"column_start":6,"column_end":20},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1462},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/manual_reset_event.rs","byte_start":192257,"byte_end":192267,"line_start":51,"line_end":51,"column_start":6,"column_end":16},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1467},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/manual_reset_event.rs","byte_start":196431,"byte_end":196454,"line_start":157,"line_end":157,"column_start":9,"column_end":32},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1478},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/manual_reset_event.rs","byte_start":196596,"byte_end":196619,"line_start":162,"line_end":162,"column_start":9,"column_end":32},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1478},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/manual_reset_event.rs","byte_start":196687,"byte_end":196710,"line_start":167,"line_end":167,"column_start":9,"column_end":32},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1478},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/manual_reset_event.rs","byte_start":196882,"byte_end":196905,"line_start":174,"line_end":174,"column_start":27,"column_end":50},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1478},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/manual_reset_event.rs","byte_start":198794,"byte_end":198819,"line_start":233,"line_end":233,"column_start":9,"column_end":34},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1497},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/manual_reset_event.rs","byte_start":198895,"byte_end":198920,"line_start":238,"line_end":238,"column_start":9,"column_end":34},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1497},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/manual_reset_event.rs","byte_start":199124,"byte_end":199149,"line_start":246,"line_end":246,"column_start":9,"column_end":34},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1497},"to":{"krate":2,"index":12710}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/manual_reset_event.rs","byte_start":200188,"byte_end":200213,"line_start":276,"line_end":276,"column_start":9,"column_end":34},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1497},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/manual_reset_event.rs","byte_start":200350,"byte_end":200375,"line_start":284,"line_end":284,"column_start":9,"column_end":34},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1497},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":202706,"byte_end":202720,"line_start":43,"line_end":43,"column_start":6,"column_end":20},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1605},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":203039,"byte_end":203049,"line_start":60,"line_end":60,"column_start":6,"column_end":16},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1610},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":212262,"byte_end":212279,"line_start":283,"line_end":283,"column_start":9,"column_end":26},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1623},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":212471,"byte_end":212488,"line_start":290,"line_end":290,"column_start":39,"column_end":56},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1623},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":212742,"byte_end":212759,"line_start":300,"line_end":300,"column_start":40,"column_end":57},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1623},"to":{"krate":2,"index":3227}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":212924,"byte_end":212941,"line_start":307,"line_end":307,"column_start":43,"column_end":60},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1623},"to":{"krate":2,"index":3240}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":213210,"byte_end":213227,"line_start":316,"line_end":316,"column_start":9,"column_end":26},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1623},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":213882,"byte_end":213904,"line_start":333,"line_end":333,"column_start":9,"column_end":31},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1648},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":214004,"byte_end":214026,"line_start":338,"line_end":338,"column_start":9,"column_end":31},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1648},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":214233,"byte_end":214255,"line_start":346,"line_end":346,"column_start":9,"column_end":31},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1648},"to":{"krate":2,"index":12710}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":215393,"byte_end":215415,"line_start":377,"line_end":377,"column_start":9,"column_end":31},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1648},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":215558,"byte_end":215580,"line_start":385,"line_end":385,"column_start":9,"column_end":31},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1648},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":216451,"byte_end":216463,"line_start":413,"line_end":413,"column_start":9,"column_end":21},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1679},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":216617,"byte_end":216629,"line_start":418,"line_end":418,"column_start":9,"column_end":21},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1679},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":216721,"byte_end":216733,"line_start":423,"line_end":423,"column_start":9,"column_end":21},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1679},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/mutex.rs","byte_start":216964,"byte_end":216976,"line_start":432,"line_end":432,"column_start":30,"column_end":42},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1679},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":220854,"byte_end":220868,"line_start":41,"line_end":41,"column_start":6,"column_end":20},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":1792},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":221247,"byte_end":221261,"line_start":59,"line_end":59,"column_start":6,"column_end":20},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1798},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":232107,"byte_end":232131,"line_start":306,"line_end":306,"column_start":9,"column_end":33},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1811},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":232315,"byte_end":232339,"line_start":313,"line_end":313,"column_start":27,"column_end":51},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1811},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":232873,"byte_end":232897,"line_start":327,"line_end":327,"column_start":36,"column_end":60},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1811},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":233893,"byte_end":233922,"line_start":352,"line_end":352,"column_start":9,"column_end":38},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1825},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":233998,"byte_end":234027,"line_start":357,"line_end":357,"column_start":9,"column_end":38},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":1825},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":234235,"byte_end":234264,"line_start":365,"line_end":365,"column_start":9,"column_end":38},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1825},"to":{"krate":2,"index":12710}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":235715,"byte_end":235744,"line_start":403,"line_end":403,"column_start":9,"column_end":38},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1825},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":235885,"byte_end":235914,"line_start":411,"line_end":411,"column_start":9,"column_end":38},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1825},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":237223,"byte_end":237239,"line_start":439,"line_end":439,"column_start":50,"column_end":66},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1851},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":237380,"byte_end":237396,"line_start":441,"line_end":441,"column_start":50,"column_end":66},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":1851},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":237459,"byte_end":237475,"line_start":443,"line_end":443,"column_start":48,"column_end":64},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1851},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":237700,"byte_end":237716,"line_start":451,"line_end":451,"column_start":27,"column_end":43},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":242931,"byte_end":242961,"line_start":582,"line_end":582,"column_start":13,"column_end":43},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1886},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":243171,"byte_end":243201,"line_start":589,"line_end":589,"column_start":31,"column_end":61},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":1886},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":243813,"byte_end":243843,"line_start":605,"line_end":605,"column_start":40,"column_end":70},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":1886},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":244927,"byte_end":244962,"line_start":630,"line_end":630,"column_start":13,"column_end":48},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":1899},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":245046,"byte_end":245081,"line_start":635,"line_end":635,"column_start":13,"column_end":48},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":1899},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":245332,"byte_end":245367,"line_start":644,"line_end":644,"column_start":13,"column_end":48},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":1899},"to":{"krate":2,"index":12710}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":247034,"byte_end":247069,"line_start":688,"line_end":688,"column_start":13,"column_end":48},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":1899},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":247230,"byte_end":247265,"line_start":696,"line_end":696,"column_start":13,"column_end":48},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":1899},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":248581,"byte_end":248603,"line_start":722,"line_end":722,"column_start":41,"column_end":63},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":1919},"to":{"krate":2,"index":2637}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":248923,"byte_end":248945,"line_start":733,"line_end":733,"column_start":13,"column_end":35},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":1919},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":249111,"byte_end":249133,"line_start":738,"line_end":738,"column_start":13,"column_end":35},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":1919},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":249217,"byte_end":249239,"line_start":743,"line_end":743,"column_start":13,"column_end":35},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":1919},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/sync/semaphore.rs","byte_start":249496,"byte_end":249518,"line_start":752,"line_end":752,"column_start":31,"column_end":53},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":1919},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/clock.rs","byte_start":253951,"byte_end":253955,"line_start":8,"line_end":8,"column_start":18,"column_end":22},"kind":"SuperTrait","from":{"krate":2,"index":3028},"to":{"krate":0,"index":2003}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/clock.rs","byte_start":254818,"byte_end":254827,"line_start":34,"line_end":34,"column_start":27,"column_end":36},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":2005},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/clock.rs","byte_start":255009,"byte_end":255018,"line_start":41,"line_end":41,"column_start":6,"column_end":15},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":2005},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/clock.rs","byte_start":255606,"byte_end":255615,"line_start":60,"line_end":60,"column_start":16,"column_end":25},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":2005},"to":{"krate":0,"index":2003}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/clock.rs","byte_start":256033,"byte_end":256041,"line_start":77,"line_end":77,"column_start":31,"column_end":39},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":2019},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/clock.rs","byte_start":256193,"byte_end":256201,"line_start":83,"line_end":83,"column_start":10,"column_end":18},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":2019},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/clock.rs","byte_start":256390,"byte_end":256398,"line_start":92,"line_end":92,"column_start":20,"column_end":28},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":2019},"to":{"krate":0,"index":2003}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":257632,"byte_end":257647,"line_start":39,"line_end":39,"column_start":6,"column_end":21},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":2088},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":257885,"byte_end":257900,"line_start":50,"line_end":50,"column_start":20,"column_end":35},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":2088},"to":{"krate":2,"index":2667}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":258150,"byte_end":258165,"line_start":58,"line_end":58,"column_start":13,"column_end":28},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":2088},"to":{"krate":2,"index":2672}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":258190,"byte_end":258205,"line_start":60,"line_end":60,"column_start":21,"column_end":36},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":2088},"to":{"krate":2,"index":2714}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":258442,"byte_end":258457,"line_start":70,"line_end":70,"column_start":14,"column_end":29},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":2088},"to":{"krate":2,"index":2703}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":258819,"byte_end":258829,"line_start":84,"line_end":84,"column_start":6,"column_end":16},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":2101},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":264809,"byte_end":264828,"line_start":238,"line_end":238,"column_start":9,"column_end":28},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":2120},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":264964,"byte_end":264983,"line_start":243,"line_end":243,"column_start":9,"column_end":28},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":2120},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":265047,"byte_end":265066,"line_start":247,"line_end":247,"column_start":48,"column_end":67},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":2120},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":265234,"byte_end":265253,"line_start":253,"line_end":253,"column_start":27,"column_end":46},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":2120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":267010,"byte_end":267029,"line_start":296,"line_end":296,"column_start":42,"column_end":61},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":2120},"to":{"krate":0,"index":2114}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":267639,"byte_end":267658,"line_start":313,"line_end":313,"column_start":37,"column_end":56},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":2120},"to":{"krate":0,"index":2117}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":268349,"byte_end":268368,"line_start":335,"line_end":335,"column_start":43,"column_end":62},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":2120},"to":{"krate":0,"index":2111}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":269074,"byte_end":269090,"line_start":358,"line_end":358,"column_start":31,"column_end":47},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":2148},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":269249,"byte_end":269265,"line_start":364,"line_end":364,"column_start":21,"column_end":37},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":2148},"to":{"krate":2,"index":12710}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":270215,"byte_end":270231,"line_start":391,"line_end":391,"column_start":26,"column_end":42},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":2148},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":270332,"byte_end":270348,"line_start":397,"line_end":397,"column_start":19,"column_end":35},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":2148},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":271088,"byte_end":271099,"line_start":417,"line_end":417,"column_start":26,"column_end":37},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":2165},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":271138,"byte_end":271149,"line_start":419,"line_end":419,"column_start":31,"column_end":42},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":2165},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":271303,"byte_end":271314,"line_start":425,"line_end":425,"column_start":21,"column_end":32},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":2165},"to":{"krate":2,"index":12710}},{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-intrusive-0.4.0/src/timer/timer.rs","byte_start":271705,"byte_end":271716,"line_start":438,"line_end":438,"column_start":26,"column_end":37},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":2165},"to":{"krate":20,"index":27}}]}
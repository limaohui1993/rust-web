{"message":"error communicating with database: Connection refused (os error 61)","code":null,"level":"error","spans":[{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.5.11/src/macros.rs","byte_start":15799,"byte_end":15870,"line_start":315,"line_end":315,"column_start":9,"column_end":80,"is_primary":true,"text":[{"text":"        $crate::sqlx_macros::expand_query!(source = $query, args = [$($args)*])","highlight_start":9,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.5.11/src/macros.rs","byte_start":15799,"byte_end":15870,"line_start":315,"line_end":315,"column_start":9,"column_end":80,"is_primary":false,"text":[{"text":"        $crate::sqlx_macros::expand_query!(source = $query, args = [$($args)*])","highlight_start":9,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":589,"byte_end":690,"line_start":25,"line_end":28,"column_start":21,"column_end":6,"is_primary":false,"text":[{"text":"    let course_rows=sqlx::query!(","highlight_start":21,"highlight_end":34},{"text":"        r#\"select id, teacher_id, name, time from course where id=$1\"#,","highlight_start":1,"highlight_end":72},{"text":"        1","highlight_start":1,"highlight_end":10},{"text":"    )","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"sqlx::query!","def_site_span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.5.11/src/macros.rs","byte_start":14891,"byte_end":15880,"line_start":301,"line_end":317,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! query (","highlight_start":1,"highlight_end":1},{"text":"    // in Rust 1.45 we can now invoke proc macros in expression position","highlight_start":1,"highlight_end":1},{"text":"    ($query:expr) => ({","highlight_start":1,"highlight_end":1},{"text":"        $crate::sqlx_macros::expand_query!(source = $query)","highlight_start":1,"highlight_end":1},{"text":"    });","highlight_start":1,"highlight_end":1},{"text":"    // RFC: this semantically should be `$($args:expr),*` (with `$(,)?` to allow trailing comma)","highlight_start":1,"highlight_end":1},{"text":"    // but that doesn't work in 1.45 because `expr` fragments get wrapped in a way that changes","highlight_start":1,"highlight_end":1},{"text":"    // their hygiene, which is fixed in 1.46 so this is technically just a temp. workaround.","highlight_start":1,"highlight_end":1},{"text":"    // My question is: do we care?","highlight_start":1,"highlight_end":1},{"text":"    // I was hoping using the `expr` fragment might aid code completion but it doesn't in my","highlight_start":1,"highlight_end":1},{"text":"    // experience, at least not with IntelliJ-Rust at the time of writing (version 0.3.126.3220-201)","highlight_start":1,"highlight_end":1},{"text":"    // so really the only benefit is making the macros _slightly_ self-documenting, but it's","highlight_start":1,"highlight_end":1},{"text":"    // not like it makes them magically understandable at-a-glance.","highlight_start":1,"highlight_end":1},{"text":"    ($query:expr, $($args:tt)*) => ({","highlight_start":1,"highlight_end":1},{"text":"        $crate::sqlx_macros::expand_query!(source = $query, args = [$($args)*])","highlight_start":1,"highlight_end":1},{"text":"    })","highlight_start":1,"highlight_end":1},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::sqlx_macros::expand_query!","def_site_span":{"file_name":"/Users/limaohui/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-macros-0.5.11/src/lib.rs","byte_start":538,"byte_end":592,"line_start":28,"line_end":28,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"pub fn expand_query(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: error communicating with database: Connection refused (os error 61)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:25:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m    let course_rows=sqlx::query!(\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m_____________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        r#\"select id, teacher_id, name, time from course where id=$1\"#,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        1\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    )\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::sqlx_macros::expand_query` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"aborting due to previous error","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to previous error\u001b[0m\n\n"}
